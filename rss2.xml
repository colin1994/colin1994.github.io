<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Colin&#39;s Nest</title>
    <link>http://http://colin1994.github.io/</link>
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description></description>
    <pubDate>Sat, 18 Jun 2016 04:23:42 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>Call Directory Extension 初探</title>
      <link>http://http://colin1994.github.io/2016/06/17/Call-Directory-Extension-Study/</link>
      <guid>http://http://colin1994.github.io/2016/06/17/Call-Directory-Extension-Study/</guid>
      <pubDate>Fri, 17 Jun 2016 14:33:15 GMT</pubDate>
      <description>
      
        &lt;blockquote&gt;
&lt;p&gt;iOS 10中引入了许多令人振奋的新特性，其中 CallKit让我特别感兴趣。这是一个非常重要的 API，继2014年苹果推出 VoIP证书后，这次 VoIP 接口的开放，以及一个全新的 App Extension，简直是VOIP的福音，可见苹果对VOIP的重视。并且，&lt;strong&gt;”that enable call blocking and caller identification. You can create an app extension that can associate a phone number with a name or tell the system when a number should be blocked.”&lt;/strong&gt; 这意味着现在可以通过 Call Directory Extension 来实现电话黑名单功能了。Cool~ 本文简单阐述了如果实现简单的来电黑名单功能。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;阅读须知：目前学习的资料也仅限相关 API，另外 API也没有详细的注释，所以本文主要是个人探索所得，如果有什么错误，还望见谅并予以指正。现在，让我们开始吧~&lt;/strong&gt;&lt;/p&gt;
      
      </description>
      
      <content:encoded>&lt;blockquote&gt;
&lt;p&gt;iOS 10中引入了许多令人振奋的新特性，其中 CallKit让我特别感兴趣。这是一个非常重要的 API，继2014年苹果推出 VoIP证书后，这次 VoIP 接口的开放，以及一个全新的 App Extension，简直是VOIP的福音，可见苹果对VOIP的重视。并且，&lt;strong&gt;”that enable call blocking and caller identification. You can create an app extension that can associate a phone number with a name or tell the system when a number should be blocked.”&lt;/strong&gt; 这意味着现在可以通过 Call Directory Extension 来实现电话黑名单功能了。Cool~ 本文简单阐述了如果实现简单的来电黑名单功能。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;阅读须知：目前学习的资料也仅限相关 API，另外 API也没有详细的注释，所以本文主要是个人探索所得，如果有什么错误，还望见谅并予以指正。现在，让我们开始吧~&lt;/strong&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;API介绍&quot;&gt;API介绍&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Extension&lt;/strong&gt; 一直给我的印象就是很轻量，单一的，就如之前接触的  &lt;a href=&quot;http://colin1994.github.io/2016/03/12/Photo-Editing-Extension/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Photo Editing Extension&lt;/a&gt; 一样，使用起来十分简单。这次的 &lt;strong&gt;Call Directory Extension&lt;/strong&gt; 也不出例外，出奇的简单。只涉及了两个类，四个方法。下面我们逐一介绍：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  CXCallDirectoryProvider.h&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  CallKit&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  Copyright © 2016 Apple. All rights reserved.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@available&lt;/span&gt;(iOS &lt;span class=&quot;number&quot;&gt;10.0&lt;/span&gt;, *)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;CXCallDirectoryProvider&lt;/span&gt; : &lt;span class=&quot;title&quot;&gt;NSObject&lt;/span&gt;, &lt;span class=&quot;title&quot;&gt;NSExtensionRequestHandling&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;beginRequest&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(with context: CXCallDirectoryExtensionContext)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;首先是第一个类 &lt;strong&gt;CXCallDirectoryProvider&lt;/strong&gt;，它是来电的响应者，为我们提供了 &lt;strong&gt;beginRequest&lt;/strong&gt; 方法，该方法在来电的时候，会自动被调用，所以我们之后将要重写它，来实现黑名单相关逻辑。怎么样，简单吧~ &lt;img src=&quot;http://wanzao2.b0.upaiyun.com/system/pictures/2/original/21.png&quot; alt=&quot;emoji_1&quot;&gt;&lt;/p&gt;
&lt;p&gt;Now, Go on~&lt;/p&gt;
&lt;p&gt;接下来是另外一个类 &lt;strong&gt;CXCallDirectoryExtensionContext&lt;/strong&gt;，它提供了另外三个方法，如下所示：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  CXCallDirectoryExtensionContext.h&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  CallKit&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  Copyright © 2016 Apple. All rights reserved.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@available&lt;/span&gt;(iOS &lt;span class=&quot;number&quot;&gt;10.0&lt;/span&gt;, *)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;CXCallDirectoryExtensionContext&lt;/span&gt; : &lt;span class=&quot;title&quot;&gt;NSExtensionContext&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;addBlockingEntry&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(withNextSequentialPhoneNumber phoneNumber: String)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;addIdentificationEntry&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(withNextSequentialPhoneNumber phoneNumber: String, label: String)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;completeRequest&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(completionHandler completion: &lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;params&quot;&gt;(Bool)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;Swift&lt;/span&gt;.&lt;span class=&quot;type&quot;&gt;Void&lt;/span&gt;)? = &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;不难看出，&lt;strong&gt;CXCallDirectoryExtensionContext&lt;/strong&gt; 主要负责提交我们处理好的请求。说白点，我们利用它来让系统知道，我们对某个来电所做出的判断。 &lt;strong&gt;addBlockingEntry&lt;/strong&gt; 方法，接受一个电话号码字符串，形如 &lt;strong&gt;“+8618…69”&lt;/strong&gt; (PS：不要问我为什么要加区号.. 这都是血与泪的经验)，来直接加入黑名单，也就是不接听该来电。&lt;strong&gt;addIdentificationEntry&lt;/strong&gt; 方法，接受一个电话号码字符串以及对该号码的描述，也就是来电的时候需要显示的内容。 &lt;strong&gt;completeRequest&lt;/strong&gt; 也就是提交之前的处理结果。至此，我们所要做的工作就完成了。&lt;img src=&quot;http://wanzao2.b0.upaiyun.com/system/pictures/16/original/15.png&quot; alt=&quot;emoji_2&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;实战演示&quot;&gt;实战演示&lt;/h2&gt;&lt;p&gt;虽然自认为上面的描述已经够详细了，不过这里还是有必要详细走一遍流程，以免遗漏。&lt;/p&gt;
&lt;p&gt;开发环境：Xcode8.0 Beta + 64位 iOS10设备（至于为什么64位，之后再解释，说多了都是泪..）&lt;/p&gt;
&lt;h3 id=&quot;1-_创建工程&quot;&gt;1. 创建工程&lt;/h3&gt;&lt;p&gt;没什么特别。 &lt;strong&gt;Xcode —&amp;gt; File —&amp;gt; New —&amp;gt; Project&lt;/strong&gt;。随便选个 iOS Application，创建即可。这里我选择开发语言为 Swift，你随意~。&lt;/p&gt;
&lt;p&gt;这里我们的目标是来电黑名单，也就是 Extension部分，所以创建好的 Containing App，不用做什么改动。&lt;/p&gt;
&lt;h3 id=&quot;2-添加_Extension&quot;&gt;2.添加 Extension&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Xcode —&amp;gt; File —&amp;gt; New —&amp;gt; Target&lt;/strong&gt;。创建一个 &lt;strong&gt;Call Directory Extension&lt;/strong&gt;，如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xkc7a.com1.z0.glb.clouddn.com/callExtension_1.jpeg?imageView2/2/w/600&quot; alt=&quot;Extension_1&quot;&gt;&lt;/p&gt;
&lt;p&gt;这里注意下底部的说明， （This extension and the app it is bundled with must be &lt;strong&gt;64-bit only&lt;/strong&gt;）也就是，这个 extension只支持 64位的设备，坑爹有没有！！之前创建太急，没认真看，用那台 5C倒腾了半天，就是出问题。只好狠心把主力机也升级了。&lt;/p&gt;
&lt;p&gt;创建好 Extension，会弹出这样的提示框：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xkc7a.com1.z0.glb.clouddn.com/callExtension_2.jpeg?imageView2/2/w/500&quot; alt=&quot;Extension_2&quot;&gt;&lt;/p&gt;
&lt;p&gt;询问我们是否激活这个 scheme，当然选择激活咯，继续~&lt;/p&gt;
&lt;p&gt;之后只要关注 &lt;strong&gt;xxxHandler.swift&lt;/strong&gt; 即可，xxx是你之前创建的 extension命名。&lt;/p&gt;
&lt;p&gt;这里的相关代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Foundation&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; CallKit&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;CallDirectoryHandler&lt;/span&gt;: &lt;span class=&quot;title&quot;&gt;CXCallDirectoryProvider&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;beginRequest&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(with context: CXCallDirectoryExtensionContext)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	&lt;span class=&quot;comment&quot;&gt;// --- 1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;guard&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; phoneNumbersToBlock = retrievePhoneNumbersToBlock() &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;type&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Unable to retrieve phone numbers to block&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; error = &lt;span class=&quot;type&quot;&gt;NSError&lt;/span&gt;(domain: &lt;span class=&quot;string&quot;&gt;&quot;CallDirectoryHandler&quot;&lt;/span&gt;, code: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, userInfo: &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            context.cancelRequest(withError: error)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// --- 2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; phoneNumber &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; phoneNumbersToBlock &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            context.addBlockingEntry(withNextSequentialPhoneNumber: phoneNumber)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// --- 3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;guard&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; (phoneNumbersToIdentify, phoneNumberIdentificationLabels) = retrievePhoneNumbersToIdentifyAndLabels() &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;type&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Unable to retrieve phone numbers to identify and their labels&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; error = &lt;span class=&quot;type&quot;&gt;NSError&lt;/span&gt;(domain: &lt;span class=&quot;string&quot;&gt;&quot;CallDirectoryHandler&quot;&lt;/span&gt;, code: &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, userInfo: &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            context.cancelRequest(withError: error)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// --- 4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (phoneNumber, label) &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;zip&lt;/span&gt;(phoneNumbersToIdentify, phoneNumberIdentificationLabels) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            context.addIdentificationEntry(withNextSequentialPhoneNumber: phoneNumber, label: label)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// --- 5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        context.completeRequest()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;retrievePhoneNumbersToBlock&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; -&amp;gt; [&lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;]? &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// retrieve list of phone numbers to block&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [&lt;span class=&quot;string&quot;&gt;&quot;+8618xxxx157&quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;retrievePhoneNumbersToIdentifyAndLabels&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; -&amp;gt; (phoneNumbers: [&lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;], labels: [&lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;])? &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// retrieve list of phone numbers to identify, and their labels&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ([&lt;span class=&quot;string&quot;&gt;&quot;+8618xxxx569&quot;&lt;/span&gt;], [&lt;span class=&quot;string&quot;&gt;&quot;测试&quot;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;一个简单的来电黑名单，我们只要补全 &lt;code&gt;retrievePhoneNumbersToBlock&lt;/code&gt; 和 &lt;code&gt;retrievePhoneNumbersToIdentifyAndLabels&lt;/code&gt; 中的相关数据即可，它们分别表示直接加入黑名单的号码以及识别出来，需要判断的号码。&lt;/p&gt;
&lt;p&gt;现在我们具体看一下这个类到底做了什么。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;beginRequest&lt;/code&gt; 重写之前的这个类，它监听到了来电，自动调用。&lt;/p&gt;
&lt;p&gt;在 &lt;strong&gt;// —- 1&lt;/strong&gt; 中，先判断是否成功调用了 &lt;code&gt;retrievePhoneNumbersToBlock&lt;/code&gt; 方法，如果没有，则打印 Log： &lt;strong&gt;Unable to retrieve phone numbers to block&lt;/strong&gt;，然后直接终止这次请求并返回。&lt;/p&gt;
&lt;p&gt;在 &lt;strong&gt;// —- 2&lt;/strong&gt; 中，遍历添加黑名单中的号码，这里的号码将直接拦截。&lt;/p&gt;
&lt;p&gt;在 &lt;strong&gt;// —- 3&lt;/strong&gt; 中，先判断是否成功调用了 &lt;code&gt;retrievePhoneNumbersToIdentifyAndLabels&lt;/code&gt; 方法，如果没有，则打印 Log： &lt;strong&gt;Unable to retrieve phone numbers to identify and their labels&lt;/strong&gt;，然后直接终止这次请求并返回。&lt;/p&gt;
&lt;p&gt;在 &lt;strong&gt;// —- 4&lt;/strong&gt; 中，遍历添加识别后的号码及其描述，这里的号码将连带描述一起显示。&lt;/p&gt;
&lt;p&gt;在 &lt;strong&gt;// —- 5&lt;/strong&gt; 中，完成提交请求。 &lt;/p&gt;
&lt;p&gt;到这里，代码已经全部完成了。&lt;/p&gt;
&lt;h3 id=&quot;3-_开启权限&quot;&gt;3. 开启权限&lt;/h3&gt;&lt;p&gt;之后我们运行该 App到设备中，然后进入设备的设置 —&amp;gt; 电话 —&amp;gt; Call Blocking &amp;amp; Identification，开启我们的 App即可。如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xkc7a.com1.z0.glb.clouddn.com/callExtension_3.png?imageView2/2/h/500&quot; alt=&quot;Extension_3&quot;&gt;&lt;/p&gt;
&lt;p&gt;至此，相关的工作就都完成了，我们的来电黑名单也已经实现了，可以用添加到列表中的号码来测试啦，如下所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xkc7a.com1.z0.glb.clouddn.com/callExtension_4.png?imageView2/2/h/500&quot; alt=&quot;Extension_4&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;相关思考及后续&quot;&gt;相关思考及后续&lt;/h2&gt;&lt;p&gt;虽然实现黑名单功能很简单，但是这里我认为主要的问题应该是集中在，如何编辑这个黑名单列表。列表数据项可能很多，并且数据可能是实时更新添加的，那应该怎么做才更好呢？这里我的第一反应就是利用 App Group实现数据共享，在 Containing App完成相关的数据操作，在 Extension App中去获取即可。至于可行性，倒是没有验证过，如果不行，就当我瞎比比咯~。 当然，可能还有其他的办法，以及可能还会遇到其他的问题，这里在之后的学习过程中，我会逐步完善。&lt;/p&gt;
&lt;p&gt;当然，对于 CallKit的学习，我也仅限于这一两天，还是没有资料的情况下。所以文中难免存在各种错误以及遗漏，欢迎指正。&lt;/p&gt;
&lt;p&gt;这之后，继续 CallKit的学习，实现它的另外一个功能：VoIP App。 wait…&lt;/p&gt;
&lt;p&gt;Enjoy it~&lt;/p&gt;
&lt;h2 id=&quot;参考链接&quot;&gt;参考链接&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/videos/play/wwdc2016/230/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Enhancing VoIP Apps with CallKit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/reference/callkit&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CallKit&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;http://creativecommons.org/licenses/by/2.5/cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://i.creativecommons.org/l/by/2.5/cn/88x31.png&quot; alt=&quot;知识共享许可协议&quot;&gt;&lt;/a&gt;本作品采用&lt;a href=&quot;http://creativecommons.org/licenses/by/2.5/cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;知识共享署名 2.5 中国大陆许可协议&lt;/a&gt;进行许可，欢迎转载，但转载请注明来自&lt;a href=&quot;http://colin1994.github.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Colin’s Nest&lt;/a&gt;，并保持转载后文章内容的完整。本人保留所有版权相关权利。&lt;/p&gt;
</content:encoded>
      
      <comments>http://http://colin1994.github.io/2016/06/17/Call-Directory-Extension-Study/#disqus_thread</comments>
    </item>
    
    <item>
      <title>What&#39;s New in iOS 10.0 中文版(上)</title>
      <link>http://http://colin1994.github.io/2016/06/14/What's_New_in_iOS_10.0_zh_0/</link>
      <guid>http://http://colin1994.github.io/2016/06/14/What's_New_in_iOS_10.0_zh_0/</guid>
      <pubDate>Tue, 14 Jun 2016 09:20:52 GMT</pubDate>
      <description>
      
        &lt;blockquote&gt;
&lt;p&gt;由于原文篇幅较长，为了方便阅读，分为上下篇。&lt;/p&gt;
&lt;p&gt;本文是 What’s New in iOS 10.0 中文版的上篇，主要描述了iOS 10新引入的一些新特效，概括了重要的变化。&lt;/p&gt;
&lt;p&gt;在What’s New in iOS 10.0 中文版(下)中，将介绍一些已存在框架的改进以及一些弃用的 API。&lt;/p&gt;
&lt;p&gt;原文链接：&lt;a href=&quot;https://developer.apple.com/library/prerelease/content/releasenotes/General/WhatsNewIniOS/Articles/iOS10.html#//apple_ref/doc/uid/TP40017084-SW1&quot;&gt;What’s New in iOS 10.0&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这篇文章总结了运行在目前 iOS设备上的 iOS 10中与开发者有关的功能，这篇文章还列出了与这些功能相关的详细文档。&lt;/p&gt;
      
      </description>
      
      <content:encoded>&lt;blockquote&gt;
&lt;p&gt;由于原文篇幅较长，为了方便阅读，分为上下篇。&lt;/p&gt;
&lt;p&gt;本文是 What’s New in iOS 10.0 中文版的上篇，主要描述了iOS 10新引入的一些新特效，概括了重要的变化。&lt;/p&gt;
&lt;p&gt;在What’s New in iOS 10.0 中文版(下)中，将介绍一些已存在框架的改进以及一些弃用的 API。&lt;/p&gt;
&lt;p&gt;原文链接：&lt;a href=&quot;https://developer.apple.com/library/prerelease/content/releasenotes/General/WhatsNewIniOS/Articles/iOS10.html#//apple_ref/doc/uid/TP40017084-SW1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;What’s New in iOS 10.0&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这篇文章总结了运行在目前 iOS设备上的 iOS 10中与开发者有关的功能，这篇文章还列出了与这些功能相关的详细文档。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;关于目前已知问题的最新新闻和信息，可以查阅 &lt;a href=&quot;https://developer.apple.com/ios/download/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://developer.apple.com/ios/download/&lt;/a&gt; 。添加到 iOS 10中的 API 的完整列表，详见 &lt;em&gt;&lt;a href=&quot;https://developer.apple.com/library/prerelease/content/releasenotes/General/iOS10APIDiffs/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;iOS 10.0 API Diffs&lt;/a&gt;&lt;/em&gt;。有关新设备的更多信息，详见 &lt;em&gt;&lt;a href=&quot;https://developer.apple.com/library/prerelease/content/documentation/DeviceInformation/Reference/iOSDeviceCompatibility/Introduction/Introduction.html#//apple_ref/doc/uid/TP40013599&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;iOS Device Compatibility Reference&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;更多关于 Swift,详见 &lt;a href=&quot;https://developer.apple.com/library/prerelease/content/documentation/DeveloperTools/Conceptual/WhatsNewXcode/introduction.html#//apple_ref/doc/uid/TP40004635-SW3&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Swift Language&lt;/a&gt; and &lt;em&gt;&lt;a href=&quot;https://developer.apple.com/library/prerelease/content/documentation/Swift/Conceptual/Swift_Programming_Language/index.html#//apple_ref/doc/uid/TP40014097&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;The Swift Programming Language (Swift 3)&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;
&lt;h2 id=&quot;SiriKit&quot;&gt;SiriKit&lt;/h2&gt;&lt;p&gt;Apps 在特定的领域提供服务，可以使用 SiriKit来在 iOS中通过 Siri使用这些服务。 想要提供这些服务，需要创建一个或多个使用这些意图和意图 UI frameworks的   App extensions(app extensions using the Intents and Intents UI frameworks)。SiriKit提供如下领域的服务：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;音频或视频通话&lt;/li&gt;
&lt;li&gt;消息传递&lt;/li&gt;
&lt;li&gt;发送或接收付款&lt;/li&gt;
&lt;li&gt;搜索照片&lt;/li&gt;
&lt;li&gt;乘坐预定&lt;/li&gt;
&lt;li&gt;管理训练&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当用户发起一个包含了你所提供服务的请求时， SiriKit会向你的 extension发送一个意图对象( intent object )，它描述了用户了请求并且提供了与这个请求相关的所有数据。你使用这个意图对象来提供一个相关的响应对象(response object)，它包含了如何处理用户请求的详情。Siri通常处理所有的用户交互，但是你也可以使用一个 extension来提供自定义 UI，它包含来自你的 App中的品牌或者其他额外信息。&lt;/p&gt;
&lt;p&gt;SiriKit还提供了一个机制，你可以使用它来告诉系统发生在你的 App中的交互和活动。 当你告诉系统这些交互，系统会判断你的 App是否可以处理用户当前的请求，如果可以，就把这个请求传递给你的 App。 除了意图，SiriKit还定义了一个交互对象(interaction object)，它把意图(intent)和意图处理过程(intent-handling process)的信息相结合，包含开始时间和特定事件发生的持续时间等细节。如果你的 App注册为可以处理一个活动，这个活动具有一个相同的名称并且作为一个意图，系统可以启动你的 App，并且携带一个包含了意图的交互对象，即使你没有提供一个意图 App extension。&lt;/p&gt;
&lt;p&gt;Maps和 Siri 都提供乘坐预定，用户也可以使用 Maps来订餐。你的意图 extension处理源于 Maps的交互，同样地它处理来自 Siri的请求。如果你自定义用户界面，你的意图 UI extension还可以自行配置，取决于你的请求是来自 Siri 还是 Maps。&lt;/p&gt;
&lt;p&gt;为了学习如何支持 SiriKit来给用户提供使用服务的新途径，阅读 &lt;em&gt;&lt;a href=&quot;https://developer.apple.com/library/prerelease/content/documentation/Intents/Conceptual/SiriIntegrationGuide/index.html#//apple_ref/doc/uid/TP40016875&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SiriKit Programming Guide&lt;/a&gt;&lt;/em&gt;. 当你准备实现处理各种意图的 App extensions，参考 &lt;em&gt;&lt;a href=&quot;https://developer.apple.com/reference/intents&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Intents Framework Reference&lt;/a&gt;&lt;/em&gt; 和 &lt;em&gt;&lt;a href=&quot;https://developer.apple.com/reference/intentsui&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Intents UI Framework Reference&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;
&lt;h2 id=&quot;积极的建议&quot;&gt;积极的建议&lt;/h2&gt;&lt;p&gt;iOS 10引入了新的方式来来增强与你的 App的交互度(engagement)，通过帮助系统在适当的时机把你的 App推荐给用户。 如果你通过 App搜索你的 iOS 9 App，通过 Spotlight，Safari搜索结果，Handoff以及 Siri建议，允许用户访问你的 App深处的活动(activities)以及内容。 在 iOS 10之后，你可以提供用户在你的 App中做什么的信息，这有助于系统在额外的地方推广你的 App，比如键盘和 QuickType，Maps和 CarPlay，应用切换器(app switcher)，Siri交互和(媒体播放 Apps) 的锁屏界面。这些机会提高与系统的整合，它由一系列的技术支持，比如  &lt;code&gt;NSUserActivity&lt;/code&gt;，由 &lt;a href=&quot;http://schema.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Schema.org&lt;/a&gt;定义的 Web标记(web markup)，以及定义在 Core Spotlight，MapKit，UIKit，以及 Media Player框架中的 API。.&lt;/p&gt;
&lt;p&gt;在 iOS 10中，&lt;code&gt;NSUserActivity&lt;/code&gt; 对象包含  &lt;code&gt;mapItem&lt;/code&gt; 属性，该属性允许你提供可以在上下文(other contexts)使用的位置信息。比如，你的 App展示酒店信息，你可以使用 &lt;code&gt;mapItem&lt;/code&gt; 属性来保存用户正在浏览的酒店的位置信息，当用户切换到另外一个旅行规划 App，酒店的位置是自动可用的。如果你支持 App搜索，你可以使用 &lt;code&gt;CSSearchableItemAttributeSet&lt;/code&gt; 中新的基于文本的地址(text-based address)的属性，比如 &lt;code&gt;thoroughfare&lt;/code&gt; 和 &lt;code&gt;postalCode&lt;/code&gt;，来指定用户可能想要去的具体位置。注意，当你使用  &lt;code&gt;mapItem&lt;/code&gt; 属性，系统自动填充  &lt;code&gt;contentAttributeSet&lt;/code&gt;  属性。&lt;/p&gt;
&lt;p&gt;为了与系统共享一个位置，一定要指定 &lt;code&gt;latitude&lt;/code&gt; 和 &lt;code&gt;longitude&lt;/code&gt; 值，除了 &lt;code&gt;CSSearchableItemAttributeSet&lt;/code&gt; 中的地址属性。也建议你提供值给 &lt;code&gt;namedLocation&lt;/code&gt;，这样用户可以查看位置的名称，以及  &lt;code&gt;phoneNumbers&lt;/code&gt; 属性，以便用户可以使用 Siri来发起呼叫给指定位置。&lt;/p&gt;
&lt;p&gt;在 iOS 9中，将标记添加到你的网站上的结构数据来丰富内容，用户可以在 Spotlight和 Safari搜索结果中看到。在 iOS 10中，你可以使用  &lt;a href=&quot;http://schema.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Schema.org&lt;/a&gt; 定义的位置相关词汇，比如 &lt;a href=&quot;http://schema.org/PostalAddress&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PostalAddress&lt;/a&gt;，进一步提高用户体验。例如，如果用户查看你网站上描述的一个位置，系统可以在用户切换到 Maps中的时候建议相同的位置。注意 Safari 同时支持 JSON-LD 和 Microdata 编码的 &lt;a href=&quot;http://schema.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Schema.org&lt;/a&gt; 词汇。&lt;/p&gt;
&lt;p&gt;UIKit介绍了 &lt;code&gt;UITextInputTraits&lt;/code&gt; 协议中的  &lt;code&gt;textContentType&lt;/code&gt; 属性，它可以让你指定你希望用户输入文本区域的内容的语义。当你提供这些信息时，系统可以在某些情况下自动选择一个合适的键盘并且提高键盘修正和主动集成来自其他 App或者网站的信息。比如，如果你使用 &lt;code&gt;UITextContentTypeFullStreetAddress&lt;/code&gt; 来告诉系统你希望用户在文本区域中输入一个完整的地址，系统可以显示用户最近查看的位置地址。&lt;/p&gt;
&lt;p&gt;如果你的 App播放多媒体并且使用  &lt;code&gt;MPPlayableContentManager&lt;/code&gt; APIs， iOS 10 帮你在锁屏界面通过你的 App，使得用户可以查看专辑封面和播放多媒体。&lt;/p&gt;
&lt;p&gt;如果你的骑乘共享(ride-sharing) App使用  &lt;code&gt;MKDirectionsRequest&lt;/code&gt; API，iOS 10 可以在用户想要骑行的时候，在应用程序切换器(app switcher)中展示它。想要注册成一个骑行共享提供者，在 &lt;code&gt;Info.plist&lt;/code&gt; 文件中设置 &lt;a href=&quot;https://developer.apple.com/library/prerelease/content/documentation/General/Reference/InfoPlistKeyReference/Articles/iPhoneOSKeys.html#//apple_ref/doc/uid/TP40009252-SW33&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MKDirectionsApplicationSupportedModes&lt;/a&gt; 的值为 &lt;code&gt;MKDirectionsModeRideShare&lt;/code&gt; 。如果你的 App 只提供骑行共享，系统建议你的 App使用这样开头的文本  “Get a ride to…”；如果你的 App支持骑行共享和其他路由类型（如汽车或摩托车），系统建议你使用这样开头的文本  “Get directions to…”。注意 你收到的 &lt;code&gt;MKMapItem&lt;/code&gt; 对象可能不包含经度和纬度信息，需要地理编码。&lt;/p&gt;
&lt;h2 id=&quot;与_Messages_App_交互&quot;&gt;与 Messages App 交互&lt;/h2&gt;&lt;p&gt;在 iOS 10中，你可以创建 App extensions 来与 Messages App交互，使得用户可以发送文本，贴纸，媒体文件以及交互式消息。你也可以支持更新为每个收件人响应消息的交互式消息。你还可以创建两种类型的 App extensions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;贴纸包提供一系列的贴纸，用户可以添加到他们的信息内容中。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;iMessage app&lt;/em&gt; 让你在 Messages App 中展示一个自定义用户界面，创建一个标签的浏览器，包括一次对话中的文本，贴纸和媒体文件，并且创建，发送和更新消息交互。&lt;/p&gt;
&lt;p&gt; iMessage App也可以帮助用户搜索保存在你的 App中相关网站的图片，当它们处在  Messages App 中的时候。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;你可以创建一个贴纸包而无需编写任何代码：简单地拖拽图片到 Xcode中贴纸包文件夹内贴纸 asset 目录。&lt;/p&gt;
&lt;p&gt;为了开发一个  iMessage App，你可以使用 Messages 框架中的 API (&lt;code&gt;Messages.framework&lt;/code&gt;)。更多关于 Messages 框架，详见 &lt;em&gt;&lt;a href=&quot;https://developer.apple.com/reference/messages&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Messages Framework Reference&lt;/a&gt;&lt;/em&gt;. 对于创建 App Extensions的普遍信息，详见 &lt;em&gt;&lt;a href=&quot;https://developer.apple.com/library/prerelease/content/documentation/General/Conceptual/ExtensibilityPG/index.html#//apple_ref/doc/uid/TP40014214&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;App Extension Programming Guide&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;如果你的 App提供图片在 Messages中分享，你想要用户可以使用 Spotlight 的流行图片搜索  (即, “#images”) 来搜索图片，而不用离开 Messages App，首先创建一个 iMessage app。然后遵循下面步骤： &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;给你 App 的 entitlements 添加  &lt;code&gt;com.apple.developer.associated-domains&lt;/code&gt; 键。包括保存你想要搜索的图片的网站域名的一个列表。对于每个域，指定 &lt;code&gt;spotlight-image-search&lt;/code&gt; 服务。&lt;/li&gt;
&lt;li&gt;添加一个 &lt;code&gt;apple-app-site-association&lt;/code&gt; 文件到你的网站。为 &lt;code&gt;spotlight-image-search&lt;/code&gt; 服务添加一个字典，包含你的 app ID, 它是 team ID 或者 app ID 前缀，后跟  bundle ID。你可以指定多打500个路径和模式，应该包含 Spotlight 流行图片搜索索引。 (关于网站路径的一些实例，详见 &lt;a href=&quot;https://developer.apple.com/library/prerelease/content/documentation/General/Conceptual/AppSearch/UniversalLinks.html#//apple_ref/doc/uid/TP40016308-CH12-SW4&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Creating and Uploading the Association File&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;允许 Applebot 爬虫 (详见 &lt;a href=&quot;https://support.apple.com/en-us/HT204683&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;About Applebot&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;用户通知&quot;&gt;用户通知&lt;/h2&gt;&lt;p&gt;iOS 10 引入了用户通知框架(&lt;code&gt;UserNotifications.framework&lt;/code&gt;)，它支持本地和远程通知的发送和处理。你可以使用这个框架的类来安排基于特定条件的本地通知。比如时间或者位置。当它们被发送到用户设备的时候，App 和App extensions 可以使用这个框架来接收和修改本地和远程的通知。&lt;/p&gt;
&lt;p&gt;还介绍了在 iOS 10 中，用户通知 UI框架 (&lt;code&gt;UserNotificationsUI.framework&lt;/code&gt;) 允许你自定义显示在用户设备上的本地和远程推送通知。你使用这个框架来定义一个接收通知数据并且提供相应可视化表示的 App extension 。这个 extension也可以响应相关的自定义动作和通知。 &lt;/p&gt;
&lt;h2 id=&quot;语音识别&quot;&gt;语音识别&lt;/h2&gt;&lt;p&gt;iOS 10 引入了一个新的 API，支持连续语音识别和帮助你构建支持语音识别并且转换成文本的 App。使用  Speech 框架 (&lt;code&gt;Speech.framework&lt;/code&gt;) 中的 API，你可以执行实时语音转录和记录音频。例如，你可以得到一个语音识别器，开始简单的语音识别，代码如下所示： &lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; recognizer = &lt;span class=&quot;type&quot;&gt;SFSpeechRecognizer&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; request = &lt;span class=&quot;type&quot;&gt;SFSpeechURLRecognitionRequest&lt;/span&gt;(url: audioFileURL)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;recognizer?.recognitionTask(with: request, resultHandler: &amp;#123; (result, error) &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt; (result?.bestTranscription.formattedString)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;与访问其他类型的受保护数据一样，如日历，照片资料，进行语音识别需要用户的授权 (更多关于访问受保护的数据类，详见&lt;a href=&quot;https://developer.apple.com/library/prerelease/content/releasenotes/General/WhatsNewIniOS/Articles/iOS10.html#//apple_ref/doc/uid/TP40017084-SW3&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Security and Privacy Enhancements&lt;/a&gt;)。在语音识别的情况下，许可是必需的，因为数据被传递，并且暂时存储在苹果的服务器上，以提高语音识别的准确性。请求用户的权限，必须在 &lt;code&gt;Info.plist&lt;/code&gt; 文件中添加&lt;code&gt;NSSpeechRecognitionUsageDescription&lt;/code&gt;  键。&lt;/p&gt;
&lt;p&gt;当你在你的 App中采用语音识别，一定要向用户表明他们的语音将被识别，并且他们不应该使用敏感话语。&lt;/p&gt;
&lt;h2 id=&quot;广泛的颜色&quot;&gt;广泛的颜色&lt;/h2&gt;&lt;p&gt;贯穿系统的大多数图形框架，包括 Core Graphics, Core Image, Metal, 和 AVFoundation, 有大幅的改进来支持 extended-range 像素格式和 wide-gamut 颜色空间。通过将此行为扩展到整个图形栈中，它比以往任何时间更容易支持具有宽颜色显示的设备。此外，UIKit 使在新扩展的 sRGB颜色空间上工作标准化，因此很容易混合 sRGB和其他颜色，更广泛的色域没有明显的性能损失。&lt;/p&gt;
&lt;p&gt;这里有一些你开始使用广泛颜色的最佳实践。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在 iOS 10 中，&lt;a href=&quot;https://developer.apple.com/reference/uikit/uicolor&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;UIColor&lt;/a&gt; 类使用扩展的 sRGB 颜色空间，并且它的构造器(initializers)不再限制初始值在  &lt;code&gt;0.0&lt;/code&gt; 和 &lt;code&gt;1.0&lt;/code&gt; 之间。如果你的应用程序依赖于 UIKit来限制组件(component)值 (无论你是创建一个颜色或者一个颜色的组件值)，当你链接到 iOS 10的时候，你需要改变这些行为。 &lt;/li&gt;
&lt;li&gt;当在 iPad Pro (9.7 inch) 的  &lt;a href=&quot;https://developer.apple.com/reference/uikit/uiview&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;UIView&lt;/a&gt; 上执行自定义的绘制时，底层的绘图环境配置了一个扩展的 sRGB颜色空间。&lt;/li&gt;
&lt;li&gt;如果你的 App 渲染自定义的图像对象，使用新的  &lt;a href=&quot;https://developer.apple.com/reference/uikit/uigraphicsimagerenderer&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;UIGraphicsImageRenderer&lt;/a&gt; 类来控制目标位图是使用扩展范围(extended-range)还是标准范围 (standard-range) 格式。&lt;/li&gt;
&lt;li&gt;如果你使用较低级别的 API，比如 Core Graphics 和 Metal来执行你自己的图像处理，你需要使用一个扩展的颜色空间和一个支持16位浮点值的像素格式的组件值。当限制颜色值是必要的时候，你应该明确这样做。&lt;/li&gt;
&lt;li&gt;Core Graphics, Core Image,以及 Metal 性能着色器提供了新的选择，可以在颜色空间之间轻松转换颜色和图像。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;适应真实的色调显示&quot;&gt;适应真实的色调显示&lt;/h2&gt;&lt;p&gt;真实的色调显示使用环境光传感器自动调整显示器的颜色和强度，以配合当前环境的照明条件。为了确保你的 App可以与真实的色调提供的标准颜色变化很好的工作，在 &lt;code&gt;Info.plist&lt;/code&gt; 中添加新的 &lt;a href=&quot;https://developer.apple.com/library/prerelease/content/documentation/General/Reference/InfoPlistKeyReference/Articles/iPhoneOSKeys.html#//apple_ref/doc/uid/TP40009252-SW31&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;UIWhitePointAdaptivityStyle&lt;/a&gt; 键来描述你的 App的主要视觉内容。比如： &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果你的 App是一个照片编辑应用，颜色的准确性(fidelity)比自动调整环境白点(white point)更重要。在这种情况下，你可以使用 &lt;code&gt;UIWhitePointAdaptivityStylePhoto&lt;/code&gt; 方式来降低系统提供的真实色调变化的强度。&lt;/li&gt;
&lt;li&gt;如果你的 App是一个阅读应用，符合环境白点将为用户提供帮助。在这种情况下，你可以使用 &lt;code&gt;UIWhitePointAdaptivityStyleReading&lt;/code&gt; 方式来加强系统提供的真实色调变化的强度。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;App搜索_的改进&quot;&gt;App搜索 的改进&lt;/h2&gt;&lt;p&gt;iOS 10 和 Core Spotlight框架介绍了几个 App搜索的改进点： &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;应用内(In-app)搜索&lt;/li&gt;
&lt;li&gt;继续搜索(Search continuation)&lt;/li&gt;
&lt;li&gt;众包(crowdsourcing:是互联网带来的新的生产组织形式)与差分隐私(differential privacy)的深度链接&lt;/li&gt;
&lt;li&gt;可视化的验证结果&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;新的 &lt;code&gt;CSSearchQuery&lt;/code&gt; 类支持应用内内容搜索，使用现有的 Core Spotlight APIs。使用这个 API可以消除需要保持你自己单独的搜索索引，让你发挥 Spotlight的强大搜索技术和匹配规则，允许用户搜索内容不离开你的 App，就像他们在 Mail, Messages,和 Notes.&lt;/p&gt;
&lt;p&gt;在 iOS 9中，使用搜索 API(比如 Core Spotlight, &lt;a href=&quot;https://developer.apple.com/reference/foundation/nsuseractivity&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;NSUserActivity&lt;/a&gt; 和 web标记) 在你的 App中，让用户使用Spotlight 和 Safari搜索界面来搜索索引的内容。在 iOS 10中，你可以使用新的 Core Spotlight 符号，当用户打开你的 App时候，用户可以继续使用 Spotlight进行搜索。要启用这个功能，在 &lt;code&gt;Info.plist&lt;/code&gt; 文件中添加 &lt;code&gt;CoreSpotlightContinuation&lt;/code&gt; 键，并且设置它的值为  &lt;code&gt;YES&lt;/code&gt;，然后更新你的代码来处理一个  &lt;a href=&quot;https://developer.apple.com/reference/corespotlight/csquerycontinuationactiontype&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CSQueryContinuationActionType&lt;/a&gt; 类型的活动延续。在  &lt;a href=&quot;https://developer.apple.com/reference/uikit/uiapplicationdelegate/1623072-application&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;application:continueUserActivity:restorationHandler:&lt;/a&gt; 方法中收到的 &lt;a href=&quot;https://developer.apple.com/reference/foundation/nsuseractivity&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;NSUserActivity&lt;/a&gt; 对象中的用户信息字典包含了 &lt;a href=&quot;https://developer.apple.com/reference/corespotlight/cssearchquerystring&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CSSearchQueryString&lt;/a&gt; 键，它的值是一个字符串，表示用户的查询。&lt;/p&gt;
&lt;p&gt;iOS 10 引入了一个不同的私人方式来帮助提高你的 App的内容在搜索结果中的排名。 iOS 提交一部分差分隐私到 Apple的服务器随着用户使用你的 App 以及  &lt;a href=&quot;https://developer.apple.com/reference/foundation/nsuseractivity&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;NSUserActivity&lt;/a&gt; 对象包含深度链接地址并且它们的 &lt;a href=&quot;https://developer.apple.com/reference/foundation/nsuseractivity/1414701-eligibleforpublicindexing&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;eligibleForPublicIndexing&lt;/a&gt; 属性设置为  &lt;code&gt;YES&lt;/code&gt; 被提交到 iOS中。差分隐形散列允许 Apple统计流行的深度链接的频率，而不曾与用户关联的链接进行访问。&lt;/p&gt;
&lt;p&gt;当你使用 App 搜索 API 验证工具来测试你的网站标记和深度链接，现在展示你的结果的可视化表示，包括支持的标记，比如  &lt;a href=&quot;http://schema.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Schema.org&lt;/a&gt; 中定义的。验证工具可以帮你看到 Applebot web爬虫索引信息，比如标题，描述，URL和其他支持的元素。你可以在这里获取这个验证工具： &lt;a href=&quot;https://search.developer.apple.com/appsearch-validation-tool&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://search.developer.apple.com/appsearch-validation-tool&lt;/a&gt;. 更多关于支持深度链接和添加标记，详见： &lt;a href=&quot;https://developer.apple.com/library/prerelease/content/documentation/General/Conceptual/AppSearch/WebContent.html#//apple_ref/doc/uid/TP40016308-CH8&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Mark Up Web Content&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;学习如何让你的网站中的图片在 Messages App内可搜索，详见 &lt;a href=&quot;https://developer.apple.com/library/prerelease/content/releasenotes/General/WhatsNewIniOS/Articles/iOS10.html#//apple_ref/doc/uid/TP40017084-SW4&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Integrating with the Messages App&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Widget_的改进&quot;&gt;Widget 的改进&lt;/h2&gt;&lt;p&gt;iOS 10 为锁屏界面引入了一个新的设计，现在可以显示 widgets。为了保证你的 widget 在任何背景下看起来都不错，你可以适当地设置 &lt;a href=&quot;https://developer.apple.com/reference/uikit/uivibrancyeffect/1771278-widgetprimaryvibrancyeffect&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;widgetPrimaryVibrancyEffect&lt;/a&gt; 或者 &lt;a href=&quot;https://developer.apple.com/reference/uikit/uivibrancyeffect/1771277-widgetsecondaryvibrancyeffect&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;widgetSecondaryVibrancyEffect&lt;/a&gt;(使用这些属性取代已废弃的 &lt;a href=&quot;https://developer.apple.com/reference/uikit/uivibrancyeffect/1613917-notificationcentervibrancyeffect&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;notificationCenterVibrancyEffect&lt;/a&gt; 属性)。此外， widgets现在包括显示模式(由 &lt;a href=&quot;https://developer.apple.com/reference/notificationcenter/ncwidgetdisplaymode&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;NCWidgetDisplayMode&lt;/a&gt; 表示)的概念，它可以让你描述有多少内容是可用的，并允许用户选择一个紧凑或者扩展型的视图。 &lt;/p&gt;
&lt;h2 id=&quot;Apple_Pay_的改进&quot;&gt;Apple Pay 的改进&lt;/h2&gt;&lt;p&gt;在 iOS 10中，用户可以通过 Siri和 Maps使用网页版的 Apple Pay 来便捷安全的完成支付。对于开发者来说， iOS 10 引入了新的 API，你可以在代码中使用运行在 iOS和  watchOS上，支持动态支付网络的能力和一个新的沙盒测试环境。&lt;/p&gt;
&lt;p&gt;iOS 10 引入了新的 API，帮助你将 Apple Pay 直接引入你的网站。当你在你的网站支持 Apple Pay，用户在 iOS或者 OS X上通过 Safari浏览的时候，可以通过它们的 iPhone或 Apple Watch来使用 Apple Pay上的信用卡进行支付。 详见 &lt;a href=&quot;https://developer.apple.com/reference/applepayjs&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;em&gt;ApplePay JS Framework Reference&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt; PassKit框架 (&lt;code&gt;PassKit.framework&lt;/code&gt;) 介绍了让你在 UIKit不可用的地方支持 Apple Pay的 API。具体来说， &lt;a href=&quot;https://developer.apple.com/reference/passkit/pkpaymentauthorizationcontroller&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PKPaymentAuthorizationController&lt;/a&gt; 和 &lt;a href=&quot;https://developer.apple.com/reference/passkit/pkpaymentauthorizationcontrollerdelegate&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PKPaymentAuthorizationControllerDelegate&lt;/a&gt; 使得  &lt;a href=&quot;https://developer.apple.com/reference/passkit/pkpaymentauthorizationviewcontroller&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PKPaymentAuthorizationViewController&lt;/a&gt; 提供的功能以及它的 delegate 可用，而不需要 UIKit。尽管新的 API 需要在特定的意图下在 watchOS上提供 Apple Pay，还是建议你在代码的任何地方采用它。这样你就可以用一套基础代码来广泛提供 Apple Pay支持。(更多关于意图和 Siri集成，详见 &lt;a href=&quot;https://developer.apple.com/library/prerelease/content/releasenotes/General/WhatsNewIniOS/Articles/iOS10.html#//apple_ref/doc/uid/TP40017084-SW5&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SiriKit&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt; PassKit 框架还增加了新的功能，让信用卡发行机构在它们的 App中展示他们的信用卡。具体来说， &lt;code&gt;PKPaymentButtonTypeInStore&lt;/code&gt; 按钮类型允许你为信用卡展示一个 Apple Pay 按钮，  &lt;code&gt;presentPaymentPass:&lt;/code&gt; 方法允许你以编程方式展示信用卡。 ( &lt;code&gt;presentPaymentPass:&lt;/code&gt; 方法定义在  &lt;a href=&quot;https://developer.apple.com/reference/passkit/pkpasslibrary&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PKPassLibrary&lt;/a&gt;中)。&lt;/p&gt;
&lt;p&gt;当一个新的支付网络可用时，你的 App可用自动支持新的网络，而不需要修改和重新编译你的 App。&lt;a href=&quot;https://developer.apple.com/reference/passkit/pkpaymentrequest/1833288-availablenetworks&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;availableNetworks&lt;/a&gt; 方法允许你在运行时发现用户设备可用的网络。此外， &lt;a href=&quot;https://developer.apple.com/reference/passkit/pkpaymentrequest/1619329-supportednetworks&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;supportedNetworks&lt;/a&gt; 属性被扩展了，以便可以携带一些支付服务提供商的名字作为参数。然后你的 App自动支持任何支付提供商支持的网络。详见&lt;a href=&quot;https://developer.apple.com/apple-pay/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://developer.apple.com/apple-pay/&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;iOS 10 引入了一个新的测试环境，它允许你直接在设备上提供测试信用卡。测试环境返回加密后的测试支付数据。要使用这种环境，遵循以下步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在 iTunes Connect上创建一个测试 iCloud账号&lt;/li&gt;
&lt;li&gt;在你的设备上登录该账号&lt;/li&gt;
&lt;li&gt;设置测试所需的区域&lt;/li&gt;
&lt;li&gt;使用 &lt;a href=&quot;https://developer.apple.com/apple-pay/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://developer.apple.com/apple-pay/&lt;/a&gt; 上列举的测试信用卡&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;注意:&lt;/strong&gt; 当你切换 iCloud账号，环境自动切换。你还必须在实际生产环境中测试支付。&lt;/p&gt;
&lt;h2 id=&quot;安全和隐私的改进&quot;&gt;安全和隐私的改进&lt;/h2&gt;&lt;p&gt;iOS 10 引入了一些修改和补充，帮助你提高你的代码的安全和维护用户数据的隐私。更多关于这方面的内容，详见 &lt;a href=&quot;https://developer.apple.com/security/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Security&lt;/a&gt; .&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Info.plist&lt;/code&gt; 文件中新的 &lt;code&gt;NSAllowsArbitraryLoadsInWebContent&lt;/code&gt; 键，提供了一个便捷的方式来允许任意的 web页面加载任务，同时保留 ATS保护你的 App的其余部分。&lt;/li&gt;
&lt;li&gt;SecKey API包括不对称密钥生成的改进。使用 SecKey API 替代已经弃用的 CDSA(Common Data Security Architecture: 通用数据安全架构) API。&lt;/li&gt;
&lt;li&gt;RC4 对称加密套件现在默认禁用所有的 SSL/TLS 连接，以及 SSLv3 不再支持安全传输 API。建议你尽快停止使用  SHA-1和 3DES 加密算法。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.apple.com/reference/uikit/uipasteboard&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;UIPasteboard&lt;/a&gt; 类支持剪贴板功能，该功能允许用户设置之间复制和粘贴，包括 API可以用来限制一个纸板到特定设备和设置到达过期时间戳后，纸板被清除。此外，命名过的纸板不再重复出现，取而代之的是，你应该使用共享的容器，以及“发现”纸板（也就是说，纸板被  &lt;a href=&quot;https://developer.apple.com/reference/uikit/uipasteboardnamefind&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;UIPasteboardNameFind&lt;/a&gt;  常数定义）是无效的。&lt;/li&gt;
&lt;li&gt;你必须静态声明你的应用程序使用受保护的数据类，通过在 &lt;code&gt;Info.plist&lt;/code&gt; 文件中包含相关的目的字符串键。例如，你必须包含 &lt;a href=&quot;https://developer.apple.com/library/prerelease/content/documentation/General/Reference/InfoPlistKeyReference/Articles/CocoaKeys.html#//apple_ref/doc/uid/TP40009251-SW15&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;NSCalendarsUsageDescription&lt;/a&gt; 键来访问用户日历的数据。如果你不包含相关的目的字符串键，当你试图访问相关数据的时候，你的 App会退出。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;CallKit&quot;&gt;CallKit&lt;/h2&gt;&lt;p&gt; CallKit 框架 (&lt;code&gt;CallKit.framework&lt;/code&gt;) 让  VoIP App与 iPhone UI相结合，给用户一个很棒的体验。使用这个框架来让用户在锁屏界面查看和接听到来的 VoIP电话，以及管理手机上 Favorites和 Recents视图上的联系人。&lt;/p&gt;
&lt;p&gt;CallKit 还介绍了 App extensions，允许来电拦截并且来电识别。你可以创建一个 App extension，将一个电话号码和一个名称联系起来，或者告诉系统某个号码需要被拦截。&lt;/p&gt;
&lt;h2 id=&quot;News_Publisher_的改进&quot;&gt;News Publisher 的改进&lt;/h2&gt;&lt;p&gt;News Publisher 可以使用 Apple News格式，很容易地提供设计精美的新闻，杂志和网络内容给 Apple News。任何人都可以注册，从主要的杂志或者新闻机构，到独立的出版商和博客。开始或学习更多关于最近的更新，访问  &lt;a href=&quot;https://newsresources.apple.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://newsresources.apple.com&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Video_Subscriber_Account&quot;&gt;Video Subscriber Account&lt;/h2&gt;&lt;p&gt;iOS 10 引入  Video Subscriber Account 框架 (&lt;code&gt;VideoSubscriberAccount.framework&lt;/code&gt;) 来帮助 App支持支持身份验证流或验证视频点播(也称为 TV)与他们的有线或卫星 TV提供商进行身份验证。使用这个框架的 API可以帮助你支持一个单一的登录体验，用户登录一次解锁访问所有的视频应用程序订阅支持。&lt;/p&gt;
&lt;h2 id=&quot;App_Extensions&quot;&gt;App Extensions&lt;/h2&gt;&lt;p&gt;iOS 10 引入了几个可以创建 App extension的新的 extension points，比如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Call Directory&lt;/li&gt;
&lt;li&gt;Intents&lt;/li&gt;
&lt;li&gt;Intents UI&lt;/li&gt;
&lt;li&gt;Messages&lt;/li&gt;
&lt;li&gt;Notification Content&lt;/li&gt;
&lt;li&gt;Notification Service&lt;/li&gt;
&lt;li&gt;Sticker Pack&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;此外，iOS 10包含了如下的第三方键盘 app extensions的改进：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;你可以使用 &lt;code&gt;UITextDocumentProxy&lt;/code&gt;  类中的  &lt;code&gt;documentInputMode&lt;/code&gt; 属性，来自动检测文档的输入语言，并且改变你的键盘 extension来符合这个语言(如果支持的话)。当你用这种方式决定输入的语言时， 你可以做每一种语言的键盘切换，比如为 Messages内建的。&lt;/li&gt;
&lt;li&gt;新的 &lt;code&gt;handleInputModeListFromView:withEvent:&lt;/code&gt; 方法让键盘 extension 显示系统的键盘选择菜单(即地球标志的菜单).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;键盘 extension 必须放置地球标志和系统标志相同的位置。此外，如果你需要提供一个自定义的按键来启动键盘设置，例如，你应该把这个按键放在系统键盘听写键的相同位置。&lt;/p&gt;
&lt;p&gt;更多关于 App extensions，详见 &lt;a href=&quot;https://developer.apple.com/library/prerelease/content/documentation/General/Conceptual/ExtensibilityPG/index.html#//apple_ref/doc/uid/TP40014214&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;em&gt;App Extension Programming Guide&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;http://creativecommons.org/licenses/by/2.5/cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://i.creativecommons.org/l/by/2.5/cn/88x31.png&quot; alt=&quot;知识共享许可协议&quot;&gt;&lt;/a&gt;本作品采用&lt;a href=&quot;http://creativecommons.org/licenses/by/2.5/cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;知识共享署名 2.5 中国大陆许可协议&lt;/a&gt;进行许可，欢迎转载，但转载请注明来自&lt;a href=&quot;http://colin1994.github.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Colin’s Nest&lt;/a&gt;，并保持转载后文章内容的完整。本人保留所有版权相关权利。&lt;/p&gt;
</content:encoded>
      
      <comments>http://http://colin1994.github.io/2016/06/14/What's_New_in_iOS_10.0_zh_0/#disqus_thread</comments>
    </item>
    
    <item>
      <title>TDD 学习总结（Swift 实践）</title>
      <link>http://http://colin1994.github.io/2016/06/03/TDD-With-Swift/</link>
      <guid>http://http://colin1994.github.io/2016/06/03/TDD-With-Swift/</guid>
      <pubDate>Fri, 03 Jun 2016 11:33:40 GMT</pubDate>
      <description>
      
        &lt;blockquote&gt;
&lt;p&gt;花了几天时间，看完了 &lt;a href=&quot;https://www.packtpub.com/application-development/test-driven-ios-development-swift&quot;&gt;《Test-Driven iOS Development with Swift》&lt;/a&gt; 这本书，虽然只有短短 500页的 epub，但是讲解的很生动透彻，全书围绕一个 &lt;code&gt;ToDo&lt;/code&gt; 应用展开，讲解了 &lt;code&gt;Test-Driven Development （TDD，即测试驱动开发）&lt;/code&gt; 的实际应用，让我对 TDD 有了更全面的认识。故此，开坑记录之~&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://7xkc7a.com1.z0.glb.clouddn.com/TDDTDDFigure.png&quot; alt=&quot;TDD&quot;&gt;&lt;/p&gt;
      
      </description>
      
      <content:encoded>&lt;blockquote&gt;
&lt;p&gt;花了几天时间，看完了 &lt;a href=&quot;https://www.packtpub.com/application-development/test-driven-ios-development-swift&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《Test-Driven iOS Development with Swift》&lt;/a&gt; 这本书，虽然只有短短 500页的 epub，但是讲解的很生动透彻，全书围绕一个 &lt;code&gt;ToDo&lt;/code&gt; 应用展开，讲解了 &lt;code&gt;Test-Driven Development （TDD，即测试驱动开发）&lt;/code&gt; 的实际应用，让我对 TDD 有了更全面的认识。故此，开坑记录之~&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://7xkc7a.com1.z0.glb.clouddn.com/TDDTDDFigure.png&quot; alt=&quot;TDD&quot;&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;什么是_TDD&quot;&gt;什么是 TDD&lt;/h2&gt;&lt;p&gt;测试驱动开发(TDD)是极限编程的重要特点，它以不断的测试推动代码的开发，既简化了代码，又保证了软件质量。&lt;/p&gt;
&lt;p&gt;测试驱动开发的基本思想就是在开发功能代码之前，先编写测试代码。也就是说在明确要开发某个功能后，首先思考如何对这个功能进行测试，并完成测试代码的编写，然后编写相关的代码满足这些测试用例。然后循环进行添加其他功能，直到完全部功能的开发。&lt;/p&gt;
&lt;p&gt;OK，概括来说，TDD 的开发过程可以用上图来描述：Red，Green，Refactor。&lt;/p&gt;
&lt;p&gt;翻译过来就是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;编写测试用例，测试不通过。（红色 Error）&lt;/li&gt;
&lt;li&gt;编写代码实现功能，测试通过。（绿色 Success）&lt;/li&gt;
&lt;li&gt;重构优化代码。（Refactor）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;再详细点，测试驱动开发的基本过程如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;明确当前要完成的功能。记录成一个 TODO 列表。&lt;/li&gt;
&lt;li&gt;快速完成针对此功能的测试用例编写。&lt;/li&gt;
&lt;li&gt;测试代码编译不通过。&lt;/li&gt;
&lt;li&gt;编写对应的功能代码。&lt;/li&gt;
&lt;li&gt;测试通过。&lt;/li&gt;
&lt;li&gt;对代码进行重构，并保证测试通过。&lt;/li&gt;
&lt;li&gt;循环完成所有功能的开发。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;怎么样，简单吧~&lt;/p&gt;
&lt;h2 id=&quot;是否该用_TDD&quot;&gt;是否该用 TDD&lt;/h2&gt;&lt;p&gt;简单是简单，但是很明显的，开发前期，工作量绝对不是 1+1 那么简单，那么是否该用 TDD 呢？对此，我不做过多的阐述。世上并没有放之四海皆准的法则，TDD 好坏在于你的判断，方法论的主体在于使用的人，本文并不会给你一个完美的答案，这需要你自己在实践中取舍。接下去，我将列举 TDD 目前公认的一些优缺点，以及使用原则，加深大家对 TDD 的理解。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TDD 开发的优点：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可以保证代码的质量。可以对自己的所需要的业务功能的每一步设计进行验证，并得到正确的结果，减少bug的出现的，特别对于复杂业务逻辑的项目，以小步慢走的方式，避免后期繁重的测试和维护工作。&lt;/li&gt;
&lt;li&gt;找到了重构的信心，必要时候你还可以痛痛快快的并且满怀信心的对代码做一场大的变革。这样我们的代码变得干净了，扩展性、可以维护性以及易理解性纷至沓来。&lt;/li&gt;
&lt;li&gt;在团队建设中能够进行分工，以可执行的形式文档化你的需求，迫使你分清职责隔离依赖以驱动你的设计，编织安全网以便将Bug扼杀在在摇篮状态，防止其逃逸。不同于传统开发（传统的开发人员开发的软件的测试是为了找出已经逃逸得bug，可能这个bug已经长成了毒瘤）。注：这两种活动都是必要的，而且毫不冲突，互为补充。&lt;/li&gt;
&lt;li&gt;帮助你养成一个新的思维习惯，不光在你编程的道路上，在你的工作和生活中，你慢慢的会把自己的需求进行分析设计并不断地验证，最终更好去实现自己的人生目标。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;TDD 开发的缺点：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对于测试驱动不熟练或者喜欢偷懒的的人员，加大了代码的编写量，测试代码是系统代码的两倍或更多。&lt;/li&gt;
&lt;li&gt;可能不适合时间很紧的软件开发，更适合于产品和平台的开发。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;TDD 原则：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;独立测试：&lt;/strong&gt;不同代码的测试应该相互独立，一个类对应一个测试类，一个函数对应一个测试函数。用例也应各自独立，每个用例不能使用其他用例的结果数据，结果也不能依赖于用例执行顺序。 一个角色：开发过程包含多种工作，如：编写测试代码、编写产品代码、代码重构等。做不同的工作时，应专注于当前的角色，不要过多考虑其他方面的细节。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;测试列表：&lt;/strong&gt;代码的功能点可能很多，并且需求可能是陆续出现的，任何阶段想添加功能时，应把相关功能点加到测试列表中，然后才能继续手头工作，避免疏漏。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;测试驱动：&lt;/strong&gt;即利用测试来驱动开发，是TDD的核心。要实现某个功能，要编写某个类或某个函数，应首先编写测试代码，明确这个类、这个函数如何使用，如何测试，然后在对其进行设计、编码。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;先写断言：&lt;/strong&gt;编写测试代码时，应该首先编写判断代码功能的断言语句，然后编写必要的辅助语句。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;可测试性：&lt;/strong&gt;产品代码设计、开发时的应尽可能提高可测试性。每个代码单元的功能应该比较单纯，“各家自扫门前雪”，每个类、每个函数应该只做它该做的事，不要弄成大杂烩。尤其是增加新功能时，不要为了图一时之便，随便在原有代码中添加功能。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;及时重构：&lt;/strong&gt;对结构不合理，重复等“味道”不好的代码，在测试通过后，应及时进行重构。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;小步前进：&lt;/strong&gt;软件开发是复杂性非常高的工作，小步前进是降低复杂性的好办法。&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;看到这里，如果你还觉得，有必要体验一把 TDD，那么接着往下看，我将通过一个简单的例子，走一遍 TDD 开发的流程，加深大家对 TDD 的了解，也为 iOS 中应用 TDD 做个入门介绍。&lt;/p&gt;
&lt;h2 id=&quot;iOS_中如何使用_TDD&quot;&gt;iOS 中如何使用 TDD&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Apple一直致力于在iOS开发中集成更加方便和可用的测试，在Xcode 5中，新的IDE和SDK引入了XCTest来替代原来的SenTestingKit，并且取消了新建工程时的“包括单元测试”的可选项（同样待遇的还有使用ARC的可选项）。新工程将自动包含测试的target，并且相关框架也搭建完毕，可以说测试终于摆脱了iOS开发中“二等公民”的地位，现在已经变得和产品代码一样重要了。  —————— 喵神&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;简单 Mark 下 TDD 在 Xcode 中的历程：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In 1998, the Swiss company Sen:te developed OCUnit, a testing framework for Objective-C (hence, the OC prefix). OCUnit was a port of SUnit, a testing framework that Kent Beck had written for Smalltalk in 1994.&lt;/li&gt;
&lt;li&gt;With Xcode 2.1, Apple added OCUnit to Xcode.&lt;/li&gt;
&lt;li&gt;In 2008, OCUnit was integrated into the iPhone SDK 2.2 to allow unit testing of iPhone apps.&lt;/li&gt;
&lt;li&gt;Four years later, OCUnit was renamed XCUnit (XC stands for Xcode).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;既然 Xcode 为我们内置了这么方便的 XCTest，我们没理由不好好使用阿~&lt;/p&gt;
&lt;p&gt;接下去通过实现一个简单的功能：把句子中每个单词的首字母转成大写字母，来走一遍 TDD 的流程。话不多说，开车了~&lt;/p&gt;
&lt;h3 id=&quot;1-_创建工程&quot;&gt;1. 创建工程&lt;/h3&gt;&lt;p&gt;这里创建一个常规的 iOS 工程，记得 &lt;code&gt;“ Include Unit Tests”&lt;/code&gt; 即可，语言我们选择 &lt;code&gt;Swift&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xkc7a.com1.z0.glb.clouddn.com/TDDdemo_0.jpeg&quot; alt=&quot;demo_0&quot;&gt;&lt;/p&gt;
&lt;p&gt;创建完毕后的工程目录如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xkc7a.com1.z0.glb.clouddn.com/TDDdemo_3.jpeg&quot; alt=&quot;demo_1&quot;&gt;&lt;/p&gt;
&lt;p&gt;默认为我们创建了 &lt;code&gt;TDDDemoTests.swift&lt;/code&gt; 文件，这里就是我们编写测试用例的地方。打开该文件，如下所示：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  TDDDemoTests.swift&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  TDDDemoTests&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  Created by Colin on 16/6/3.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  Copyright © 2016年 Colin. All rights reserved.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; XCTest&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@testable&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; TDDDemo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;TDDDemoTests&lt;/span&gt;: &lt;span class=&quot;title&quot;&gt;XCTestCase&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setUp&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.setUp()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Put setup code here. This method is called before the invocation of each test method in the class.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;tearDown&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Put teardown code here. This method is called after the invocation of each test method in the class.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.tearDown()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testExample&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// This is an example of a functional test case.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Use XCTAssert and related functions to verify your tests produce the correct results.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testPerformanceExample&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// This is an example of a performance test case.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.measureBlock &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Put the code you want to measure the time of here.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其中，有几个地方需要说明一下：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; XCTest&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@testable&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; TDDDemo&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;每一个测试用例都需要引入 &lt;code&gt;XCTest&lt;/code&gt; 框架，它定义了我们需要的 &lt;code&gt;XCTestCase&lt;/code&gt; 类，以及之后会用到的一些断言，比如 &lt;code&gt;XCTAssertEqual&lt;/code&gt; 等。另外，还需要手动导入 &lt;code&gt;TDDDemo&lt;/code&gt; 模块，我们之后的相关代码都会在 &lt;code&gt;TDDDemo&lt;/code&gt; 中编写，但是默认情况下，类，结构体，枚举以及它们的方法，都是内联的（&lt;code&gt;internal&lt;/code&gt;），这意味着它们所处模块外无法直接访问到它们。所以在此之外的测试代码无法访问到它们，故而需要使用 &lt;code&gt;@testable&lt;/code&gt; 关键字来让测试代码能访问它们。&lt;/p&gt;
&lt;p&gt;再看 &lt;code&gt;setUp&lt;/code&gt; 方法和 &lt;code&gt;tearDown&lt;/code&gt; 。在每个测试用例调用前，都会先调用 &lt;code&gt;setUp&lt;/code&gt; 方法，在每个测试用例执行结束后，都会调用 &lt;code&gt;tearDown&lt;/code&gt; 方法，大体流程就是：setUp — test case — tearDown — setUp — test case — tearDown …. 所以我们一般在 &lt;code&gt;setUp&lt;/code&gt; 中做一些初始化操作，在 &lt;code&gt;tearDown&lt;/code&gt;  做一些清除释放操作。&lt;/p&gt;
&lt;p&gt;另外，每一个测试方法都需要以 &lt;code&gt;test&lt;/code&gt; 开头，这样 Xcode 才能自动识别出它。比如默认提供的 &lt;code&gt;testExample&lt;/code&gt; 和 &lt;code&gt;testPerformanceExample&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;再有，这里建议在 Bulid 开始的时候，新建一个导航栏，并且打印 Build Log，这样我们能更直观知道发生了什么，哪里出错了。具体设置如下： &lt;strong&gt;Xcode | Preference | Behaviors&lt;/strong&gt; &lt;/p&gt;
&lt;p&gt;如图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xkc7a.com1.z0.glb.clouddn.com/TDDdemo_1.jpeg&quot; alt=&quot;demo_2&quot;&gt;&lt;/p&gt;
&lt;p&gt;现在 &lt;strong&gt;Command + U&lt;/strong&gt;，执行测试。毋庸置疑，测试通过（毕竟啥都还没开始写…）。你会看到如下界面：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xkc7a.com1.z0.glb.clouddn.com/TDDdemo_4.jpeg&quot; alt=&quot;demo_3&quot;&gt;&lt;/p&gt;
&lt;p&gt;左边的  &lt;strong&gt;Test Navigation&lt;/strong&gt; 列举了所有的测试用例以及对应的测试结果。中间的编辑区展示了 &lt;strong&gt;Bulid&lt;/strong&gt; 过程中具体做了什么，以及 &lt;strong&gt;Build&lt;/strong&gt; 结果。&lt;/p&gt;
&lt;p&gt;哦，对了。还有一处设置也很有用。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Edit Scheme | Test&lt;/strong&gt; ，可以看到右边列举了所有参与测试的用例。当然我们知道，每个用例的测试都是需要时间的，如果想对某个用例单独测试，或者不想测试某个用例，相应的勾选和去选就可以了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xkc7a.com1.z0.glb.clouddn.com/TDDdemo_5.jpeg&quot; alt=&quot;demo_4&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;2-_编写测试用例&quot;&gt;2. 编写测试用例&lt;/h3&gt;&lt;p&gt;好了，万事俱备，是时候展示真正的技术了！&lt;/p&gt;
&lt;p&gt;删除默认的 &lt;code&gt;TDDDemoTests.swift&lt;/code&gt; 文件，重新创建一个 &lt;code&gt;CapitalTest.swift&lt;/code&gt; 文件。在 &lt;code&gt;TDDDemoTests&lt;/code&gt; 分组中，&lt;strong&gt;File | New | File | iOS | Source | Unit Test Case Class&lt;/strong&gt; ，创建一个名为 &lt;strong&gt;CapitalTest&lt;/strong&gt; 并 继承自 &lt;strong&gt;XCTestCase&lt;/strong&gt; 的类。如图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xkc7a.com1.z0.glb.clouddn.com/TDDdemo_6.jpeg&quot; alt=&quot;demo_5&quot;&gt;&lt;/p&gt;
&lt;p&gt;删掉无用的 &lt;strong&gt;testExample，testPerformanceExample&lt;/strong&gt; 方法。&lt;/p&gt;
&lt;p&gt;引用 &lt;strong&gt;TDDDemo&lt;/strong&gt; 类。&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@testable&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; TDDDemo&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;编写测试用例：&lt;/p&gt;
&lt;p&gt;这里我们要做的是实现句子中单词首字母的大写转换，所以只要写个测试用例验证首字母是否都是大写即可。&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testMakeHeadline_ReturnsStringWithEachWordStartCapital&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; viewController = &lt;span class=&quot;type&quot;&gt;ViewController&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; string = &lt;span class=&quot;string&quot;&gt;&quot;this is A test headline&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; headline = viewController.makeHeadline(string)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;XCTAssertEqual&lt;/span&gt;(headline, &lt;span class=&quot;string&quot;&gt;&quot;This Is A Test Headline&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;很简单，我们希望有这样一个函数 &lt;code&gt;makeHeadline&lt;/code&gt;，它接受一个 &lt;strong&gt;String&lt;/strong&gt; 类型的参数，并返回转换成功的  &lt;strong&gt;String&lt;/strong&gt; 类型的结果。然后利用 &lt;code&gt;XCTAssertEqual&lt;/code&gt; 判断一下，当左右值相同时，它才会通过。&lt;/p&gt;
&lt;p&gt;很显然，这个时候会保持，且测试不通过，因为我们的 &lt;code&gt;makeHeadline&lt;/code&gt; 函数根本就不存在，现在就去实现它。&lt;/p&gt;
&lt;p&gt;回到 &lt;strong&gt;ViewController.swift&lt;/strong&gt; 中，添加如下方法。&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;makeHeadline&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(string: String)&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;String&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;This Is A Test Headline&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;Command + U&lt;/strong&gt; 走一遍，恭喜你，测试走通了。全部显示绿色的 Build succeeded。（眼尖的朋友可能发现问题了，不过不急，至少目前为止，我们的测试用例已经通过了~）&lt;/p&gt;
&lt;p&gt;然后接下去，做的就是重构了。虽然只写了几行代码，但是还是有优化空间的。&lt;/p&gt;
&lt;p&gt;我们之前提到过，&lt;strong&gt;setUp&lt;/strong&gt; 方法将在每个 &lt;strong&gt;test case&lt;/strong&gt; 调用前都自动被调用，所以这里可以放一些初始化相关操作。我们这里初始化了一个 &lt;strong&gt;ViewController&lt;/strong&gt; 类型的对象，不出意外的话，在每个测试用例中中需要初始化一个，这无疑是很麻烦的。所以我们可以把 &lt;strong&gt;viewController&lt;/strong&gt; 提出来，当做 &lt;strong&gt;CapitalTest&lt;/strong&gt; 类的一个属性，然后在 &lt;strong&gt;setUp&lt;/strong&gt; 方法中去初始化它。具体如下：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;CapitalTest&lt;/span&gt;: &lt;span class=&quot;title&quot;&gt;XCTestCase&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; viewController: &lt;span class=&quot;type&quot;&gt;ViewController&lt;/span&gt;!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setUp&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.setUp()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        viewController = &lt;span class=&quot;type&quot;&gt;ViewController&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;/////////&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;接下去，我们需要在编写另外一个测试用例，以保证第一个测试用例并不是偶然的。这也是我们在实际开发中需要做的，列举多个测试用例，来保证某个功能确实通过了。&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testMakeHeadline_ReturnsStringWithEachWordStartCapital2&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; string = &lt;span class=&quot;string&quot;&gt;&quot;Here is another Example&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; headline = viewController.makeHeadline(string)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;XCTAssertEqual&lt;/span&gt;(headline, &lt;span class=&quot;string&quot;&gt;&quot;Here Is Another Example&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;再次 &lt;strong&gt;Command + U&lt;/strong&gt;，不出意外，第一个还是通过，第二个则显示失败。原因大家都懂~&lt;/p&gt;
&lt;p&gt;接下去修改 &lt;code&gt;makeHeadline&lt;/code&gt; 的具体实现：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;makeHeadline&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(string: String)&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;String&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 1. 通过“ ”分割字符串, 存入数组&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; words = string.componentsSeparatedByString(&lt;span class=&quot;string&quot;&gt;&quot; &quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 2. 遍历数组, 移除首字母, 并插入对应的大写字母&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; headline = &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; word &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; words &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; firstCharacter = word.removeAtIndex(word.startIndex)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        headline += &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;subst&quot;&gt;\(String(firstCharacter)&lt;/span&gt;.uppercaseString)&lt;span class=&quot;subst&quot;&gt;\(word)&lt;/span&gt; &quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 3. 移除最后的“ ”&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    headline.removeAtIndex(headline.endIndex.predecessor())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; headline&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;代码很简单，注释也写的很清楚，这里就不累述了。再次 &lt;strong&gt;Command + U&lt;/strong&gt;，bingo~ 通过了。&lt;/p&gt;
&lt;p&gt;接下去再看看，是否有优化的空间。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;我们的测试用例描述的其实不太清楚，几个变量之间的关系比较凌乱。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;makeHeadline&lt;/strong&gt; 函数的实现太 Objc 化了，没有用上 Swift 里的高级功能。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;OK，既然不好，那就优化一下呗~&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testMakeHeadline_ReturnsStringWithEachWordStartCapital&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; inputString =       &lt;span class=&quot;string&quot;&gt;&quot;this is A test headline&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; expectedHeadline =  &lt;span class=&quot;string&quot;&gt;&quot;This Is A Test Headline&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; result = viewController.makeHeadline(inputString)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;XCTAssertEqual&lt;/span&gt;(result, expectedHeadline)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;makeHeadline&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(string: String)&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;String&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; words = string.componentsSeparatedByString(&lt;span class=&quot;string&quot;&gt;&quot; &quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; headline = words.&lt;span class=&quot;built_in&quot;&gt;map&lt;/span&gt; &amp;#123; (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; word) -&amp;gt; &lt;span class=&quot;type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; firstCharacter = word.removeAtIndex(word.startIndex)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;subst&quot;&gt;\(String(firstCharacter)&lt;/span&gt;.uppercaseString)&lt;span class=&quot;subst&quot;&gt;\(word)&lt;/span&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;#125;.joinWithSeparator(&lt;span class=&quot;string&quot;&gt;&quot; &quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; headline&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;再次  &lt;strong&gt;Command + U&lt;/strong&gt;，确保测试通过。至此，这个简单的例子算是介绍完了。&lt;/p&gt;
&lt;p&gt;虽然例子简单，只实现了一个功能，但是 TDD 相关的东西，具体流程也都涉及了，剩下的，只是重复这些操作直至完成所有需求。&lt;/p&gt;
&lt;p&gt;如果觉得这个例子太简单了，没学够，建议看下 &lt;a href=&quot;https://www.packtpub.com/application-development/test-driven-ios-development-swift&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《Test-Driven iOS Development with Swift》&lt;/a&gt;  一书中的 &lt;a href=&quot;http://www.packtpub.com/code_download/23832&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ToDo 源码&lt;/a&gt;，大篇幅介绍 TDD 的实际应用。&lt;/p&gt;
&lt;p&gt;Have Fun~&lt;/p&gt;
&lt;h2 id=&quot;参考链接&quot;&gt;参考链接&lt;/h2&gt;&lt;p&gt;由衷感谢以下作者的贡献，文中出现的一些理论阐述，有从相关文章中摘取。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://onevcat.com/2014/02/ios-test-with-kiwi/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;TDD的iOS开发初步以及Kiwi使用入门&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.ibm.com/developerworks/cn/linux/l-tdd/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;浅谈测试驱动开发（TDD）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/whitewolf/p/4205761.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;TDD(测试驱动开发)培训录&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.packtpub.com/application-development/test-driven-ios-development-swift&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《Test-Driven iOS Development with Swift》&lt;/a&gt; &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;http://creativecommons.org/licenses/by/2.5/cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://i.creativecommons.org/l/by/2.5/cn/88x31.png&quot; alt=&quot;知识共享许可协议&quot;&gt;&lt;/a&gt;本作品采用&lt;a href=&quot;http://creativecommons.org/licenses/by/2.5/cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;知识共享署名 2.5 中国大陆许可协议&lt;/a&gt;进行许可，欢迎转载，但转载请注明来自&lt;a href=&quot;http://colin1994.github.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Colin’s Nest&lt;/a&gt;，并保持转载后文章内容的完整。本人保留所有版权相关权利。&lt;/p&gt;
</content:encoded>
      
      <comments>http://http://colin1994.github.io/2016/06/03/TDD-With-Swift/#disqus_thread</comments>
    </item>
    
    <item>
      <title>为Hexo博客添加版权说明和打赏功能</title>
      <link>http://http://colin1994.github.io/2016/06/02/hexo-copyright-and-donate/</link>
      <guid>http://http://colin1994.github.io/2016/06/02/hexo-copyright-and-donate/</guid>
      <pubDate>Thu, 02 Jun 2016 12:06:06 GMT</pubDate>
      <description>
      
        &lt;blockquote&gt;
&lt;p&gt;今天为博客配置了自动添加版权说明和打赏功能，加深了对Hexo框架的理解，做个小小的总结。当然，如果喜欢也可以试试为自己的博客添加上。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;效果图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xkc7a.com1.z0.glb.clouddn.com/tailResult.png&quot; alt=&quot;tailResult&quot;&gt;&lt;/p&gt;
      
      </description>
      
      <content:encoded>&lt;blockquote&gt;
&lt;p&gt;今天为博客配置了自动添加版权说明和打赏功能，加深了对Hexo框架的理解，做个小小的总结。当然，如果喜欢也可以试试为自己的博客添加上。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;效果图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xkc7a.com1.z0.glb.clouddn.com/tailResult.png&quot; alt=&quot;tailResult&quot;&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;版权说明&quot;&gt;版权说明&lt;/h2&gt;&lt;p&gt;具体实现步骤如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在博客根目录下（和 source 同级），新建一个名为 &lt;code&gt;scripts&lt;/code&gt; 的文件夹。&lt;/li&gt;
&lt;li&gt;在 &lt;code&gt;scripts&lt;/code&gt; 文件夹内, 新建一个 &lt;code&gt;AddTail.js&lt;/code&gt; 脚本文件，脚本具体内容详见下文。&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在博客根目录下，新建一个 &lt;code&gt;tail.md&lt;/code&gt; 文件，里面写想要展示的版本说明内容。示例如下文所示。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;AddTail.js&lt;/code&gt; 脚本文件：&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Filename: AddTail.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Author: Colin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Date: 2016/06/02&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Based on the script by KUANG Qi: http://kuangqi.me/tricks/append-a-copyright-info-after-every-post/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Add a tail to every post from tail.md&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Great for adding copyright info&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; fs = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;fs&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo.extend.filter.register(&lt;span class=&quot;string&quot;&gt;&#39;before_post_render&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;data&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(data.copyright == &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; data;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// Add seperate line&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	data.content += &lt;span class=&quot;string&quot;&gt;&#39;\n___\n&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// Try to read tail.md&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; file_content = fs.readFileSync(&lt;span class=&quot;string&quot;&gt;&#39;tail.md&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(file_content &amp;amp;&amp;amp; data.content.length &amp;gt; &lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			data.content += file_content;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (err) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err.code !== &lt;span class=&quot;string&quot;&gt;&#39;ENOENT&#39;&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;// No process for ENOENT error&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  	&lt;span class=&quot;comment&quot;&gt;// 添加具体文章链接, 不需要去掉即可&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; permalink = &lt;span class=&quot;string&quot;&gt;&#39;\n本文链接：&#39;&lt;/span&gt; + data.permalink;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	data.content += permalink;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; data;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;tail.md&lt;/code&gt; 文件示例：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://creativecommons.org/licenses/by/2.5/cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://i.creativecommons.org/l/by/2.5/cn/88x31.png&quot; alt=&quot;知识共享许可协议&quot;&gt;&lt;/a&gt;本作品采用&lt;a href=&quot;http://creativecommons.org/licenses/by/2.5/cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;知识共享署名 2.5 中国大陆许可协议&lt;/a&gt;进行许可，欢迎转载，但转载请注明来自&lt;a href=&quot;http://colin1994.github.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Colin’s Nest&lt;/a&gt;，并保持转载后文章内容的完整。本人保留所有版权相关权利。&lt;/p&gt;
&lt;p&gt;如此，&lt;code&gt;hero clean&lt;/code&gt; 后重新 &lt;code&gt;hexo generate&lt;/code&gt; 即可。&lt;/p&gt;
&lt;h2 id=&quot;打赏功能&quot;&gt;打赏功能&lt;/h2&gt;&lt;p&gt;打赏功能的实现其实是直接嵌入到博客主题中的，所以修改了原先 &lt;code&gt;clone&lt;/code&gt; 下来的源码。当然，你可以发个 &lt;code&gt;PR&lt;/code&gt; ，或者直接选择支持打赏功能的主题。我这里选择的 &lt;a href=&quot;https://github.com/litten/hexo-theme-yilia&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Yilia&lt;/a&gt; 主题并不支持这个功能，所以只好自己实现一下。（虽然知道大概并没有什么用…）&lt;/p&gt;
&lt;h3 id=&quot;目标&quot;&gt;目标&lt;/h3&gt;&lt;p&gt;既然是嵌入到博客主题中，那么当然希望是可定制的。例如主题本身给我们提供的配置一样。大致目标如下：&lt;/p&gt;
&lt;p&gt;我们只需要在 &lt;code&gt;_config.yml&lt;/code&gt; 中加入如下语句, 即可完成打赏的配置&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#打赏&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;donate:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  enable: true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  text: Enjoy it ? Donate me !  欣赏此文？求鼓励，求支持！&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  wechat: http://7xkc7a.com1.z0.glb.clouddn.com/wechatImage.png&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  alipay: http://7xkc7a.com1.z0.glb.clouddn.com/alipayImage.png&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;enable&lt;/code&gt; 参数设置是否开启打赏功能。( &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; )&lt;/li&gt;
&lt;li&gt;&lt;code&gt;text&lt;/code&gt; 参数配置需要显示的内容&lt;/li&gt;
&lt;li&gt;&lt;code&gt;wechat&lt;/code&gt; 参数设置微信支付二维码 URL&lt;/li&gt;
&lt;li&gt;&lt;code&gt;alipay&lt;/code&gt; 参数设置支付宝支付二维码 URL&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;实现步骤&quot;&gt;实现步骤&lt;/h3&gt;&lt;p&gt;编辑主题内的 &lt;code&gt;article.ejs&lt;/code&gt; 文件，比如我这里位于 &lt;code&gt;themes/yilia/layout/_partial/article.ejs&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;&amp;lt;div class=&amp;quot;article-content&amp;quot;&amp;gt;...&amp;lt;/div&amp;gt;&lt;/code&gt; 的下面，&lt;code&gt;&amp;lt;%- partial(&amp;#39;footer&amp;#39;) %&amp;gt;&lt;/code&gt; 的上面插入如下HTML代码：&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;102&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;attr&quot;&gt;theme.donate&lt;/span&gt;) &amp;#123; %&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- css --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;style&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/css&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      .center &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          text-align: center;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      .hidden &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          display: none;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .donate_bar a.btn_donate&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      display: inline-block;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      width: 82px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      height: 82px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      background: url(&quot;http://7xsl28.com1.z0.glb.clouddn.com/btn_reward.gif&quot;) no-repeat;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      _background: url(&quot;http://7xsl28.com1.z0.glb.clouddn.com/btn_reward.gif&quot;) no-repeat;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- http://img.t.sinajs.cn/t5/style/images/apps_PRF/e_media/btn_reward.gif&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           因为本 hexo 生成的博客所用的 theme 的 a:hover 带动画效果，&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         为了在让打赏按钮显示效果正常 而 添加了以下几行 css，&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         嵌入其它博客时不一定要它们。 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      -webkit-transition: background 0s;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      -moz-transition: background 0s;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      -o-transition: background 0s;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      -ms-transition: background 0s;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      transition: background 0s;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- /让打赏按钮的效果显示正常 而 添加的几行 css 到此结束 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .donate_bar a.btn_donate:hover&amp;#123; background-position: 0px -82px;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .donate_bar .donate_txt &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      display: block;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      color: #9d9d9d;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      font: 14px/2 &quot;Microsoft Yahei&quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .bold&amp;#123; font-weight: bold; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;style&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- /css --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- Donate Module --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;donate_module&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- btn_donate &amp;amp; tips --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;donate_board&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;donate_bar center&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      ------------------------------------------------------------------------------------------------------------------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;btn_donate&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;btn_donate&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;target&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;_self&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;javascript:;&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;title&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;Donate 打赏&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;donate_txt&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;%=&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;theme.donate.text&lt;/span&gt; %&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- /btn_donate &amp;amp; tips --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- donate guide --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;donate_guide&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;donate_bar center hidden&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      ------------------------------------------------------------------------------------------------------------------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;%= theme.donate.wechat %&amp;gt;&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;title&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;用微信扫一扫哦~&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;fancybox&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;rel&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;article0&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;%= theme.donate.wechat %&amp;gt;&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;title&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;微信打赏 Colin&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;height&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;190px&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;width&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;auto&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;amp;nbsp;&amp;amp;nbsp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;%= theme.donate.alipay %&amp;gt;&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;title&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;用支付宝扫一扫即可~&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;fancybox&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;rel&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;article0&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;%= theme.donate.alipay %&amp;gt;&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;title&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;支付宝打赏 Colin&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;height&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;190px&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;width&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;auto&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;donate_txt&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;%=&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;theme.donate.text&lt;/span&gt; %&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- /donate guide --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- donate script --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;javascript&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;btn_donate&#39;&lt;/span&gt;).onclick = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      $(&lt;span class=&quot;string&quot;&gt;&#39;#donate_board&#39;&lt;/span&gt;).addClass(&lt;span class=&quot;string&quot;&gt;&#39;hidden&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      $(&lt;span class=&quot;string&quot;&gt;&#39;#donate_guide&#39;&lt;/span&gt;).removeClass(&lt;span class=&quot;string&quot;&gt;&#39;hidden&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;donate_on_web&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      $(&lt;span class=&quot;string&quot;&gt;&#39;#donate&#39;&lt;/span&gt;).submit();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; original_window_onload = &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.onload;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.onload = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (original_window_onload) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                original_window_onload();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;donate_board_wdg&#39;&lt;/span&gt;).className = &lt;span class=&quot;string&quot;&gt;&#39;hidden&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- /donate script --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- /Donate Module --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;%&lt;/span&gt; &amp;#125; %&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里通过判断是否显示打赏模块，执行相应的操作。点击打赏按钮，显示相应的二维码。&lt;/p&gt;
&lt;p&gt;这里还有个问题，在文章列表中，有时候也会显示打赏功能，这显然不是我们想要的。需要做的就是判断当前的的页面是详情页面还是介绍页面，比如我这里，把上面的代码放在如下判断语句中：&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;if&lt;/span&gt; (!&lt;span class=&quot;attr&quot;&gt;post.excerpt&lt;/span&gt; || !&lt;span class=&quot;attr&quot;&gt;index&lt;/span&gt;)&amp;#123; %&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- /上述代码 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;%&lt;/span&gt; &amp;#125;%&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如此，一个简单的打赏功能就实现了。&lt;/p&gt;
&lt;p&gt;当然，你如果觉得麻烦，但是又想实现打赏功能，那么可以尝试下 &lt;a href=&quot;http://www.dashangcloud.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;云打赏&lt;/a&gt;，据说一行代码集成打赏功能。&lt;/p&gt;
&lt;p&gt;Have fun ~     ：）&lt;/p&gt;
&lt;h2 id=&quot;参考链接&quot;&gt;参考链接&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://tono.tk/2016/03/26/Add_copyright_for_hexo/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;￼为Hexo博客文章自动添加版权信息&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://icehe.me/web/donate/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;实现网站的支付宝打赏功能&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;http://creativecommons.org/licenses/by/2.5/cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://i.creativecommons.org/l/by/2.5/cn/88x31.png&quot; alt=&quot;知识共享许可协议&quot;&gt;&lt;/a&gt;本作品采用&lt;a href=&quot;http://creativecommons.org/licenses/by/2.5/cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;知识共享署名 2.5 中国大陆许可协议&lt;/a&gt;进行许可，欢迎转载，但转载请注明来自&lt;a href=&quot;http://colin1994.github.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Colin’s Nest&lt;/a&gt;，并保持转载后文章内容的完整。本人保留所有版权相关权利。&lt;/p&gt;
</content:encoded>
      
      <comments>http://http://colin1994.github.io/2016/06/02/hexo-copyright-and-donate/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Jazzhands, 交互动画就是这么简单</title>
      <link>http://http://colin1994.github.io/2016/03/16/Interactive-animation-is-so-simple/</link>
      <guid>http://http://colin1994.github.io/2016/03/16/Interactive-animation-is-so-simple/</guid>
      <pubDate>Wed, 16 Mar 2016 09:11:00 GMT</pubDate>
      <description>
      
        &lt;blockquote&gt;
&lt;p&gt; &lt;a href=&quot;https://github.com/IFTTT/JazzHands&quot;&gt;Jazz Hands&lt;/a&gt;是IFTTT发布的一个基于关键帧的动画框架, 可以用于手势，滚动视图，KVO或者ReactiveCocoa, 十分方便。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;but, 到底有多方便呢 ?&lt;/p&gt;
&lt;p&gt;看看官方给出的一个demo效果:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xkc7a.com1.z0.glb.clouddn.com/Jazzhandsjazzhands-demo.gif&quot; alt=&quot;Jazzhandsjazzhands-demo&quot;&gt;&lt;/p&gt;
      
      </description>
      
      <content:encoded>&lt;blockquote&gt;
&lt;p&gt; &lt;a href=&quot;https://github.com/IFTTT/JazzHands&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Jazz Hands&lt;/a&gt;是IFTTT发布的一个基于关键帧的动画框架, 可以用于手势，滚动视图，KVO或者ReactiveCocoa, 十分方便。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;but, 到底有多方便呢 ?&lt;/p&gt;
&lt;p&gt;看看官方给出的一个demo效果:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xkc7a.com1.z0.glb.clouddn.com/Jazzhandsjazzhands-demo.gif&quot; alt=&quot;Jazzhandsjazzhands-demo&quot;&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;如果 &lt;code&gt;设计&lt;/code&gt; 要你做出这样一个效果的引导页, 有没有觉得头大 ?&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://wanzao2.b0.upaiyun.com/system/pictures/54/original/8.png&quot; alt=&quot;emoji&quot;&gt;&lt;/p&gt;
&lt;p&gt;然而, 在 &lt;code&gt;Jazzhands&lt;/code&gt; 里, 我们需要做的, 就是规划好各个组件需要展示的时机以及对应的位置。中间的衔接动画, 完全交给 &lt;code&gt;Jazzhands&lt;/code&gt; 去处理。 这样的感觉很爽有没有~ &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://wanzao2.b0.upaiyun.com/system/pictures/789/original/%E9%87%91%E5%A4%A7%E7%88%B79.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;然而, &lt;code&gt;Jazzhands&lt;/code&gt; 具体为我们做了什么, 它是怎么做的 ?  它适用于哪些场景 ? 下文我们一一分析~&lt;/p&gt;
&lt;h2 id=&quot;Jazzhands原理分析&quot;&gt;Jazzhands原理分析&lt;/h2&gt;&lt;p&gt;先看一下源工程目录: &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xkc7a.com1.z0.glb.clouddn.com/Jazzhands4F254DBC-408A-4073-A73C-8CBABBC6D580.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;这一大串看下来, 貌似很复杂, 实则不然。&lt;/p&gt;
&lt;p&gt;我们可以简单的归为 三大类 文件来看。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;IFTTTAnimation, IFTTTAnimatable, IFTTTBackgroundColorAnimation, IFTTTAlphaAnimation …&lt;/code&gt;  之类的动画类型。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;IFTTTAnimator&lt;/code&gt; 动画执行者&lt;/li&gt;
&lt;li&gt;&lt;code&gt;IFTTTAnimatedPagingScrollViewController, IFTTTAnimatedScrollViewController&lt;/code&gt; 封装好的控制器类型。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;动画类型&quot;&gt;动画类型&lt;/h3&gt;&lt;p&gt;动画类型, 我们拿最简单的  &lt;code&gt;alpha&lt;/code&gt; 变化动画来分析。 &lt;/p&gt;
&lt;p&gt;&lt;code&gt;IFTTTAlphaAnimation.m&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  IFTTTAlphaAnimation.m&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  JazzHands&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  Created by Devin Foley on 9/27/13.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  Copyright (c) 2013 IFTTT Inc. All rights reserved.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#import &lt;span class=&quot;meta-string&quot;&gt;&quot;IFTTTAlphaAnimation.h&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@implementation&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;IFTTTAlphaAnimation&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)addKeyframeForTime:(&lt;span class=&quot;built_in&quot;&gt;CGFloat&lt;/span&gt;)time alpha:(&lt;span class=&quot;built_in&quot;&gt;CGFloat&lt;/span&gt;)alpha&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (![&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; validAlpha:alpha]) &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; addKeyframeForTime:time value:@(alpha)];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)addKeyframeForTime:(&lt;span class=&quot;built_in&quot;&gt;CGFloat&lt;/span&gt;)time alpha:(&lt;span class=&quot;built_in&quot;&gt;CGFloat&lt;/span&gt;)alpha withEasingFunction:(IFTTTEasingFunction)easingFunction&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (![&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; validAlpha:alpha]) &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; addKeyframeForTime:time value:@(alpha) withEasingFunction:easingFunction];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt;)validAlpha:(&lt;span class=&quot;built_in&quot;&gt;CGFloat&lt;/span&gt;)alpha&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSAssert&lt;/span&gt;((alpha &amp;gt;= &lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;f) &amp;amp;&amp;amp; (alpha &amp;lt;= &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;f), &lt;span class=&quot;string&quot;&gt;@&quot;Alpha values must be between zero and one.&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((alpha &amp;lt; &lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;f) || (alpha &amp;gt; &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;f)) &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NO&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)animate:(&lt;span class=&quot;built_in&quot;&gt;CGFloat&lt;/span&gt;)time&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.hasKeyframes) &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.view.alpha = (&lt;span class=&quot;built_in&quot;&gt;CGFloat&lt;/span&gt;)[(&lt;span class=&quot;built_in&quot;&gt;NSNumber&lt;/span&gt; *)[&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; valueAtTime:time] floatValue];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;IFTTTAlphaAnimation&lt;/code&gt; 基础自基类 &lt;code&gt;IFTTTAnimation&lt;/code&gt; , 重写了对应的 &lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)addKeyframeForTime:(&lt;span class=&quot;built_in&quot;&gt;CGFloat&lt;/span&gt;)time value:(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;&amp;lt;IFTTTInterpolatable&amp;gt;)value;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)addKeyframeForTime:(&lt;span class=&quot;built_in&quot;&gt;CGFloat&lt;/span&gt;)time value:(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;&amp;lt;IFTTTInterpolatable&amp;gt;)value withEasingFunction:(IFTTTEasingFunction)easingFunction;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;&amp;lt;IFTTTInterpolatable&amp;gt;)valueAtTime:(&lt;span class=&quot;built_in&quot;&gt;CGFloat&lt;/span&gt;)time;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里所有的动画, 强调一个 &lt;code&gt;time - value&lt;/code&gt; 键值对。 这也是关键帧动画的重点。&lt;/p&gt;
&lt;p&gt;我们需要做的, 就是维护这样一个 &lt;code&gt;keyframes (NSMutableArray)&lt;/code&gt; , 里面的元素代表一个个存储了位置的时刻。&lt;/p&gt;
&lt;p&gt;以 &lt;code&gt;alpha&lt;/code&gt; 动画为例, 这里的 &lt;code&gt;time&lt;/code&gt; 就是对应的关键帧, &lt;code&gt;value&lt;/code&gt; 就是对应的alpha值。&lt;/p&gt;
&lt;p&gt;比如: &lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;   IFTTTAlphaAnimation *alphaAnimation = [IFTTTAlphaAnimation animationWithView:aView];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   [alphaAnimation addKeyframeForTime:&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt; alpha:&lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.....&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里表示了在 100 帧处, 他对应的 alpha 值是 0.5。&lt;/p&gt;
&lt;p&gt;所以, 对于动画的设定, 我们需要做的就是:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;选择动画类型。 &lt;code&gt;IFTTTBackgroundColorAnimation, IFTTTAlphaAnimation …&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;添加关键帧。 &lt;code&gt;[alphaAnimation addKeyframeForTime:100 alpha:0.5];&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;把动画添加到执行者上面。 &lt;code&gt;[self.animator addAnimation:alphaAnimation];  (这个后面再介绍, 放心, so eazy~)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;抱歉, 没有了~&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;没错, 就是这么简单。 但是这里有个疑惑, 所谓的关键帧动画, 就是我们提供足够多的关键帧, 然后去逐帧执行。 这是否意味着, 我们需要提供足够多的帧数, 来保证动画的流畅性 ?&lt;/p&gt;
&lt;p&gt;如果是这样, 那我们写出来的代码岂不是:&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;    [alphaAnimation addKeyframeForTime:&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; alpha:&lt;span class=&quot;number&quot;&gt;0.1&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [alphaAnimation addKeyframeForTime:&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; alpha:&lt;span class=&quot;number&quot;&gt;0.15&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [alphaAnimation addKeyframeForTime:&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; alpha:&lt;span class=&quot;number&quot;&gt;0.2&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [alphaAnimation addKeyframeForTime:&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt; alpha:&lt;span class=&quot;number&quot;&gt;0.25&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;........&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;http://wanzao2.b0.upaiyun.com/system/pictures/599/original/%E6%82%B2%E5%82%AC8.png&quot; alt=&quot;EMOJI&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NO, NO, NO&lt;/strong&gt;, 前面我们已经说过了, 这很简单~ 简单意味着, 你只需要提供几个关键点的位置 (起始点, 转折点, 终点), 再设置下它们之间的过渡类型 (Linear, EaseInQuad, EaseInOutQuad…) ，然后, 动画就做完了~ 至于中间各个关键帧的值, 是怎么确定的呢 ？ 放心, &lt;code&gt;Jazzhands&lt;/code&gt; 已经帮我们做好咯~&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;&amp;lt;IFTTTInterpolatable&amp;gt;)valueAtTime:(&lt;span class=&quot;built_in&quot;&gt;CGFloat&lt;/span&gt;)time&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSAssert&lt;/span&gt;(!&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.isEmpty, &lt;span class=&quot;string&quot;&gt;@&quot;At least one KeyFrame must be set before animation begins.&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; value;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSUInteger&lt;/span&gt; indexAfter = [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; indexOfKeyframeAfterTime:time];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (indexAfter == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        value = ((IFTTTKeyframe *)&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.keyframes[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]).value;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (indexAfter &amp;lt; &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.keyframes.count) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        IFTTTKeyframe *keyframeBefore = (IFTTTKeyframe *)&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.keyframes[indexAfter - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        IFTTTKeyframe *keyframeAfter = (IFTTTKeyframe *)&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.keyframes[indexAfter];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;CGFloat&lt;/span&gt; progress = [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; progressFromTime:keyframeBefore.time toTime:keyframeAfter.time atTime:time withEasingFunction:keyframeBefore.easingFunction];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        value = [keyframeBefore.value interpolateTo:keyframeAfter.value withProgress:progress];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        value = ((IFTTTKeyframe *)&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.keyframes.lastObject).value;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; value;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;动画执行者&quot;&gt;动画执行者&lt;/h3&gt;&lt;p&gt;动画执行者, 看着就很牛x, 然而它的实现实际上非常简单， 就几行代码。 它负责 &lt;code&gt;管理动画对象&lt;/code&gt; 和 &lt;code&gt;在对应位置执行动画&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;简单来说, 就这两个方法:&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)addAnimation:(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;&amp;lt;IFTTTAnimatable&amp;gt;)animation&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.animations addObject:animation];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)animate:(&lt;span class=&quot;built_in&quot;&gt;CGFloat&lt;/span&gt;)time&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;&amp;lt;IFTTTAnimatable&amp;gt; animation &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.animations) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [animation animate:time];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;很简洁有没有。&lt;/p&gt;
&lt;p&gt;上文提到了 把动画添加到执行者上面。 &lt;code&gt;[self.animator addAnimation:alphaAnimation];&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这也就是 &lt;code&gt;IFTTTAnimator&lt;/code&gt; 的第一个作用, 管理动画对象。animations(NSMutableArray) 里面存储着所有设定的动画。&lt;/p&gt;
&lt;p&gt;然后 &lt;code&gt;[self.animator animate:0];&lt;/code&gt; 就是执行对应的动画了。 这个方法就是在交互的时候, 调用。比如:&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 滚动视图&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)scrollViewDidScroll:(&lt;span class=&quot;built_in&quot;&gt;UIScrollView&lt;/span&gt; *)scrollView&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt; scrollViewDidScroll:scrollView];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.animator animate:scrollView.contentOffset.x];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 手势&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;IBAction&lt;/span&gt;)handlePan:(&lt;span class=&quot;built_in&quot;&gt;UIPanGestureRecognizer&lt;/span&gt; *)recognizer&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.animator animate:[recognizer locationOfTouch:&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; inView:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.view].x];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;控制器类型&quot;&gt;控制器类型&lt;/h3&gt;&lt;p&gt;&lt;code&gt;Jazzhands&lt;/code&gt; 帮我们封装好了两种控制器类型 (IFTTTAnimatedPagingScrollViewController, IFTTTAnimatedScrollViewController)。 我们可以直接基于此, 做相应的动画。 这是十分方便的。比如官方的demo就是基于 &lt;code&gt;IFTTTAnimatedPagingScrollViewController&lt;/code&gt; 来实现的。&lt;/p&gt;
&lt;p&gt;它实现了 &lt;code&gt;scrollViewDidScroll&lt;/code&gt; 等方法。&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)scrollViewDidScroll:(&lt;span class=&quot;built_in&quot;&gt;UIScrollView&lt;/span&gt; *)scrollView&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; updatePageOffset];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; animateCurrentFrame];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt; 并且把 &lt;code&gt;time&lt;/code&gt; 关键帧的概念, 进一步转化为 &lt;code&gt;page&lt;/code&gt; 的概念。 也就是说, 你只要指定某个动画, 它在第几个page, 第几个page存在, 各自存在什么位置即可。十分方便~&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)keepView:(&lt;span class=&quot;built_in&quot;&gt;UIView&lt;/span&gt; *)view onPage:(&lt;span class=&quot;built_in&quot;&gt;CGFloat&lt;/span&gt;)page withAttribute:(IFTTTHorizontalPositionAttribute)attribute&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; keepView:view onPage:page withAttribute:attribute offset:&lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;f];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;使用场景_(Demo)&quot;&gt;使用场景 (Demo)&lt;/h2&gt;&lt;p&gt;说了这么多, 想必大家对 &lt;code&gt;Jazzhands&lt;/code&gt; 的实现原理都有一定了解。 那什么时候该用到它呢 ?&lt;/p&gt;
&lt;p&gt;我觉得 &lt;code&gt;引导页&lt;/code&gt; 是不二选择 ~ 毕竟类似的视差动画, 在引导页的应用是最广的。&lt;/p&gt;
&lt;p&gt;至于是否需要基于封装好的控制器来实现, 这就要根据具体的需求来定了。&lt;/p&gt;
&lt;p&gt;比如官方Demo这样, 所有动画, 在相同的关键帧位置, 有重叠部分。(两个page 可以同时存在), 那基于 &lt;code&gt;IFTTTAnimatedPagingScrollViewController&lt;/code&gt; 再合适不过了。&lt;/p&gt;
&lt;p&gt;不过如果动画有阻尼效果, 也就是当前界面只能存在一个page, 那就建议直接用 &lt;code&gt;UIViewController&lt;/code&gt; 撸, 然后借助 &lt;code&gt;手势&lt;/code&gt; , 来实现对应的效果。&lt;/p&gt;
&lt;p&gt;比如可以仿照下美图秀秀的引导页, 写个简单demo, 效果如下:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xkc7a.com1.z0.glb.clouddn.com/JazzhandsunityResult2.gif&quot; alt=&quot;MTXX_DEMO&quot;&gt;&lt;/p&gt;
&lt;p&gt;具体 源码 就不上传了。 相信大家利用 Jazzhands 不难做出类似的效果。(有需要的可以私下交流~)&lt;/p&gt;
&lt;h2 id=&quot;总结&quot;&gt;总结&lt;/h2&gt;&lt;p&gt;总体来说, 这个开源库还是非常精简，而且思路非常清晰，依然基于Core Animation之上，因为它只是针对于UIKit上去做帧的配置，对帧的封装上更加灵活，但是缺点是实现复杂的动画时，代码量比较大。另外布局约束呢, 都得手撸,,&lt;/p&gt;
&lt;p&gt;还是很赞的~ &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://wanzao2.b0.upaiyun.com/system/pictures/801/original/%E9%87%91%E5%A4%A7%E7%88%B721.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;http://creativecommons.org/licenses/by/2.5/cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://i.creativecommons.org/l/by/2.5/cn/88x31.png&quot; alt=&quot;知识共享许可协议&quot;&gt;&lt;/a&gt;本作品采用&lt;a href=&quot;http://creativecommons.org/licenses/by/2.5/cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;知识共享署名 2.5 中国大陆许可协议&lt;/a&gt;进行许可，欢迎转载，但转载请注明来自&lt;a href=&quot;http://colin1994.github.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Colin’s Nest&lt;/a&gt;，并保持转载后文章内容的完整。本人保留所有版权相关权利。&lt;/p&gt;
</content:encoded>
      
      <comments>http://http://colin1994.github.io/2016/03/16/Interactive-animation-is-so-simple/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Photo Editing Extension 详解 (附带应用滤镜Demo)</title>
      <link>http://http://colin1994.github.io/2016/03/12/Photo-Editing-Extension/</link>
      <guid>http://http://colin1994.github.io/2016/03/12/Photo-Editing-Extension/</guid>
      <pubDate>Sat, 12 Mar 2016 13:34:35 GMT</pubDate>
      <description>
      
        &lt;blockquote&gt;
&lt;p&gt;extension是iOS8新开放的一种对几个固定系统区域的扩展机制，它可以在一定程度上弥补iOS的沙盒机制对应用间通信的限制。允许应用帮助系统扩展自定义功能，去实现一个特定作用域的任务，如照片编辑、自定义键盘、通知中心、Action动作、Share分享等。 这对于一向封闭的iOS来说, 无疑是一大福音。&lt;/p&gt;
&lt;/blockquote&gt;
      
      </description>
      
      <content:encoded>&lt;blockquote&gt;
&lt;p&gt;extension是iOS8新开放的一种对几个固定系统区域的扩展机制，它可以在一定程度上弥补iOS的沙盒机制对应用间通信的限制。允许应用帮助系统扩展自定义功能，去实现一个特定作用域的任务，如照片编辑、自定义键盘、通知中心、Action动作、Share分享等。 这对于一向封闭的iOS来说, 无疑是一大福音。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;虽然iOS8离现在比较远了, 分享 &lt;strong&gt;“Extension “&lt;/strong&gt; 相关的文章也很多了, 不过对于&lt;strong&gt;“Photo Editing”&lt;/strong&gt;, 我觉得还是有必要来讲一讲的, 一来多数教程介绍Extension 的时候都是拿&lt;strong&gt;Widgets&lt;/strong&gt;举例, 再有&lt;strong&gt;Photo Editing&lt;/strong&gt;是可自定义内容最丰富的一个, 你完全可以把它当作App里额外的一个界面来完成。&lt;/p&gt;
&lt;p&gt;正好前一阵在实习的时候, 实现过相关功能, 总结一番也是极好。&lt;/p&gt;
&lt;h1 id=&quot;1-_相关概念&quot;&gt;1. 相关概念&lt;/h1&gt;&lt;h2 id=&quot;1-1_Extension_Point&quot;&gt;1.1 Extension Point&lt;/h2&gt;&lt;p&gt;系统中支持Extension 的区域，Extension 的类别也是据此区分的，iOS上共有Today、Share、Action、Photo Editing、Storage Provider、Custom keyboard几种，其中Today中的extension又被称为Widget。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;今日(Today，又称为Widget)&lt;/strong&gt;：可以快速获取更新或者在通知中心的今日视图中执行一项快速任务。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;共享(Share)&lt;/strong&gt;：发布到一个共享网站或者与其它应用程序共享内容。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;动作(Action)&lt;/strong&gt;：在另一个应用程序的上下文中操作或查看内容。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;照片编辑(Photo Editing)&lt;/strong&gt;（仅限于iOS）：在照片应用程序中编辑照片或视频。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;查找器&lt;/strong&gt;（仅限于iOS）：在查找器中直接显示文件同步的状态信息。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;文档提供程序(Storage Provider)&lt;/strong&gt;（仅限于iOS）：提供对文件库的访问和管理。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;自定义键盘(Custom keyboard)&lt;/strong&gt;（仅限于iOS）：用自定义键盘替代iOS系统键盘，并用于所有的应用程序中。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;由于每个扩展点都有与之相关的使用策略和专门的API，开发人员必须为他们想要提供的那种功能选择恰当的扩展点, 每种Extension Point的使用方式和适合干的活都不一样，因此不存在通用的Extension 。&lt;/p&gt;
&lt;p&gt;例如，在默认情况下，键盘Extension“&lt;a href=&quot;https://developer.apple.com/library/prerelease/ios/documentation/General/Conceptual/ExtensibilityPG/Keyboard.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;不能访问网络，而且不能与其包含应用程序共享同一容器&lt;/a&gt;”。通过对Extension进行恰当的配置，这样的限制可以移除，但开发人员仍然需要遵守苹果应用商店审查指南和iOS开发者计划许可协议中的具体的网络键盘指南。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://img.my.csdn.net/uploads/201512/13/1449993990_7598.png&quot; alt=&quot;Extension Point&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;1-2_App_Extension&quot;&gt;1.2 App Extension&lt;/h2&gt;&lt;p&gt;即为本文所说的Extension。Extension并不是一个独立的app，它有一个包含在App Bundle中的独立Bundle，Extension的Bundle后缀名是.appex。其生命周期也和普通App不同，这些后文将会详述。&lt;/p&gt;
&lt;p&gt;Extension不能单独存在，必须有一个包含它的Containing App。&lt;/p&gt;
&lt;p&gt;另外，Extension需要用户手动激活，不同的Extension激活方式也不同。&lt;/p&gt;
&lt;p&gt;比如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Today中的widget需要在Today中激活和关闭；&lt;/li&gt;
&lt;li&gt;Custom keyboard需要在设置中进行相关设置；&lt;/li&gt;
&lt;li&gt;Photo Editing需要在使用照片时在照片管理器中激活或关闭；&lt;/li&gt;
&lt;li&gt;Storage Provider可以在选择文件时出现；&lt;/li&gt;
&lt;li&gt;Share和Action可以在任何应用里被激活，但前提是开发者需要设置Activation Rules，以确定extension需要在合适出现。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;1-3_Containing_App&quot;&gt;1.3 Containing App&lt;/h2&gt;&lt;p&gt;尽管苹果开放了Extension，但是在iOS中Extension并不能单独存在，要想提交到AppStore，必须将Extension包含在一个app中提交，并且App的实现部分不能为空, 这个包含Extension的App就叫Containing App。&lt;/p&gt;
&lt;p&gt;Extension会随着Containing App的安装而安装，同时随着Containing App的卸载而卸载。&lt;/p&gt;
&lt;h2 id=&quot;1-4_Host_App&quot;&gt;1.4 Host App&lt;/h2&gt;&lt;p&gt;能够调起Extension的App被称为Host App。&lt;/p&gt;
&lt;p&gt;比如:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;widget的Host App就是Today。&lt;/li&gt;
&lt;li&gt;Photo Editing 的 Host App 就是 Photos&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;2-_Extension和Containing_App、Host_App通信&quot;&gt;2. Extension和Containing App、Host App通信&lt;/h1&gt;&lt;h2 id=&quot;2-1_Extension和Host_App&quot;&gt;2.1 Extension和Host App&lt;/h2&gt;&lt;p&gt;Extension和Host App之间可以通过extensionContext属性直接通信，该属性是新增加的UIViewController类别：&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;UIViewController&lt;/span&gt;(&lt;span class=&quot;title&quot;&gt;NSExtensionAdditions&lt;/span&gt;) &amp;lt;&lt;span class=&quot;title&quot;&gt;NSExtensionRequestHandling&lt;/span&gt;&amp;gt; &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Returns the extension context. Also acts as a convenience method for a view controller to check if it participating in an extension request. &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;readonly&lt;/span&gt;,retain) &lt;span class=&quot;built_in&quot;&gt;NSExtensionContext&lt;/span&gt; *extensionContext &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;_0); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;实际上extension和Host App之间是通过IPC（interprocess communication）实现的，只是苹果把调用接口高度抽象了，我们并不需要关注那么底层的东西。&lt;/p&gt;
&lt;h2 id=&quot;2-2_Containing_App和Host_App&quot;&gt;2.2 Containing App和Host App&lt;/h2&gt;&lt;p&gt;他们之间没有任何直接关系，也从来不需要通信。&lt;/p&gt;
&lt;h2 id=&quot;2-3_Extension和Containing_App&quot;&gt;2.3 Extension和Containing App&lt;/h2&gt;&lt;p&gt;这二者之间的关系最复杂，纠纠缠缠扯不清关系。&lt;/p&gt;
&lt;p&gt;众所周知，&lt;a href=&quot;https://developer.apple.com/library/ios/documentation/iphone/conceptual/iphoneosprogrammingguide/TheiOSEnvironment/TheiOSEnvironment.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;每个iOS应用程序都有自己的沙箱&lt;/a&gt;。&lt;a href=&quot;https://developer.apple.com/library/mac/documentation/security/conceptual/AppSandboxDesignGuide/AppSandboxInDepth/AppSandboxInDepth.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;通过Mac苹果应用商店分发的OS X应用程序&lt;/a&gt;也有类似的要求，不过许多OS X应用程序是在Mac苹果应用商店之外分发的，并不需要遵守这一沙箱要求。&lt;/p&gt;
&lt;p&gt;沙箱是苹果iOS安全策略的基石之一。沙箱是为了限制应用程序对文件、首选项、网络资源、硬件等的访问，具体来讲，其目的是为了限制受损的应用程序可能对系统造成的损害。&lt;/p&gt;
&lt;p&gt;考虑到并不是所有可以用在应用程序中的API都可以用在Extension中，所以与通常的应用程序相比，App Extension运行在有更多限制的沙箱中。不能在Extension中使用的API标记为不可用宏，如NS_EXTENSIONS_UNAVAILABLE，它会在链接时导致失败。&lt;/p&gt;
&lt;p&gt;此外，对于Extension与其它应用程序之间的通信，苹果有几项强制规定：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;调用Extension的应用程序即主应用程序不能启动Extension；只有系统可以启动Extension。&lt;/li&gt;
&lt;li&gt;当Extension启动后，主应用程序就和它直接通信。&lt;/li&gt;
&lt;li&gt;主应用程序永远不和包含应用程序直接通信。&lt;/li&gt;
&lt;li&gt;Extension不是一个应用程序，但它由系统生成，并有它自己单独的进程。&lt;/li&gt;
&lt;li&gt;为了在包含应用程序和它的Extension之间共享数据，包含应用程序及其Extension都必须是应用程序组的一部分。对于应用程序组的其中两个成员，部分数据可以在两者沙箱之外的第三个容器中共享。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;正如Ars Technica的Andrew Cunningham总结的那样，这些规则的最终结果主要是一个应用程序不能进入另一个应用程序的沙箱。这与Android相反，在Android上，&lt;a href=&quot;http://developer.android.com/guide/topics/providers/content-providers.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;内容提供程序&lt;/a&gt;和&lt;a href=&quot;http://developer.android.com/reference/android/content/ContentResolver.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;解析程序&lt;/a&gt;仍然可以一起工作来为应用程序提供对其它应用程序中数据的访问。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;不能直接通信:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;首先，尽管Extension的bundle是放在Containing App的bundle中，但是他们是两个完全独立的进程，之间不能直接通信。不过Extension可以通过openURL的方式启动Containing App（当然也能启动其它App），不过必须通过extensionContext借助host app来实现：&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//通过openURL的方式启动Containing APP &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)openURLContainingAPP &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.extensionContext openURL:[&lt;span class=&quot;built_in&quot;&gt;NSURL&lt;/span&gt; URLWithString:&lt;span class=&quot;string&quot;&gt;@&quot;appextension://123&quot;&lt;/span&gt;] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 completionHandler:^(&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt; success) &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                     &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;open url result:%d&quot;&lt;/span&gt;,success); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 &amp;#125;]; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;Extension中是无法直接使用openURL的。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;可以共享Shared Resources:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Extension和Containing App可以共同读写一个被称为Shared Resources的存储区域，这是通过App Groups实现的，后文将会详述。&lt;/p&gt;
&lt;p&gt;三者间的关系可以通过官网给的两张图片形象地说明：&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;http://img.my.csdn.net/uploads/201512/13/1449995608_4851.png&quot; alt=&quot;Extension_Containing_App_1&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://img.my.csdn.net/uploads/201512/13/1449995608_8648.png&quot; alt=&quot;Extension_Containing_App_2&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;3-_数据共享&quot;&gt;3. 数据共享&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;App Groups&lt;/strong&gt;这是iOS8新开放的功能，在OS X上早就可用了。它主要用于同一Group下的App共享同一份读写空间，以实现数据共享。&lt;/p&gt;
&lt;h2 id=&quot;3-1_功能开启&quot;&gt;3.1 功能开启&lt;/h2&gt;&lt;p&gt;为了便于后续操作，请先确保你的开发者账号在Xcode上处于登录状态。&lt;/p&gt;
&lt;h3 id=&quot;3-1-1_在App中开启&quot;&gt;3.1.1 在App中开启&lt;/h3&gt;&lt;p&gt;App Groups位于：&lt;/p&gt;
&lt;p&gt;TARGETS—&amp;gt;AppExtensionDemo—&amp;gt;Capabilities—&amp;gt;App Groups`&lt;/p&gt;
&lt;p&gt;找到以后，将App Groups右上角的开关打开，然后选择添加Groups，正规的命名规则应该是：group.com.company.app。&lt;/p&gt;
&lt;p&gt;添加成功以后如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://img.my.csdn.net/uploads/201512/13/1449996631_7873.jpeg&quot; alt=&quot;App_Groups&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;3-1-2_在Extension中开启&quot;&gt;3.1.2 在Extension中开启&lt;/h3&gt;&lt;p&gt;开启方式和App中一样，需要注意的是必须保证这里地App Groups名称和App中的相同。&lt;/p&gt;
&lt;h2 id=&quot;3-2_extension和containing_app数据共享&quot;&gt;3.2 extension和containing app数据共享&lt;/h2&gt;&lt;p&gt;App Groups给我们提供了同一Group内App可以共同读写的区域，可以通过以下方式实现数据共享：&lt;/p&gt;
&lt;h3 id=&quot;3-2-1_通过NSUserDefaults共享数据&quot;&gt;3.2.1 通过NSUserDefaults共享数据&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;存数据&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;通过以下方式向NSUserDefaults中保存数据：&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)saveTextBy&lt;span class=&quot;built_in&quot;&gt;NSUserDefaults&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSUserDefaults&lt;/span&gt; *shared = [[&lt;span class=&quot;built_in&quot;&gt;NSUserDefaults&lt;/span&gt; alloc] initWithSuiteName:&lt;span class=&quot;string&quot;&gt;@&quot;group.com.xx.test&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [shared setObject:_textField.text forKey:&lt;span class=&quot;string&quot;&gt;@&quot;test&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [shared synchronize];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;需要注意的是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;保存数据的时候必须指明group id；&lt;/li&gt;
&lt;li&gt;而且要注意NSUserDefaults能够处理的数据只能是可plist化的对象，详情见&lt;a href=&quot;https://developer.apple.com/library/mac/documentation/Cocoa/Conceptual/PropertyLists/AboutPropertyLists/AboutPropertyLists.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Property List Programming Guide&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;为了防止出现数据同步问题，不要忘记调用&lt;code&gt;[shared synchronize];&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;读数据&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;对应的读取数据方式：&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *)readDataFrom&lt;span class=&quot;built_in&quot;&gt;NSUserDefaults&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSUserDefaults&lt;/span&gt; *shared = [[&lt;span class=&quot;built_in&quot;&gt;NSUserDefaults&lt;/span&gt; alloc] initWithSuiteName:&lt;span class=&quot;string&quot;&gt;@&quot;group.com.xx.test&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *value = [shared valueForKey:&lt;span class=&quot;string&quot;&gt;@&quot;test&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; value;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;3-2-1_通过NSFileManager共享数据&quot;&gt;3.2.1 通过NSFileManager共享数据&lt;/h3&gt;&lt;p&gt;NSFileManager在iOS7提供了containerURLForSecurityApplicationGroupIdentifier方法，可以用来实现app group共享数据。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;存数据&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt;)saveTextBy&lt;span class=&quot;built_in&quot;&gt;NSFileManager&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSError&lt;/span&gt; *err = &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSURL&lt;/span&gt; *containerURL = [[&lt;span class=&quot;built_in&quot;&gt;NSFileManager&lt;/span&gt; defaultManager] containerURLForSecurityApplicationGroupIdentifier:&lt;span class=&quot;string&quot;&gt;@&quot;group.com.xx.test&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    containerURL = [containerURL URLByAppendingPathComponent:&lt;span class=&quot;string&quot;&gt;@&quot;Library/Caches/good&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *value = _textField.text;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt; result = [value writeToURL:containerURL atomically:&lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt; encoding:&lt;span class=&quot;built_in&quot;&gt;NSUTF8StringEncoding&lt;/span&gt; error:&amp;amp;err];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!result) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;%@&quot;&lt;/span&gt;,err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;save value:%@ success.&quot;&lt;/span&gt;,value);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;读数据&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *)readTextBy&lt;span class=&quot;built_in&quot;&gt;NSFileManager&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSError&lt;/span&gt; *err = &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSURL&lt;/span&gt; *containerURL = [[&lt;span class=&quot;built_in&quot;&gt;NSFileManager&lt;/span&gt; defaultManager] containerURLForSecurityApplicationGroupIdentifier:&lt;span class=&quot;string&quot;&gt;@&quot;group.com.xx.test&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    containerURL = [containerURL URLByAppendingPathComponent:&lt;span class=&quot;string&quot;&gt;@&quot;Library/Caches/good&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *value = [&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; stringWithContentsOfURL:containerURL encoding:&lt;span class=&quot;built_in&quot;&gt;NSUTF8StringEncoding&lt;/span&gt; error:&amp;amp;err];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; value;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;PS:&lt;/p&gt;
&lt;p&gt;两个应用共同读取同一份数据，就会引发数据同步问题。WWDC2014的视频中建议使用NSFileCoordination实现普通文件的读写同步，而数据库可以使用CoreData,Sqlite也支持同步。&lt;/p&gt;
&lt;h2 id=&quot;3-3_动态加载,_资源共享&quot;&gt;3.3 动态加载, 资源共享&lt;/h2&gt;&lt;p&gt;这个感兴趣的可以看下, 无关紧要~&lt;/p&gt;
&lt;p&gt;和数据共享类似，Extension和Containing App很自然地会有一些业务逻辑上可以共用的代码，这时可以通过iOS8中刚开放使用的framework实现。苹果在&lt;a href=&quot;https://developer.apple.com/library/prerelease/ios/documentation/General/Conceptual/ExtensibilityPG/ExtensionScenarios.html#//apple_ref/doc/uid/TP40014214-CH21-SW1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;App Extension Programming Guide&lt;/a&gt;中是这样描述的：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In iOS 8.0 and later, you can use an embedded framework to share code between your extension and its containing app. For example, if you develop image-processing code that you want both your Photo Editing extension and its containing app to share, you can put the code into a framework and embed it in both targets.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;即将framework分别嵌入到extension和containing app的target中实现代码共享。但这样岂不是需要分别要将framework分别copy到extension和containing app的main bundle中？&lt;/p&gt;
&lt;p&gt;参考extension和containing app数据共享，我试想能不能将framework只保存一份放在App Groups区域？&lt;/p&gt;
&lt;h3 id=&quot;3-3-1_copy_framework到App_Groups&quot;&gt;3.3.1 copy framework到App Groups&lt;/h3&gt;&lt;p&gt;在app首次启动的时候将framework放到App Groups区域：&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt;)copyFrameworkFromMainBundleToAppGroup&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSFileManager&lt;/span&gt; *manager = [&lt;span class=&quot;built_in&quot;&gt;NSFileManager&lt;/span&gt; defaultManager];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSError&lt;/span&gt; *err = &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSURL&lt;/span&gt; *containerURL = [[&lt;span class=&quot;built_in&quot;&gt;NSFileManager&lt;/span&gt; defaultManager] containerURLForSecurityApplicationGroupIdentifier:&lt;span class=&quot;string&quot;&gt;@&quot;group.com.xx.test&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *sorPath = [&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; stringWithFormat:&lt;span class=&quot;string&quot;&gt;@&quot;%@/Dylib.framework&quot;&lt;/span&gt;,[[&lt;span class=&quot;built_in&quot;&gt;NSBundle&lt;/span&gt; mainBundle] bundlePath]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *desPath = [&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; stringWithFormat:&lt;span class=&quot;string&quot;&gt;@&quot;%@/Library/Caches/Dylib.framework&quot;&lt;/span&gt;,containerURL.path];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt; removeResult = [manager removeItemAtPath:desPath error:&amp;amp;err];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!removeResult) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;%@&quot;&lt;/span&gt;,err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;remove success.&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt; copyResult = [[&lt;span class=&quot;built_in&quot;&gt;NSFileManager&lt;/span&gt; defaultManager] copyItemAtPath:sorPath toPath:desPath error:&amp;amp;err];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!copyResult) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;%@&quot;&lt;/span&gt;,err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;copy success.&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; copyResult;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;3-3-2_使用framework&quot;&gt;3.3.2 使用framework&lt;/h3&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt;)loadFrameworkInAppGroup&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSError&lt;/span&gt; *err = &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSURL&lt;/span&gt; *containerURL = [[&lt;span class=&quot;built_in&quot;&gt;NSFileManager&lt;/span&gt; defaultManager] containerURLForSecurityApplicationGroupIdentifier:&lt;span class=&quot;string&quot;&gt;@&quot;group.com.xx.test&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *desPath = [&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; stringWithFormat:&lt;span class=&quot;string&quot;&gt;@&quot;%@/Library/Caches/Dylib.framework&quot;&lt;/span&gt;,containerURL.path];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSBundle&lt;/span&gt; *bundle = [&lt;span class=&quot;built_in&quot;&gt;NSBundle&lt;/span&gt; bundleWithPath:desPath];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt; result = [bundle loadAndReturnError:&amp;amp;err];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (result) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Class root = &lt;span class=&quot;built_in&quot;&gt;NSClassFromString&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;Person&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (root) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Person *person = [[root alloc] init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (person) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                [person run];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;%@&quot;&lt;/span&gt;,err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;经过测试，竟然能够加载成功。&lt;/p&gt;
&lt;p&gt;对比一下, 有如下总结: &lt;/p&gt;
&lt;p&gt;主要验证了两种方式:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;导入公用framework到项目中, 只有&lt;strong&gt;containing app&lt;/strong&gt; 的 &lt;strong&gt;Link Binary With Libraries&lt;/strong&gt;添加对应framework, extension运行时动态加载framework。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;containing app&lt;/strong&gt; 和 &lt;strong&gt;extension&lt;/strong&gt;的&lt;strong&gt;Link Binary With Libraries&lt;/strong&gt;分别链接公用framework, (Compile Sources 只包含在framework这个target中)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;以上两种方式都可以做到公用资源。 区别如下:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;方式一需要App Groups, 共享资源。 方式二不需要。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;方式一需要&lt;strong&gt;containing app&lt;/strong&gt;先启动把, 把数据copy到App Groups中, &lt;strong&gt;entension&lt;/strong&gt;才能加载到。 方式二不需要。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;方式一不能直接初始化类, 比如:&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#import &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;TestFrameWork/FilterImage.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;FilterImage *filter = [[FilterImage alloc] init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;将会报错:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Undefined symbols &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; architecture x86_64:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;_OBJC_CLASS_$_FilterImage&quot;&lt;/span&gt;, referenced from:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      objc-class-ref &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; PhotoEditingViewController.o&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ld: symbol(s) not found &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; architecture x86_64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;clang: error: linker command failed with exit code &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; (use -v to see invocation)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;   需要用这样的方式:&lt;/p&gt;
   &lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Class root = &lt;span class=&quot;built_in&quot;&gt;NSClassFromString&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;FilterImage&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (root) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    FilterImage *filter = [[root alloc] init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *nameLUT = [&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; stringWithFormat:&lt;span class=&quot;string&quot;&gt;@&quot;%@/TestFrameWork.bundle/images/filter_lut_%d&quot;&lt;/span&gt;, desPath, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.imageView.image = [filter filterImage:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.input.displaySizeImage imageName:nameLUT];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;   方式二可以直接使用。 (#import “FilterImage.h”)&lt;/p&gt;
&lt;p&gt;   ​&lt;/p&gt;
&lt;p&gt;   对比了一下导出包的大小。&lt;/p&gt;
&lt;p&gt;   写了3个Demo, &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;方式一, 动态加载          12.1M&lt;/li&gt;
&lt;li&gt;方式二，静态链接         23.7M&lt;/li&gt;
&lt;li&gt;方式三，只包含framework，没有extension   11.2M&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&quot;4-_生命周期&quot;&gt;4. 生命周期&lt;/h1&gt;&lt;p&gt;下图来自官方文档，它详细描述了Extension App的生命周期 &lt;img src=&quot;http://img.my.csdn.net/uploads/201512/13/1449996016_4664.png&quot; alt=&quot;Life_Cycle&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;开始&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在用户通过host app点击extension时，系统就会实例化extension应用，这是生命周期的开始。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;执行任务&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在extension启动以后，开始执行它的使命。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;终止&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在用户取消任务，或者任务执行结束，或者开启了一个长时后台任务时，系统会将其杀掉。&lt;/p&gt;
&lt;p&gt;由此可见，extension就是为了任务而生！&lt;/p&gt;
&lt;h1 id=&quot;5-_Photo_Editing使用滤镜实战&quot;&gt;5. Photo Editing使用滤镜实战&lt;/h1&gt;&lt;p&gt;这里因为时间关系, 就直接采用 &lt;strong&gt;Apple&lt;/strong&gt; 官方例子, 不再重新写了。如果实践过程中, 有遇到任何问题, 欢迎留言或者其他方式与我交流~&lt;/p&gt;
&lt;p&gt;Demo下载地址: &lt;img src=&quot;http://download.csdn.net/images/minetype/zip.gif&quot; alt=&quot;&quot;&gt;Photo Editing Extension Demo  &lt;/p&gt;
&lt;p&gt;这里有几点需要注意的。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;因为Host App是Photos, 所以我们的Extension必须适配横竖屏, 因为它的状态是跟着Host App变的, 而不是Containing App。 至于横竖屏的适配, 建议采用Size Class, 然后监听缩放模式, 来适配屏幕&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#pragma mark - UIContentContainer&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)willTransitionToTraitCollection:(&lt;span class=&quot;built_in&quot;&gt;UITraitCollection&lt;/span&gt; *)newCollection&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              withTransitionCoordinator:(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; &amp;lt;&lt;span class=&quot;built_in&quot;&gt;UIViewControllerTransitionCoordinator&lt;/span&gt;&amp;gt;)coordinator&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt; willTransitionToTraitCollection:newCollection&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 withTransitionCoordinator:coordinator];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [coordinator animateAlongsideTransition:^(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; &amp;lt;&lt;span class=&quot;built_in&quot;&gt;UIViewControllerTransitionCoordinatorContext&lt;/span&gt;&amp;gt; context) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;comment&quot;&gt;// 横屏处理&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;comment&quot;&gt;// 竖屏处理&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.view setNeedsLayout];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; completion:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;   同样, 需要获取初始状态来处理。&lt;/p&gt;
&lt;p&gt;   ​&lt;/p&gt;
   &lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.traitCollection.verticalSizeClass == &lt;span class=&quot;built_in&quot;&gt;UIUserInterfaceSizeClassCompact&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//To Do: modify something for compact vertical size&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//To Do: modify something for other vertical size&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;如果第三方库用Pod来管理的话, 需要修改pod的target, 以及添加链接。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Build Settings — &amp;gt; Other Linker Flags    **-l&amp;quot;Pods-MBProgressHUD&amp;quot;**&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&quot;6-_相关资料&quot;&gt;6. 相关资料&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/library/prerelease/ios/documentation/General/Conceptual/ExtensibilityPG/index.html#//apple_ref/doc/uid/TP40014214-CH20-SW1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;App Extension Programming Guide&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.infoq.com/news/2014/07/apple-ios8-app-extensions&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;App Extensions for iOS 8 in Depth&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://foggry.com/blog/2014/06/23/wwdc2014zhi-app-extensionsxue-xi-bi-ji/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;WWDC2014之App Extensions学习笔记&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/library/ios/samplecode/SamplePhotoEditingExtension/Introduction/Intro.html#//apple_ref/doc/uid/TP40014576&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Sample Photo Editing Extension&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;http://creativecommons.org/licenses/by/2.5/cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://i.creativecommons.org/l/by/2.5/cn/88x31.png&quot; alt=&quot;知识共享许可协议&quot;&gt;&lt;/a&gt;本作品采用&lt;a href=&quot;http://creativecommons.org/licenses/by/2.5/cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;知识共享署名 2.5 中国大陆许可协议&lt;/a&gt;进行许可，欢迎转载，但转载请注明来自&lt;a href=&quot;http://colin1994.github.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Colin’s Nest&lt;/a&gt;，并保持转载后文章内容的完整。本人保留所有版权相关权利。&lt;/p&gt;
</content:encoded>
      
      <comments>http://http://colin1994.github.io/2016/03/12/Photo-Editing-Extension/#disqus_thread</comments>
    </item>
    
    <item>
      <title>iOS启动页多语言</title>
      <link>http://http://colin1994.github.io/2016/03/12/iOS-welcome-page-multilingual/</link>
      <guid>http://http://colin1994.github.io/2016/03/12/iOS-welcome-page-multilingual/</guid>
      <pubDate>Sat, 12 Mar 2016 09:06:29 GMT</pubDate>
      <description>
      
        &lt;blockquote&gt;
&lt;p&gt; 启动页适配多语言, 想必很多 App 都有类似的需求。但是之前尝试过程中, 发现  “多语言” 的那几种实现方式, 在欢迎页上都不适应, 直到遇到了 &lt;code&gt;UILaunchImages&lt;/code&gt; ~ 下文将详细描述如何实现启动页多语言。&lt;/p&gt;
&lt;/blockquote&gt;
      
      </description>
      
      <content:encoded>&lt;blockquote&gt;
&lt;p&gt; 启动页适配多语言, 想必很多 App 都有类似的需求。但是之前尝试过程中, 发现  “多语言” 的那几种实现方式, 在欢迎页上都不适应, 直到遇到了 &lt;code&gt;UILaunchImages&lt;/code&gt; ~ 下文将详细描述如何实现启动页多语言。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;传统多语言设置&quot;&gt;传统多语言设置&lt;/h2&gt;&lt;p&gt;说起多语言, 我们无非这样实现:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;为 App 添加多语言支持。&lt;img src=&quot;http://7xkc7a.com1.z0.glb.clouddn.com/LaunchImagesLaunchImages_0.png&quot; alt=&quot;LaunchImages_0&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;添加对应的配置, 资源。 比如：&lt;/p&gt;
&lt;p&gt;文本: &lt;img src=&quot;http://7xkc7a.com1.z0.glb.clouddn.com/LaunchImagesLaunchImages_1.png&quot; alt=&quot;LaunchImages_1&quot;&gt;&lt;/p&gt;
&lt;p&gt;图片:&lt;img src=&quot;http://7xkc7a.com1.z0.glb.clouddn.com/LaunchImagesLaunchImages_2.png&quot; alt=&quot;LaunchImages_2&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用对应资源, 比如:&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;label.text = &lt;span class=&quot;built_in&quot;&gt;NSLocalizedString&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;多语言&quot;&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;再麻烦一点, 就是xib, storyboard的多语言的。 但是原理一样, 这样的方式都能实现多语言支持。So, 就是这么简单~&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://wanzao2.b0.upaiyun.com/system/pictures/181/original/%E5%BC%80%E5%BF%8309.png&quot; alt=&quot;emoji&quot;&gt;&lt;/p&gt;
&lt;p&gt; 然而, 启动页貌似不吃这套 ,,,&lt;/p&gt;
&lt;h2 id=&quot;启动页设置&quot;&gt;启动页设置&lt;/h2&gt;&lt;p&gt;先说说我们如何设置启动页吧。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Assets.xcassets&lt;/code&gt; 这玩意引入之前, 我们是对启动页图片按规范命名, 比如 Default, -568h, @2x, @3x 之类的, 让系统帮助我们自动判断对应的启动页图片。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Assets.xcassets&lt;/code&gt; 之后, 我们都了一种选择, 可以直接拖拽图片到 &lt;code&gt;LaunchImage&lt;/code&gt; 中, 并且图片命名也没那么多要求。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/262538-a84f9bece1aa8b37.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240/format/jpg&quot; alt=&quot;LaunchImage_3&quot;&gt;&lt;/p&gt;
&lt;p&gt;再之后, 多了 &lt;code&gt;LaunchScreen.storyboard&lt;/code&gt; , 意味着我们有了更多的选择, 可以做更多的事情, 把它当做一个xib, 拖拽相关控件上去就好~&lt;/p&gt;
&lt;p&gt;方式很多, 是否意味着实现多语言的办法也很多 ?&lt;/p&gt;
&lt;p&gt;然而并不是,, &lt;img src=&quot;http://wanzao2.b0.upaiyun.com/system/pictures/283/original/%E7%94%9F%E6%B0%9411.png&quot; alt=&quot;emoji&quot;&gt;&lt;/p&gt;
&lt;p&gt;不论是对&lt;code&gt;图片&lt;/code&gt; 进行多语言, 还是 &lt;code&gt;LaunchScreen.storyboard&lt;/code&gt; 多语言, 发现启动页始终没有跟着系统语言变, 血崩..&lt;/p&gt;
&lt;p&gt;当然, 办法并不是没有, 只是没找到对的而已~ 下面介绍如何通过&lt;code&gt;UILaunchImages&lt;/code&gt; 实现启动页多语言。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;PS: 感觉 LaunchScreen.storyboard 是能做到多语言支持的, 难道是我实现过程中有问题 ? &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;UILaunchImages&quot;&gt;UILaunchImages&lt;/h2&gt;&lt;p&gt;先看一下官方文档:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;UILaunchImages (Array - iOS) Explicitly specifies the launch images to use for the app. This key contains an array of dictionaries. Each dictionary contains detailed information about a single launch image and how it is used. Xcode fills in the value of each dictionary based on information you provide in your project settings.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;显然, 我们可以通过设置 &lt;code&gt;UILaunchImages&lt;/code&gt; 来配置启动图片。&lt;/p&gt;
&lt;p&gt;至于 &lt;code&gt;UILaunchImages&lt;/code&gt; 的几个 Key , 简单描述如下: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;UILaunchImageName&lt;/code&gt; (required) 启动页资源名称&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;UILaunchImageMinimumOSVersion&lt;/code&gt;(required) 启动页支持的最低版本&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;UILaunchImageSize&lt;/code&gt; 启动页尺寸&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;UILaunchImageOrientation&lt;/code&gt; 启动页方向&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;代表什么, 都比较简单, 具体可以参考官方文档~ [  &lt;a href=&quot;https://developer.apple.com/library/ios/documentation/General/Reference/InfoPlistKeyReference/Articles/iPhoneOSKeys.html#//apple_ref/doc/uid/TP40009252-SW28&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;UILaunchImages&lt;/a&gt; ]&lt;/p&gt;
&lt;p&gt;用这种方式配置启动页也十分简单, 具体步骤:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;取消启动页使用的 Asset Catalog&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xkc7a.com1.z0.glb.clouddn.com/LaunchImages%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-03-12%20%E4%B8%8B%E5%8D%884.44.06.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在Info.plist 中添加UILaunchImages项&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;key&lt;/span&gt;&amp;gt;&lt;/span&gt;UILaunchImages&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;key&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;array&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;dict&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;key&lt;/span&gt;&amp;gt;&lt;/span&gt;UILaunchImageName&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;key&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;LaunchImage&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;key&lt;/span&gt;&amp;gt;&lt;/span&gt;UILaunchImageMinimumOSVersion&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;key&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;7.0&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;key&lt;/span&gt;&amp;gt;&lt;/span&gt;UILaunchImageSize&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;key&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;#123;320, 480&amp;#125;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;key&lt;/span&gt;&amp;gt;&lt;/span&gt;UILaunchImageOrientation&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;key&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;Portrait&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;dict&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;dict&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;key&lt;/span&gt;&amp;gt;&lt;/span&gt;UILaunchImageName&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;key&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;LaunchImage-568h&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;key&lt;/span&gt;&amp;gt;&lt;/span&gt;UILaunchImageMinimumOSVersion&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;key&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;7.0&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;key&lt;/span&gt;&amp;gt;&lt;/span&gt;UILaunchImageSize&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;key&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;#123;320, 568&amp;#125;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;key&lt;/span&gt;&amp;gt;&lt;/span&gt;UILaunchImageOrientation&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;key&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;Portrait&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;dict&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;dict&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;key&lt;/span&gt;&amp;gt;&lt;/span&gt;UILaunchImageName&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;key&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;LaunchImage-667h&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;key&lt;/span&gt;&amp;gt;&lt;/span&gt;UILaunchImageMinimumOSVersion&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;key&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;8.0&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;key&lt;/span&gt;&amp;gt;&lt;/span&gt;UILaunchImageSize&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;key&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;#123;375, 667&amp;#125;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;key&lt;/span&gt;&amp;gt;&lt;/span&gt;UILaunchImageOrientation&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;key&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;Portrait&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;dict&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;dict&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;key&lt;/span&gt;&amp;gt;&lt;/span&gt;UILaunchImageName&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;key&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;LaunchImage-736h&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;key&lt;/span&gt;&amp;gt;&lt;/span&gt;UILaunchImageMinimumOSVersion&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;key&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;8.0&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;key&lt;/span&gt;&amp;gt;&lt;/span&gt;UILaunchImageSize&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;key&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;#123;414, 736&amp;#125;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;key&lt;/span&gt;&amp;gt;&lt;/span&gt;UILaunchImageOrientation&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;key&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;Portrait&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;dict&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;array&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;   &lt;img src=&quot;http://7xkc7a.com1.z0.glb.clouddn.com/LaunchImagesF9E4E70D-B3D3-46E6-ADCE-E789F50491B3.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;添加对应的启动页资源&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xkc7a.com1.z0.glb.clouddn.com/LaunchImages863C1341-C42D-47C3-9FC7-B0F85EE78DA7.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如此, 即可完成 启动页 多语言的适配, 不信你就试试呗~ &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://wanzao2.b0.upaiyun.com/system/pictures/270/original/%E5%BE%97%E7%91%9F10.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;PS: 这里, 说明一点。 启动页只会保留一份, 也就是说, 你第一次加载完以后, 切换了语言, 再重新打开App, 它的启动页不会跟着更新的。 这也符合苹果的用户交互指引。&lt;/p&gt;
&lt;p&gt;如果你想要动态修改启动页面图LaunchImage, 抱歉！&lt;strong&gt;根据苹果的用户交互指引,该页面是在程序加载时显示的,不建议动态修改.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;正确的做法一般都是用固定的图片做启动页面图,在启动页面结束之后做任何你想做的事.&lt;/p&gt;
&lt;p&gt;如果真想动态修改启动页面,启动页面是固定的名字,可以在程序执行之后强制把页面替换掉,不过这样APP可能会被拒.&lt;/p&gt;
&lt;p&gt;该怎么设置一个动态的启动图呢？在启动图结束的时候，用一个View来展示你的动图，记得placeHolder设置为和你的LaunchImage的图片一样就行，这样就可以做出类似的效果了&lt;/p&gt;
&lt;hr&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://creativecommons.org/licenses/by/2.5/cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://i.creativecommons.org/l/by/2.5/cn/88x31.png&quot; alt=&quot;知识共享许可协议&quot;&gt;&lt;/a&gt;本作品采用&lt;a href=&quot;http://creativecommons.org/licenses/by/2.5/cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;知识共享署名 2.5 中国大陆许可协议&lt;/a&gt;进行许可，欢迎转载，但转载请注明来自&lt;a href=&quot;http://colin1994.github.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Colin’s Nest&lt;/a&gt;，并保持转载后文章内容的完整。本人保留所有版权相关权利。&lt;/p&gt;
</content:encoded>
      
      <comments>http://http://colin1994.github.io/2016/03/12/iOS-welcome-page-multilingual/#disqus_thread</comments>
    </item>
    
    <item>
      <title>仿猎豹垃圾清理</title>
      <link>http://http://colin1994.github.io/2015/07/13/Imitation-Clean-Master/</link>
      <guid>http://http://colin1994.github.io/2015/07/13/Imitation-Clean-Master/</guid>
      <pubDate>Mon, 13 Jul 2015 02:14:52 GMT</pubDate>
      <description>
      
        &lt;blockquote&gt;
&lt;p&gt;前几天无意打开猎豹内存大师, 发现它的垃圾清理很强大, 效果也不错, 闲着就研究了下。 不过.. 结果貌似和我想象的不太一样。怎么说呢, 听我下文一一分析。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;效果图:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xkc7a.com1.z0.glb.clouddn.com/imageliebao_0.PNG&quot;&gt;&lt;/p&gt;
      
      </description>
      
      <content:encoded>&lt;blockquote&gt;
&lt;p&gt;前几天无意打开猎豹内存大师, 发现它的垃圾清理很强大, 效果也不错, 闲着就研究了下。 不过.. 结果貌似和我想象的不太一样。怎么说呢, 听我下文一一分析。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;效果图:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xkc7a.com1.z0.glb.clouddn.com/imageliebao_0.PNG&quot;&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;img src=&quot;http://7xkc7a.com1.z0.glb.clouddn.com/imageliebao_1.PNG&quot;&gt;&lt;/p&gt;
&lt;p&gt;从效果图, 我们可以看出它有以下几个功能:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;获取设备上已安装的所有App&lt;/li&gt;
&lt;li&gt;获取App的信息, 包括图标和名称&lt;/li&gt;
&lt;li&gt;获取当前已用存储和可用存储&lt;/li&gt;
&lt;li&gt;扫描App动画效果&lt;/li&gt;
&lt;li&gt;清除所有App垃圾文件&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;看到这里, 你是不是也觉得很强大?&lt;/p&gt;
&lt;p&gt;然后然后, 感叹的同时, 我有几点疑惑。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;获取到所有已安装的App, 这个功能能通过审核?(我是去年在App Store上下载的这个App)&lt;/li&gt;
&lt;li&gt;App的图标如何获取到的? (因为扫描到的App包括我自己没上架的demo, icon只能是本地获取, 从其他App沙盒拿？)&lt;/li&gt;
&lt;li&gt;垃圾清理过程, 为什么会出现“存储容量已满”这个提示？ 明明是清理垃圾, 中途还会出现存储满的情况?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;困惑, 不解..~ 于是乎, 折腾呗。 花了两天时间。写了个小demo。&lt;/p&gt;
&lt;p&gt;效果如下:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://img.my.csdn.net/uploads/201505/28/1432801698_3530.gif&quot; width=&quot;400&quot;&gt;&lt;/p&gt;
&lt;p&gt;接下去, 我会介绍以下各个功能的实现过程, 包括:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;获取设备已安装App列表已经App信息&lt;/li&gt;
&lt;li&gt;扫描动画的实现&lt;/li&gt;
&lt;li&gt;获取已用存储和可用存储&lt;/li&gt;
&lt;li&gt;垃圾清理&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;不过, 分析之前, 说明以下, 该功能不能够上传到App Store上! 也就是说, 它通不过审核的。原因有二:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用了私有API&lt;/li&gt;
&lt;li&gt;苹果不允许App有处理内存相关功能&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;至于猎豹内存大师这个App、它也早已经被下架了。我怀疑它利用混淆代码通过的审核。至于功能的实现, 我觉得和猎豹的实现思路应该是一样的。&lt;/p&gt;
&lt;p&gt;至此, 如果你还对这篇文章感兴趣, 欢迎继续往下阅读。&lt;/p&gt;
&lt;p&gt;本文参考源码: &lt;a href=&quot;http://download.csdn.net/detail/hitwhylz/8748739&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CSDN下载_防猎豹垃圾清理&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;获取设备已安装App列表已经App信息&quot;&gt;获取设备已安装App列表已经App信息&lt;/h2&gt;&lt;h3 id=&quot;不越狱,_非私有API&quot;&gt;不越狱, 非私有API&lt;/h3&gt;&lt;p&gt;没有越狱的设备，官方没有提供api，所以只能用一些技巧，但是获取内容不全。&lt;/p&gt;
&lt;p&gt;这里主要有两种办法:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;方法一：利用URL scheme，看对于某一应用特有的url scheme，有没有响应。如果有响应，就说明安装了这个特定的app。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;说实在.. 这个办法比较傻。 App Store几百万的App, 如何枚举的过来? 并且, 也无法扫描到自己的demo。 不过, 还真有人这么干..&lt;/p&gt;
&lt;p&gt;这是对应的demo, 感兴趣可以看看。 &lt;a href=&quot;https://github.com/danielamitay/iHasApp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;iHasApp&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://developer.apple.com/library/ios/#featuredarticles/iPhoneURLScheme_Reference/Introduction/Introduction.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方教程: iPhoneURLScheme_Reference&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;方法二：利用一些方法获得当前正在运行的进程信息，从进程信息中获得安装的app信息。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://forrst.com/posts/UIDevice_Category_For_Processes-h1H&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;参考: UIDevice_Category_For_Processes&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;总的来说, 不越狱, 非私有API, 想获得完整列表, 基本没什么可能。&lt;/p&gt;
&lt;h3 id=&quot;不越狱,_私有API。&quot;&gt;不越狱, 私有API。&lt;/h3&gt;&lt;p&gt;这里就是我demo所采用的办法, 比较简单。&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#include &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;objc/runtime.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Class LSApplicationWorkspace_class = objc_getClass(&lt;span class=&quot;string&quot;&gt;&quot;LSApplicationWorkspace&quot;&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSObject&lt;/span&gt;* workspace = [LSApplicationWorkspace_class performSelector:&lt;span class=&quot;keyword&quot;&gt;@selector&lt;/span&gt;(defaultWorkspace)];  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;apps: %@&quot;&lt;/span&gt;, [workspace performSelector:&lt;span class=&quot;keyword&quot;&gt;@selector&lt;/span&gt;(allApplications)]);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;返回结果&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;LSApplicationProxy: com.qunar.iphoneclient8&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;string&quot;&gt;&quot;LSApplicationProxy: com.apple.mobilemail&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;string&quot;&gt;&quot;LSApplicationProxy: com.apple.mobilenotes&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;string&quot;&gt;&quot;LSApplicationProxy: com.apple.compass&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;string&quot;&gt;&quot;LSApplicationProxy: com.tencent.happymj&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;string&quot;&gt;&quot;LSApplicationProxy: com.apple.mobilesafari&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;string&quot;&gt;&quot;LSApplicationProxy: com.apple.reminders&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;返回的是个数据, 每个元素都是&lt;code&gt;LSApplicationProxy&lt;/code&gt;.它的description只返回了 它的bundle id。然而这并不是我们想要的。&lt;/p&gt;
&lt;p&gt;接下去我们看&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://searchcode.com/codesearch/view/15673930/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;LSApplicationProxy.h&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;形如:&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;LSApplicationProxy&lt;/span&gt;, &lt;span class=&quot;title&quot;&gt;NSArray&lt;/span&gt;, &lt;span class=&quot;title&quot;&gt;NSDictionary&lt;/span&gt;, &lt;span class=&quot;title&quot;&gt;NSProgress&lt;/span&gt;, &lt;span class=&quot;title&quot;&gt;NSString&lt;/span&gt;, &lt;span class=&quot;title&quot;&gt;NSURL&lt;/span&gt;, &lt;span class=&quot;title&quot;&gt;NSUUID&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;LSApplicationProxy&lt;/span&gt; : &lt;span class=&quot;title&quot;&gt;LSResourceProxy&lt;/span&gt; &amp;lt;&lt;span class=&quot;title&quot;&gt;NSSecureCoding&lt;/span&gt;&amp;gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSArray&lt;/span&gt; *_&lt;span class=&quot;built_in&quot;&gt;UIBackgroundModes&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *_applicationType;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSArray&lt;/span&gt; *_audioComponents;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; _bundleFlags;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSURL&lt;/span&gt; *_bundleURL;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *_bundleVersion;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSArray&lt;/span&gt; *_directionsModes;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSDictionary&lt;/span&gt; *_entitlements;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSDictionary&lt;/span&gt; *_envi&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里列举了&lt;code&gt;LSApplicationProxy&lt;/code&gt;对应的属性和方法。&lt;/p&gt;
&lt;p&gt;我们可以用如下代码, 打印下每个属性的值, 找出我们想要的。&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;、&lt;span class=&quot;comment&quot;&gt;/* 获取对象的所有属性 以及属性值 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;NSDictionary&lt;/span&gt; *)properties_aps&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;built_in&quot;&gt;NSMutableDictionary&lt;/span&gt; *props = [&lt;span class=&quot;built_in&quot;&gt;NSMutableDictionary&lt;/span&gt; dictionary];   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; outCount, i;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   objc_property_t *properties = class_copyPropertyList([&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; class], &amp;amp;outCount);   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i&amp;lt;outCount; i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       objc_property_t property = properties[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;* char_f =property_getName(property);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *propertyName = [&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; stringWithUTF8String:char_f];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; propertyValue = [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; valueForKey:(&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *)propertyName];   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (propertyValue) [props setObject:propertyValue forKey:propertyName];   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   free(properties);   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; props;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;参考: &lt;a href=&quot;http://blog.csdn.net/crazychickone/article/details/36413671&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;IOS 遍历未知对象的属性和方法&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;然后我们提取出我们需要的, 图标和应用名。&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[appsInfoArr enumerateObjectsUsingBlock:^(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; obj, &lt;span class=&quot;built_in&quot;&gt;NSUInteger&lt;/span&gt; idx, &lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt; *stop)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;NSDictionary&lt;/span&gt; *boundIconsDictionary = [obj performSelector:&lt;span class=&quot;keyword&quot;&gt;@selector&lt;/span&gt;(boundIconsDictionary)];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *iconPath = [&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; stringWithFormat:&lt;span class=&quot;string&quot;&gt;@&quot;%@/%@.png&quot;&lt;/span&gt;, [[obj performSelector:&lt;span class=&quot;keyword&quot;&gt;@selector&lt;/span&gt;(resourcesDirectoryURL)] path], [[[boundIconsDictionary objectForKey:&lt;span class=&quot;string&quot;&gt;@&quot;CFBundlePrimaryIcon&quot;&lt;/span&gt;] objectForKey:&lt;span class=&quot;string&quot;&gt;@&quot;CFBundleIconFiles&quot;&lt;/span&gt;]lastObject]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;span class=&quot;built_in&quot;&gt;UIImage&lt;/span&gt; *image = [[[&lt;span class=&quot;built_in&quot;&gt;UIImage&lt;/span&gt; alloc]initWithContentsOfFile:iconPath] TransformtoSize:&lt;span class=&quot;built_in&quot;&gt;CGSizeMake&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;65&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;65&lt;/span&gt;)];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (image)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.appsIconArr addObject:image];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.appsNameArr addObject:[obj performSelector:&lt;span class=&quot;keyword&quot;&gt;@selector&lt;/span&gt;(localizedName)]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如此, &lt;code&gt;_self.appsIconArr&lt;/code&gt; 和 &lt;code&gt;_appsNameArr&lt;/code&gt;中存储的就是我们需要的App数据了。&lt;/p&gt;
&lt;h3 id=&quot;越狱&quot;&gt;越狱&lt;/h3&gt;&lt;p&gt;.. 这里我也不懂, 也没去研究。 感兴趣的可以看看 &lt;code&gt;MobileInstallation.framework&lt;/code&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;扫描动画的实现&quot;&gt;扫描动画的实现&lt;/h2&gt;&lt;p&gt;这里主要有两个动画。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;利用UIScrollView, 实现每个App自动滚动。&lt;/li&gt;
&lt;li&gt;Animation动画, 中间扫描线的往返运动。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;至于动画, 这里我不想介绍太多。 源码里面都写清楚了。(当然, 写的比较粗糙…)&lt;/p&gt;
&lt;p&gt;简单带一下扫描线的动画实现:&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* 向左移动 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CABasicAnimation&lt;/span&gt; *animationLeft = [&lt;span class=&quot;built_in&quot;&gt;CABasicAnimation&lt;/span&gt; animationWithKeyPath:&lt;span class=&quot;string&quot;&gt;@&quot;transform.translation.x&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 动画选项的设定&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    animationLeft.duration = &lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;f; &lt;span class=&quot;comment&quot;&gt;// 持续时间&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    animationLeft.beginTime = &lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;f;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    animationLeft.autoreverses = &lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// 结束后执行逆动画&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 动画先加速后减速&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    animationLeft.timingFunction =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;built_in&quot;&gt;CAMediaTimingFunction&lt;/span&gt; functionWithName: k&lt;span class=&quot;built_in&quot;&gt;CAMediaTimingFunctionEaseInEaseOut&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 终了帧&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    animationLeft.toValue = [&lt;span class=&quot;built_in&quot;&gt;NSNumber&lt;/span&gt; numberWithFloat:&lt;span class=&quot;number&quot;&gt;-40&lt;/span&gt;];;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/* 向右移动 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CABasicAnimation&lt;/span&gt; *animationRight = [&lt;span class=&quot;built_in&quot;&gt;CABasicAnimation&lt;/span&gt; animationWithKeyPath:&lt;span class=&quot;string&quot;&gt;@&quot;transform.translation.x&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 动画选项的设定&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    animationRight.duration = &lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;f; &lt;span class=&quot;comment&quot;&gt;// 持续时间&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    animationRight.beginTime = &lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;f;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    animationRight.autoreverses = &lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// 结束后执行逆动画&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 动画先加速后减速&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    animationRight.timingFunction =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;built_in&quot;&gt;CAMediaTimingFunction&lt;/span&gt; functionWithName: k&lt;span class=&quot;built_in&quot;&gt;CAMediaTimingFunctionEaseInEaseOut&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 终了帧&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    animationRight.toValue = [&lt;span class=&quot;built_in&quot;&gt;NSNumber&lt;/span&gt; numberWithFloat:&lt;span class=&quot;number&quot;&gt;40&lt;/span&gt;];;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/* 动画组 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CAAnimationGroup&lt;/span&gt; *group = [&lt;span class=&quot;built_in&quot;&gt;CAAnimationGroup&lt;/span&gt; animation];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    group.delegate = &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    group.duration = &lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    group.repeatCount = &lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 动画结束后不变回初始状态&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    group.removedOnCompletion = &lt;span class=&quot;literal&quot;&gt;NO&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    group.fillMode = k&lt;span class=&quot;built_in&quot;&gt;CAFillModeForwards&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 添加动画&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    group.animations = [&lt;span class=&quot;built_in&quot;&gt;NSArray&lt;/span&gt; arrayWithObjects:animationLeft, animationRight, &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [mySL.layer addAnimation:group forKey:&lt;span class=&quot;string&quot;&gt;@&quot;moveLeft-moveRight-layer&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;h2 id=&quot;获取已用存储和可用存储&quot;&gt;获取已用存储和可用存储&lt;/h2&gt;&lt;p&gt;这个没什么好说的了.. Apple提供了API, 直接用就是了。&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 获取占用内存&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)usedSpaceAndfreeSpace&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt;* path = [&lt;span class=&quot;built_in&quot;&gt;NSSearchPathForDirectoriesInDomains&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;NSDocumentDirectory&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;NSUserDomainMask&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;) objectAtIndex:&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] ;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSFileManager&lt;/span&gt;* fileManager = [[&lt;span class=&quot;built_in&quot;&gt;NSFileManager&lt;/span&gt; alloc ]init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSDictionary&lt;/span&gt; *fileSysAttributes = [fileManager attributesOfFileSystemForPath:path error:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSNumber&lt;/span&gt; *freeSpace = [fileSysAttributes objectForKey:&lt;span class=&quot;built_in&quot;&gt;NSFileSystemFreeSize&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSNumber&lt;/span&gt; *totalSpace = [fileSysAttributes objectForKey:&lt;span class=&quot;built_in&quot;&gt;NSFileSystemSize&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt;  * str= [&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; stringWithFormat:&lt;span class=&quot;string&quot;&gt;@&quot;已占用%0.1f G / 剩余%0.1f MB&quot;&lt;/span&gt;,([totalSpace longLongValue] - [freeSpace longLongValue])/&lt;span class=&quot;number&quot;&gt;1024.0&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;1024.0&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;1024.0&lt;/span&gt;,[freeSpace longLongValue]/&lt;span class=&quot;number&quot;&gt;1024.0&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;1024.0&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;--------%@&quot;&lt;/span&gt;,str);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;垃圾清理&quot;&gt;垃圾清理&lt;/h2&gt;&lt;p&gt;这里我本来是不想提的，毕竟这个功能，苹果是不能接受的。&lt;/p&gt;
&lt;p&gt;之前提到了, 猎豹在清理过程中, 会出现“存储已满的提示”。然后我开始考虑了。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;为什么要弹出提示？&lt;/li&gt;
&lt;li&gt;存储真的在某一刻满了吗？&lt;/li&gt;
&lt;li&gt;它清理的时候, QQ直接被杀死, 应用名变成”正在清理…”（和安装中一个状态）。 真有这么厉害? !!!!!!&lt;/li&gt;
&lt;li&gt;这个好像在哪里见过…&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;最后, 我确定了猎豹的实现方式。它只不过是触发了Apple自己的垃圾回收机制而已。&lt;/p&gt;
&lt;p&gt;当存储满的时候, 系统会自动帮我们进行垃圾清理, 并弹出提示说明存储已满。&lt;/p&gt;
&lt;p&gt;所以, 猎豹只不过是计算了剩余多少存储, 然后制造了一个与之差不多大小的垃圾文件。 然后触发苹果的清理机制。清理完后, 删除之前生成的垃圾文件。再次统计当前可用存储, 差值即为本次清理的垃圾大小。 &lt;/p&gt;
&lt;p&gt;是吧, 其实也没那么神~&lt;/p&gt;
&lt;p&gt;至于如何快速制造几百M, 甚至几G的垃圾文件? &lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 将文件的长度设定为offset &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; -(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)truncateFileAtOffset:offset&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;truncateFileAtOffset:offset&lt;/code&gt;就能搞定了。 感兴趣的可以自己研究下。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;至此, 猎豹垃圾清理分析完毕。&lt;/p&gt;
&lt;p&gt;当然, 这只是我个人的看法。如果有更好的方式, 或者文章中存在任何错误。 欢迎交流指正。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;http://creativecommons.org/licenses/by/2.5/cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://i.creativecommons.org/l/by/2.5/cn/88x31.png&quot; alt=&quot;知识共享许可协议&quot;&gt;&lt;/a&gt;本作品采用&lt;a href=&quot;http://creativecommons.org/licenses/by/2.5/cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;知识共享署名 2.5 中国大陆许可协议&lt;/a&gt;进行许可，欢迎转载，但转载请注明来自&lt;a href=&quot;http://colin1994.github.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Colin’s Nest&lt;/a&gt;，并保持转载后文章内容的完整。本人保留所有版权相关权利。&lt;/p&gt;
</content:encoded>
      
      <comments>http://http://colin1994.github.io/2015/07/13/Imitation-Clean-Master/#disqus_thread</comments>
    </item>
    
    <item>
      <title>TODO宏实现</title>
      <link>http://http://colin1994.github.io/2015/07/12/TODO-Macro/</link>
      <guid>http://http://colin1994.github.io/2015/07/12/TODO-Macro/</guid>
      <pubDate>Sun, 12 Jul 2015 02:14:52 GMT</pubDate>
      <description>
      
        &lt;h1 id=&quot;代码备忘,_TODO宏实现&quot;&gt;代码备忘, TODO宏实现&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;我们平时在开发过程中, 往往并不是憋足气一股脑敲完全部代码。每个模块, 每个函数的实现总有个先后顺序。又或者哪个部分需要做调整, 修改… 所以, 我们需要有一个东西, 来提醒我们, 起到代码备忘功能, 避免某个功能忘记实现, 也能让我们快速定位。 所以这篇文章, 就是要实现一个TODO宏, 来达到代码备忘功能。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;效果如下:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://img.my.csdn.net/uploads/201503/15/1426387345_9339.jpeg&quot; width=&quot;500&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://img.my.csdn.net/uploads/201503/15/1426387346_3643.jpeg&quot; width=&quot;500&quot;/&gt;&lt;/p&gt;
      
      </description>
      
      <content:encoded>&lt;h1 id=&quot;代码备忘,_TODO宏实现&quot;&gt;代码备忘, TODO宏实现&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;我们平时在开发过程中, 往往并不是憋足气一股脑敲完全部代码。每个模块, 每个函数的实现总有个先后顺序。又或者哪个部分需要做调整, 修改… 所以, 我们需要有一个东西, 来提醒我们, 起到代码备忘功能, 避免某个功能忘记实现, 也能让我们快速定位。 所以这篇文章, 就是要实现一个TODO宏, 来达到代码备忘功能。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;效果如下:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://img.my.csdn.net/uploads/201503/15/1426387345_9339.jpeg&quot; width=&quot;500&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://img.my.csdn.net/uploads/201503/15/1426387346_3643.jpeg&quot; width=&quot;500&quot;&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;下面来分析下如何实现这个宏&quot;&gt;&lt;strong&gt;下面来分析下如何实现这个宏&lt;/strong&gt;&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;在实现TODO之前, 已经自带了几个预处理指令来实现报警/报错:&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#warning Colin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#error Colin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#pragma message &lt;span class=&quot;meta-string&quot;&gt;&quot;Colin&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#pragma GCC warning &lt;span class=&quot;meta-string&quot;&gt;&quot;Colin&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#pragma GCC error &lt;span class=&quot;meta-string&quot;&gt;&quot;Colin&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;效果如下:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://img.my.csdn.net/uploads/201503/15/1426387346_8391.jpeg&quot; width=&quot;500&quot;&gt;&lt;/p&gt;
&lt;p&gt;既然有了, 那为什么还需要自己实现这个TODO宏呢?&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;error 和 warning所代表的意义已经深入猿心, 我们没有理由使用它来做备忘。&lt;/li&gt;
&lt;li&gt;如果也使用warning, 在警告导航栏中, 我们很难区分哪个才是我们手动打的标记, 哪个是程序本身的warning&lt;/li&gt;
&lt;li&gt;带#的预处理指令是无法被#define的, 也就是没办法直接利用这个来定义我们的TODO&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;好在C99提供了一个 &lt;strong&gt;_Pragma&lt;/strong&gt; 运算符可以把部分#pragma指令字符串化, 如下:&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#pragma message &lt;span class=&quot;meta-string&quot;&gt;&quot;Colin&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 等价于&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;_Pragma(&lt;span class=&quot;string&quot;&gt;&quot;message \&quot;Colin\&quot;&quot;&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;// 需要注意双引号的转义&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 或&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;_Pragma(&lt;span class=&quot;string&quot;&gt;&quot;message(\&quot;Colin\&quot;)&quot;&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;// 需要注意双引号的转义&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;利用这个特性，我们就可以将warning定义成宏:&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#define MY_WARNING _Pragma(&lt;span class=&quot;meta-string&quot;&gt;&quot;message (\&quot;&lt;/span&gt;警察临检, 男左女右!\&lt;span class=&quot;meta-string&quot;&gt;&quot;)&quot;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)viewDidLoad &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt; viewDidLoad];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Do any additional setup after loading the view, typically from a nib.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    MY_WARNING&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;效果如下:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://img.my.csdn.net/uploads/201503/15/1426387346_6563.jpeg&quot; width=&quot;500&quot;&gt;&lt;/p&gt;
&lt;p&gt;到这里, 大体有那么一个感觉。 不过我们提示的内容, 是define的, 也就是写死固定的, 不太合适。&lt;/p&gt;
&lt;p&gt;所以我们希望这个宏能接受入参, 让它正常显示到warning中。&lt;/p&gt;
&lt;p&gt;这就涉及了一些宏的基本用法。&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#define STRINGIFY(S) #S&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#define PRAGMA_MESSAGE(MSG) _Pragma(STRINGIFY(message(MSG)))&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;STRINGIFY(S) 将入参转化成字符串，省去了_Pragma中全串加转义字符的困扰。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;效果如下:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://img.my.csdn.net/uploads/201503/15/1426387347_2653.jpeg&quot; width=&quot;500&quot;&gt;&lt;/p&gt;
&lt;p&gt;这时，一个基本功能的TODO宏就完成了，下面向其中加入额外的信息：&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 两个已有的宏&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#define STRINGIFY(S) #S&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#define PRAGMA_MESSAGE(MSG) _Pragma(STRINGIFY(message(MSG)))&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 延迟1次展开的宏&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#define DEFER_STRINGIFY(S) STRINGIFY(S)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 下面的宏在第一行用`\`折行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#define FORMATTED_MESSAGE(MSG) &lt;span class=&quot;meta-string&quot;&gt;&quot;[TODO-&quot;&lt;/span&gt; DEFER_STRINGIFY(__COUNTER__) &lt;span class=&quot;meta-string&quot;&gt;&quot;] &quot;&lt;/span&gt; MSG &lt;span class=&quot;meta-string&quot;&gt;&quot; \n&quot;&lt;/span&gt;  \&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    DEFER_STRINGIFY(__FILE__) &lt;span class=&quot;string&quot;&gt;&quot; line &quot;&lt;/span&gt; DEFER_STRINGIFY(__LINE__)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其中涉及到的知识：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;两个常量字符串可以拼接成一个整串 “123””456” =&amp;gt; “123456”&lt;/li&gt;
&lt;li&gt;使用到3个预定义宏，&lt;strong&gt;COUNTER&lt;/strong&gt;宏展开次数的计数器，全局唯一；&lt;strong&gt;FILE&lt;/strong&gt;当前文件完整目录字符串；&lt;strong&gt;LINE&lt;/strong&gt;在当前文件第几行&lt;/li&gt;
&lt;li&gt;在字符串中预定义宏应延时展开，如果将上面的DEFER&lt;em&gt;STRINGIFY换成STRINGIFY的话，如&lt;strong&gt;LINE&lt;/strong&gt;不能被正确展开成行数，而是成了一个常量字符串”&lt;em&gt;_LINE&lt;/em&gt;&lt;/em&gt;“&lt;/li&gt;
&lt;li&gt;为了美化，warning message中可以使用\n换行&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;于是，使用FORMATTED_MESSAGE(MSG)宏就可以将带文件路径、序号、行数等信息加入到最终的warning中。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;其实到这步已经OK了，为了让这个宏更加抢眼，还可以借鉴RAC，把宏定义成前面加@的形式：&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#define KEYWORDIFY try &amp;#123;&amp;#125; @catch (...) &amp;#123;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;h2 id=&quot;最终版本&quot;&gt;&lt;strong&gt;最终版本&lt;/strong&gt;&lt;/h2&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 转成字符串&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#define STRINGIFY(S) #S&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 需要解两次才解开的宏&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#define DEFER_STRINGIFY(S) STRINGIFY(S)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#define PRAGMA_MESSAGE(MSG) _Pragma(STRINGIFY(message(MSG)))&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 为warning增加更多信息&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#define FORMATTED_MESSAGE(MSG) &lt;span class=&quot;meta-string&quot;&gt;&quot;[TODO-&quot;&lt;/span&gt; DEFER_STRINGIFY(__COUNTER__) &lt;span class=&quot;meta-string&quot;&gt;&quot;] &quot;&lt;/span&gt; MSG &lt;span class=&quot;meta-string&quot;&gt;&quot; \n&quot;&lt;/span&gt; DEFER_STRINGIFY(__FILE__) &lt;span class=&quot;meta-string&quot;&gt;&quot; line &quot;&lt;/span&gt; DEFER_STRINGIFY(__LINE__)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 使宏前面可以加@&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#define KEYWORDIFY try &amp;#123;&amp;#125; @catch (...) &amp;#123;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 最终使用的宏&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#define TODO(MSG) KEYWORDIFY PRAGMA_MESSAGE(FORMATTED_MESSAGE(MSG))&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;References&quot;&gt;References&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://blog.sunnyxx.com/2015/03/01/todo-macro/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.sunnyxx.com/2015/03/01/todo-macro/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://clang.llvm.org/docs/UsersManual.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://clang.llvm.org/docs/UsersManual.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/cpp/Pragmas.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://gcc.gnu.org/onlinedocs/cpp/Pragmas.html&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;http://creativecommons.org/licenses/by/2.5/cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://i.creativecommons.org/l/by/2.5/cn/88x31.png&quot; alt=&quot;知识共享许可协议&quot;&gt;&lt;/a&gt;本作品采用&lt;a href=&quot;http://creativecommons.org/licenses/by/2.5/cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;知识共享署名 2.5 中国大陆许可协议&lt;/a&gt;进行许可，欢迎转载，但转载请注明来自&lt;a href=&quot;http://colin1994.github.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Colin’s Nest&lt;/a&gt;，并保持转载后文章内容的完整。本人保留所有版权相关权利。&lt;/p&gt;
</content:encoded>
      
      <comments>http://http://colin1994.github.io/2015/07/12/TODO-Macro/#disqus_thread</comments>
    </item>
    
    <item>
      <title>正则表达式</title>
      <link>http://http://colin1994.github.io/2015/07/11/Regular-Expressions/</link>
      <guid>http://http://colin1994.github.io/2015/07/11/Regular-Expressions/</guid>
      <pubDate>Sat, 11 Jul 2015 02:14:52 GMT</pubDate>
      <description>
      
        &lt;blockquote&gt;
&lt;p&gt;正则表达式，又称正规表示法、常规表示法（英语：Regular Expression，在代码中常简写为regex、regexp或RE），计算机科学的一个概念。正则表达式使用单个字符串来描述、匹配一系列符合某个句法规则的字符串。在很多文本编辑器里，正则表达式通常被用来检索、替换那些符合某个模式的文本。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;系统自带的, 如: NSPredicate, rangeOfString：option, NSRegularExpression&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://regexkit.sourceforge.net/RegexKitLite/&quot;&gt;RegexKitLite&lt;/a&gt; RegexKitLite 是一个轻量级的 Objective-C 的正则表达式库,支持 Mac OS X 和 iOS,使用 ICU 库开发。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;至于&lt;code&gt;RegexKitLite&lt;/code&gt;, 这里不做介绍。着重介绍系统自带的那几个办法。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;PS: 阅读本文前提是您已经掌握了正则基本语法, 如果对正则还不太了解, 可以参考以下几个链接:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;正则表达式学习链接：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://doslin.com/regular%20expressions/2014/03/11/learn-regular-expressions-in-about-55-minutes.html&quot;&gt;55分钟学会正则表达式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.regexlab.com/zh/regref.htm&quot;&gt;揭开正则表达式的神秘面纱&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.regexplib.com/DisplayPatterns.aspx?cattabindex=4&amp;amp;categoryId=5&quot;&gt;RegExLib.com(正则表达式库查询)&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
      
      </description>
      
      <content:encoded>&lt;blockquote&gt;
&lt;p&gt;正则表达式，又称正规表示法、常规表示法（英语：Regular Expression，在代码中常简写为regex、regexp或RE），计算机科学的一个概念。正则表达式使用单个字符串来描述、匹配一系列符合某个句法规则的字符串。在很多文本编辑器里，正则表达式通常被用来检索、替换那些符合某个模式的文本。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;系统自带的, 如: NSPredicate, rangeOfString：option, NSRegularExpression&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://regexkit.sourceforge.net/RegexKitLite/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;RegexKitLite&lt;/a&gt; RegexKitLite 是一个轻量级的 Objective-C 的正则表达式库,支持 Mac OS X 和 iOS,使用 ICU 库开发。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;至于&lt;code&gt;RegexKitLite&lt;/code&gt;, 这里不做介绍。着重介绍系统自带的那几个办法。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;PS: 阅读本文前提是您已经掌握了正则基本语法, 如果对正则还不太了解, 可以参考以下几个链接:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;正则表达式学习链接：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://doslin.com/regular%20expressions/2014/03/11/learn-regular-expressions-in-about-55-minutes.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;55分钟学会正则表达式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.regexlab.com/zh/regref.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;揭开正则表达式的神秘面纱&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.regexplib.com/DisplayPatterns.aspx?cattabindex=4&amp;amp;categoryId=5&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;RegExLib.com(正则表达式库查询)&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;1-_NSPredicate&quot;&gt;1. NSPredicate&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;简述：Cocoa框架中的NSPredicate用于查询，原理和用法都类似于SQL中的where，作用相当于数据库的过滤取。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSPredicate&lt;/span&gt; *predicate = [&lt;span class=&quot;built_in&quot;&gt;NSPredicate&lt;/span&gt; predicateWithFormat:(&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *), ...];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其中, 常见的&lt;code&gt;Format&lt;/code&gt;有:&lt;/p&gt;
&lt;p&gt;(1) 比较运算符: &amp;gt;, &amp;lt;, ==, &amp;gt;=, &amp;lt;=, !=&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;例：@&amp;quot;number &amp;gt; 100&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;(2) 范围运算符: IN, BETWEEN&lt;/p&gt;
&lt;p&gt;​    &lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;例：@&amp;quot;number BETWEEN &amp;#123;1,5&amp;#125;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   @&amp;quot;address IN &amp;#123;&amp;apos;shanghai&amp;apos;,&amp;apos;beijing&amp;apos;&amp;#125;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;(3) 字符串本身: SELF &lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;例：@“SELF == ‘APPLE’&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;(4) 字符串相关: BEGINSWITH, ENDSWITH, CONTAINS&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;例：@&amp;quot;name CONTAINS[cd] &amp;apos;ang&amp;apos;&amp;quot;  //包含某个字符串&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   @&amp;quot;name BEGINSWITH[c] &amp;apos;sh&amp;apos;&amp;quot;  //以某个字符串开头&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   @&amp;quot;name ENDSWITH[d] &amp;apos;ang&amp;apos;&amp;quot;   //以某个字符串结束&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;注:[c]不区分大小写&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   [d]不区分发音符号即没有重音符号&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   [cd]既不区分大小写，也不区分发音符号。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;(5) 通配符: LIKE&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;例：@&amp;quot;name LIKE[cd] &amp;apos;*er*&amp;apos;&amp;quot;    //*代表通配符,Like也接受[cd].&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   @&amp;quot;name LIKE[cd] &amp;apos;???er*&amp;apos;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;(6) 正则表达式: MATCHES&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;例：NSString *regex = @&amp;quot;^A.+e$&amp;quot;;   //以A开头，e结尾&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  @&amp;quot;name MATCHES %@&amp;quot;,regex&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;至于如何使用呢? 下面举几个例子:&lt;/p&gt;
&lt;p&gt;(a) 对NSArray进行过滤, 帅选出包含”ang”的项&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSArray&lt;/span&gt; *array = [[&lt;span class=&quot;built_in&quot;&gt;NSArray&lt;/span&gt; alloc]initWithObjects:&lt;span class=&quot;string&quot;&gt;@&quot;beijing&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;@&quot;shanghai&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;@&quot;guangzou&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;@&quot;wuhan&quot;&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *string = &lt;span class=&quot;string&quot;&gt;@&quot;ang&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSPredicate&lt;/span&gt; *pred = [&lt;span class=&quot;built_in&quot;&gt;NSPredicate&lt;/span&gt; predicateWithFormat:&lt;span class=&quot;string&quot;&gt;@&quot;SELF CONTAINS %@&quot;&lt;/span&gt;, string];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;%@&quot;&lt;/span&gt;, [array filteredArrayUsingPredicate:pred]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//    打印结果:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//    (&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//     shanghai,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//     guangzou&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//    )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;(b) 对NSDate进行筛选&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//日期在十天之内:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSDate&lt;/span&gt; *endDate = [&lt;span class=&quot;built_in&quot;&gt;NSDate&lt;/span&gt; date];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSTimeInterval&lt;/span&gt; timeInterval= [endDate timeIntervalSinceReferenceDate];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;timeInterval -=&lt;span class=&quot;number&quot;&gt;3600&lt;/span&gt;*&lt;span class=&quot;number&quot;&gt;24&lt;/span&gt;*&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSDate&lt;/span&gt; *beginDate = [&lt;span class=&quot;built_in&quot;&gt;NSDate&lt;/span&gt; dateWithTimeIntervalSinceReferenceDate:timeInterval];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//对coredata进行筛选(假设有fetchRequest)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSPredicate&lt;/span&gt; *predicate_date = [&lt;span class=&quot;built_in&quot;&gt;NSPredicate&lt;/span&gt; predicateWithFormat:&lt;span class=&quot;string&quot;&gt;@&quot;date &amp;gt;= %@ AND date &amp;lt;= %@&quot;&lt;/span&gt;, beginDate,endDate];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[fetchRequest setPredicate:predicate_date];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;OK, &lt;code&gt;NSPredicate&lt;/code&gt;的功能很多, 也很强大。这里暂时就点到此, 感兴趣的可以自己一一试验。 下面举两个例子说明一下如何使用正则。&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 判断是否是有效邮箱&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt;)isValidateEmail:(&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *)email&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *regex = &lt;span class=&quot;string&quot;&gt;@&quot;[A-Z0-9a-z._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]&amp;#123;2,4&amp;#125;&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSPredicate&lt;/span&gt; *predicate = [&lt;span class=&quot;built_in&quot;&gt;NSPredicate&lt;/span&gt; predicateWithFormat:&lt;span class=&quot;string&quot;&gt;@&quot;SELF MATCHES %@&quot;&lt;/span&gt;, regex];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [predicate evaluateWithObject:email];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 判断字符串首字母是否为字母&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt;)isStartedWithWord:(&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *)aString&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *regex = &lt;span class=&quot;string&quot;&gt;@&quot;[A-Za-z]+&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSPredicate&lt;/span&gt; *predicate = [&lt;span class=&quot;built_in&quot;&gt;NSPredicate&lt;/span&gt; predicateWithFormat:&lt;span class=&quot;string&quot;&gt;@&quot;SELF MATCHES %@&quot;&lt;/span&gt;, regex];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [predicate evaluateWithObject:aString];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;h2 id=&quot;2-_利用rangeOfString：option：直接查找&quot;&gt;2. 利用rangeOfString：option：直接查找&lt;/h2&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *searchText = &lt;span class=&quot;string&quot;&gt;@&quot;// Do any additional setup after loading the view, typically from a nib.&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSRange&lt;/span&gt; range = [searchText rangeOfString:&lt;span class=&quot;string&quot;&gt;@&quot;(?:[^,])*\\.&quot;&lt;/span&gt; options:&lt;span class=&quot;built_in&quot;&gt;NSRegularExpressionSearch&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (range.location != &lt;span class=&quot;built_in&quot;&gt;NSNotFound&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;%@&quot;&lt;/span&gt;, [searchText substringWithRange:range]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//    打印结果:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//      typically from a nib.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;options中设定NSRegularExpressionSearch就是表示利用正则表达式匹配，会返回第一个匹配结果的位置。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h1 id=&quot;3-_使用正则表达式类&quot;&gt;3. 使用正则表达式类&lt;/h1&gt;&lt;p&gt;详细了解:  &lt;a href=&quot;http://blog.csdn.net/crayondeng/article/details/16991579&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;iOS 正则表达式 NSRegularExpression&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;上面那篇文章总结的很不错. 这里简单再举个例子:&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *searchText = &lt;span class=&quot;string&quot;&gt;@&quot;// Do any additional setup after loading the view, typically from a nib.&quot;&lt;/span&gt;;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSError&lt;/span&gt; *error = &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSRegularExpression&lt;/span&gt; *regex = [&lt;span class=&quot;built_in&quot;&gt;NSRegularExpression&lt;/span&gt; regularExpressionWithPattern:&lt;span class=&quot;string&quot;&gt;@&quot;(?:[^,])*\\.&quot;&lt;/span&gt; options:&lt;span class=&quot;built_in&quot;&gt;NSRegularExpressionCaseInsensitive&lt;/span&gt; error:&amp;amp;error];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSTextCheckingResult&lt;/span&gt; *result = [regex firstMatchInString:searchText options:&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; range:&lt;span class=&quot;built_in&quot;&gt;NSMakeRange&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, [searchText length])];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (result) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;%@\n&quot;&lt;/span&gt;, [searchText substringWithRange:result.range]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//    打印结果:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//      typically from a nib.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;使用系统的正则表达式类（NSRegularExpression）会返回匹配的多个结果。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;针对以上3种方式, 做一个小小总结&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;第一种匹配需要学习NSPredicate的写法，需要查阅苹果相关技术文档；&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果只关心第一个匹配的结果，第二种匹配较为简洁；&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果需要匹配多个结果，同时匹配多次，第三种方式效率会更高。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;gt;&lt;/p&gt;
&lt;h2 id=&quot;常用正则表达式&quot;&gt;常用正则表达式&lt;/h2&gt;&lt;p&gt;参考:  &lt;a href=&quot;http://blog.csdn.net/chaoyuan899/article/details/38583759&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;IOS常用正则表达式&lt;/a&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;表达式&lt;/th&gt;
&lt;th&gt;作用&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;[\u4e00-\u9fa5]&lt;/td&gt;
&lt;td&gt;匹配中文字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;[^\x00-\xff]&lt;/td&gt;
&lt;td&gt;匹配双字节字符(包括汉字在内)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\n\s*\r&lt;/td&gt;
&lt;td&gt;匹配空白行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;lt;(\S*?)[^&amp;gt;]*&amp;gt;.*?&amp;lt;/\1&amp;gt;\&lt;/td&gt;
&lt;td&gt;&amp;lt;.*? /&amp;gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;^\s*\&lt;/td&gt;
&lt;td&gt;\s*$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\w+([-+.]\w+)*@\w+([-.]\w+)*.\w+([-.]\w+)*&lt;/td&gt;
&lt;td&gt;匹配Email地&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;[a-zA-z]+://[^\s]*&lt;/td&gt;
&lt;td&gt;匹配网址URL&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\d{3}-\d{8}\&lt;/td&gt;
&lt;td&gt;\d{4}-\d{7}&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;[1-9]\d{5}(?!\d)&lt;/td&gt;
&lt;td&gt;匹配中国邮政编码&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\d+.\d+.\d+.\d+&lt;/td&gt;
&lt;td&gt;匹配ip地址&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;http://creativecommons.org/licenses/by/2.5/cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://i.creativecommons.org/l/by/2.5/cn/88x31.png&quot; alt=&quot;知识共享许可协议&quot;&gt;&lt;/a&gt;本作品采用&lt;a href=&quot;http://creativecommons.org/licenses/by/2.5/cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;知识共享署名 2.5 中国大陆许可协议&lt;/a&gt;进行许可，欢迎转载，但转载请注明来自&lt;a href=&quot;http://colin1994.github.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Colin’s Nest&lt;/a&gt;，并保持转载后文章内容的完整。本人保留所有版权相关权利。&lt;/p&gt;
</content:encoded>
      
      <comments>http://http://colin1994.github.io/2015/07/11/Regular-Expressions/#disqus_thread</comments>
    </item>
    
    <item>
      <title>阿里, 网易, 腾讯</title>
      <link>http://http://colin1994.github.io/2015/07/11/interview-summary/</link>
      <guid>http://http://colin1994.github.io/2015/07/11/interview-summary/</guid>
      <pubDate>Sat, 11 Jul 2015 02:14:52 GMT</pubDate>
      <description>
      
        &lt;h1 id=&quot;一个多月来的面试总结(阿里,_网易,_腾讯)&quot;&gt;一个多月来的面试总结(阿里, 网易, 腾讯)&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;想必关注我的朋友都发现了, 最近我发表原创文章的数量和质量大大不如以前了, 也不怎么活跃了。主要原因是现在大三了, 7月份就能离校实习了, 所以前段时间也在为找实习忙碌着。接下去应该就能恢复正常, 继续为大家分享一些iOS开发上的小技巧, 毕竟, 也算拿到了心仪的offer。&lt;/p&gt;
&lt;/blockquote&gt;
      
      </description>
      
      <content:encoded>&lt;h1 id=&quot;一个多月来的面试总结(阿里,_网易,_腾讯)&quot;&gt;一个多月来的面试总结(阿里, 网易, 腾讯)&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;想必关注我的朋友都发现了, 最近我发表原创文章的数量和质量大大不如以前了, 也不怎么活跃了。主要原因是现在大三了, 7月份就能离校实习了, 所以前段时间也在为找实习忙碌着。接下去应该就能恢复正常, 继续为大家分享一些iOS开发上的小技巧, 毕竟, 也算拿到了心仪的offer。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;strong&gt;接下去, 就围绕这一个多月来参加的几场面试, 做一个总结。 设计的公司主要包括阿里研发部分, 网易邮件, 腾讯微信。希望能给同样在为找实习努力的战友提供一些帮助。(&lt;code&gt;已经拿到网易和微信的offer&lt;/code&gt;)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;PS: 总结不是空穴来风, 每次面试完, 我都会坐着认真总结之前的面试, 记录每道题, 每个答案的关键点, 再比对下自己的回答是否完整。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://img.my.csdn.net/uploads/201504/25/1429944250_1723.jpeg&quot; width=&quot;900&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;另外, 博客篇幅有限, 并且题目并不是适合每一位同学(我是iOS开发相关, 题目主要都是iOS相关), 所以不适合把完整的题目都描述出来, 文章主要是一些经验交流。 &lt;code&gt;如果需要完整面试题目的, 麻烦留下邮箱, 我看到了会一一发送&lt;/code&gt;。&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;以下按参加的时间先后来描述, 另外我的个人主页 &lt;a href=&quot;http://colin1994.xyz&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Colin’s Nest&lt;/a&gt;, 里面有我的一些介绍, 包括简历。感兴趣的可以瞅瞅。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;阿里_研发部门&quot;&gt;阿里_研发部门&lt;/h1&gt;&lt;p&gt;阿里是最早投的一家公司, 3月初那会, 本来还在学习科二的, 然后在阿里的学长, 催着要简历, 说内推已经开始了。于是乎, 我就借机把科二给退了(被教练骂成狗的滋味真不好受, 还好及时跑了)。学长给内推的部门是和o2o相关, iOS开发。&lt;/p&gt;
&lt;h2 id=&quot;阿里一面_电话&quot;&gt;阿里一面_电话&lt;/h2&gt;&lt;p&gt;然后等了几天, &lt;code&gt;3月9号&lt;/code&gt;, 一面开始了, 节奏很快, 总共通话时候是&lt;code&gt;26分钟&lt;/code&gt;..&lt;/p&gt;
&lt;p&gt;电话来的比较突然, 那会还在看文章呢。一面过了, 但是具体表现并不是很理想。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;先是自我介绍。&lt;/li&gt;
&lt;li&gt;&lt;p&gt;问iOS相关。 比如:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Category支持添加属性与成员变量吗&lt;/li&gt;
&lt;li&gt;iOS7之后, 蓝牙的围栏功能&lt;/li&gt;
&lt;li&gt;说说Cell重用原理&lt;br&gt;…&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;设计模式。这里主要问了iOS常用的设计模式, 以及如何应用到实际需求中去。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;MVC是否了解?介绍下使用情况。&lt;/li&gt;
&lt;li&gt;MVC里面, View怎么通知到Model&lt;/li&gt;
&lt;li&gt;了解delegate吗?并介绍&lt;/li&gt;
&lt;li&gt;如果现在要实现一个下载功能, 你要如何设计。说说每个类具体做什么&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;然后就是再交流, 对o2o有什么看法, 有没有想问他的…&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;阿里二面_电话&quot;&gt;阿里二面_电话&lt;/h2&gt;&lt;p&gt;然后又过了两天, 二面如约来了, 36分钟, 感觉比上次好, 不过结果…&lt;/p&gt;
&lt;p&gt;二面和一面一样, 都围绕iOS, 问了objc相关, 内存管理, 设计模式等。&lt;/p&gt;
&lt;p&gt;但是更多的, 询问了我平时的一些开发习惯, 以及一些设计题。&lt;/p&gt;
&lt;p&gt;比如:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果让你设计KVO, 要怎么设计&lt;/li&gt;
&lt;li&gt;现在你是如何适配的&lt;/li&gt;
&lt;li&gt;比较下storyboard和全代码&lt;/li&gt;
&lt;li&gt;如果有1w张图片要在屏幕滚动显示(每张图片满屏), 至少要几个cell, 如何实现循环滚动&lt;/li&gt;
&lt;li&gt;平时是怎么进行测试的, 内存方面怎么测试&lt;/li&gt;
&lt;li&gt;平时自己有没有封装过比较复杂的控件&lt;/li&gt;
&lt;li&gt;平时如何实现网络请求, 一般返回的数据是什么格式, 如何解析..&lt;/li&gt;
&lt;li&gt;如何实现类似 “Find My iPhone” 这样功能&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;二面相比一面来说, 准备的更充分了。回答问题上, 也比较积极, 考虑的也比较多。不过二面结束没多久, 内推状态就变成”待回绝”。 Over了…&lt;/p&gt;
&lt;p&gt;学长询问了面试官, 结果是: “整体还不错, 但总感觉少了点什么..”&lt;/p&gt;
&lt;p&gt;经历完阿里这一次, 总体来说, 对我打击还挺大的。毕竟, 第一次就跪了..  同时, 更多的是对自我的总结。&lt;/p&gt;
&lt;p&gt;首先应该是准备不够充分, 然后就是基础不够扎实。从面试官问的问题来看, &lt;code&gt;大公司还是对基础要求比较高&lt;/code&gt;。&lt;/p&gt;
&lt;h2 id=&quot;阿里校招_在线笔试&quot;&gt;阿里校招_在线笔试&lt;/h2&gt;&lt;p&gt;之后, 又投了阿里校招, 参加了在线笔试。具体题目可以在这里看到:&lt;a href=&quot;http://www.nowcoder.com/companyCenterTerminal_134&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;阿里笔试题&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;虽然笔试通过了, 不过现场面试的时间和课程冲突了, 然后就没有跑去杭州面试。&lt;/p&gt;
&lt;p&gt;于是乎, 和阿里就这样不了了之了。&lt;/p&gt;
&lt;h1 id=&quot;网易_邮件部门(拿到offer)&quot;&gt;网易_邮件部门(拿到offer)&lt;/h1&gt;&lt;p&gt;在结束阿里内推没多久, 偶然在网上看到网易的一个招聘。 因为方式比较新颖, 就关注了下。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://img.my.csdn.net/uploads/201504/25/1429947172_7894.jpg&quot; width=&quot;900&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;答案就在门的背后！(至于如何解题欢迎大家交流)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;解开这个题目后, 拿到了面试官的邮箱.. 然后抱着侥幸的心理, 就投了。&lt;/p&gt;
&lt;h2 id=&quot;网易一面_电话&quot;&gt;网易一面_电话&lt;/h2&gt;&lt;p&gt;没想到, 第二天就来电话了。效率很高。 &lt;code&gt;55分钟&lt;/code&gt;.. 感觉被虐哭了。&lt;/p&gt;
&lt;p&gt;网易考核的主要是&lt;code&gt;objc, iOS, 设计模式, 算法&lt;/code&gt;。 &lt;/p&gt;
&lt;p&gt;主要如下:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;autorelease 和 @autoreleasepool区别&lt;/li&gt;
&lt;li&gt;unsafe_unretained , weak, assign 区别&lt;/li&gt;
&lt;li&gt;在block里面, 对数组执行添加操作, 这个数组需要声明成 __block吗&lt;/li&gt;
&lt;li&gt;在block里面, 对NSInteger进行修改, 这个NSInteger是否需要声明成__blcok&lt;/li&gt;
&lt;li&gt;NSThread, NSOperation, GCD区别&lt;/li&gt;
&lt;li&gt;runtime什么时候用&lt;/li&gt;
&lt;li&gt;通知和KVO区别&lt;/li&gt;
&lt;li&gt;深度遍历和广度遍历使用场景&lt;/li&gt;
&lt;li&gt;常用的设计模式&lt;/li&gt;
&lt;li&gt;算法题 * 2&lt;/li&gt;
&lt;li&gt;自己有什么优点&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;…&lt;/p&gt;
&lt;p&gt;面完之后, 感觉整个人都不好了。&lt;code&gt;内存管理&lt;/code&gt;部分, 都能说出那么一些, 但是一说多了, 就不知道怎么回答了。总体来说, 还是基础不够扎实。研究不够透彻。&lt;/p&gt;
&lt;p&gt;然后面试完, 一个很大的感受就是, &lt;code&gt;一次面试, 学到的, 比自己闷头看书一个月, 学到的还多&lt;/code&gt;。&lt;code&gt;面试很直观的反应出了自己的不足&lt;/code&gt;。于是乎, 针对内存管理, 多线程等知识上的不足。 我重新把那本狮子头的书认真看了遍。&lt;/p&gt;
&lt;p&gt;PS: 如果觉得这方面知识也有所欠缺的话, 可以到这里下载&lt;code&gt;Objective-C高级编程 iOS与OS X多线程和内存管理.pdf&lt;/code&gt;这本书, 极力推荐。&lt;/p&gt;
&lt;p&gt;下载链接: &lt;a href=&quot;http://pan.baidu.com/s/1pJsno7p&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;电子书分享&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本以为, 网易也就是这么结束了。 没想到过了几天, 人力资源部的妹子打电话来, 约去杭州面试。&lt;/p&gt;
&lt;p&gt;于是乎于是乎, 去杭州浪了~&lt;/p&gt;
&lt;h2 id=&quot;网易二面_现场&quot;&gt;网易二面_现场&lt;/h2&gt;&lt;p&gt;初到杭州, 很巧的是在机场大巴上碰到了一个去H3C培训的大叔, 更巧的是, 他也住我那个酒店。 然后就跟着他, 一路聊到酒店.. 挺好。&lt;/p&gt;
&lt;p&gt;第二天网易面试, 还是挺紧张的。9点多到了待客大厅, 填了表, 然后等面试官。然后网易给我的一个感觉就是, 很&lt;code&gt;内敛, 低调&lt;/code&gt;, 感觉挺好。&lt;/p&gt;
&lt;p&gt;之后一下来了两个面试官, 领我到单独的小隔间面试.. 一次两个, 有点虚。&lt;/p&gt;
&lt;p&gt;不过没多久, 就适应了这种气氛, 然后和面试官交流也比较开心。&lt;/p&gt;
&lt;p&gt;主要问题如下:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;我是上次和你通电话的那位, 你觉得自己上次表现怎么样&lt;/li&gt;
&lt;li&gt;这段时间, 都在干嘛&lt;/li&gt;
&lt;li&gt;我们认真看了你的github, 感觉还不错&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;然后给我一张纸, 问了几个算法题:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;如何实现一个数组每个元素依次向右移动k位。(后头的往前面补) 比如: [1, 2, 3, 4, 5] 挪两位变成[4, 5, 1, 2, 3]&lt;/li&gt;
&lt;li&gt;实现连连看算法&lt;/li&gt;
&lt;li&gt;T9算法如何实现, 全拼算法&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;总的来说, 问的都是&lt;code&gt;算法&lt;/code&gt;相关, 没有再涉及iOS部分。 然后就算法来说, 回答的还不错。虽然每道题不是一步到位, 但是在与面试官沟通过程中, 最后都逐步完善了自己的算法。&lt;/p&gt;
&lt;p&gt;然后就是和面试官聊天了, 两位面试官都很平易近人, 聊得也比较开心。 然后就约了下午HR面。&lt;/p&gt;
&lt;p&gt;…面试完后, 包括面试官已经人力管理的妹子都邀请我去网易食堂吃饭, 不过毕竟腼腆, 我给拒绝了。出来才发现.. 找个饭店真不容易.. 早知道就厚着脸皮试试”丁家猪”了。&lt;/p&gt;
&lt;h2 id=&quot;网易HR面_现场&quot;&gt;网易HR面_现场&lt;/h2&gt;&lt;p&gt;下午HR面, HR是个很漂亮的妹子.. 整个过程都比较欢乐， 虽然一些问题上可能有不同看法。&lt;/p&gt;
&lt;p&gt;HR问的主要是一些职业规划, 抗压能力, 学习习惯, 别人怎么看待自己等等..&lt;/p&gt;
&lt;p&gt;面试完以后, HR问我接下去准备干嘛, 我说我要一路玩到萧山机场(那天酒店在萧山机场附近)。然后她打趣到:”真潇洒阿..”&lt;/p&gt;
&lt;p&gt;杭州确实很美, 不够时间关系, 就在西湖附近逛了会。 附带两张图片。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://img.my.csdn.net/uploads/201504/25/1429949156_7015.JPG&quot; width=&quot;900&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://img.my.csdn.net/uploads/201504/25/1429949125_2851.JPG&quot; width=&quot;900&quot;&gt;&lt;/p&gt;
&lt;p&gt;3.31参加完网易杭州的现场面试. 4月23号收到网易的正式offer。 总算, 踏实了…&lt;/p&gt;
&lt;h1 id=&quot;腾讯_微信事业部(拿到offer)&quot;&gt;腾讯_微信事业部(拿到offer)&lt;/h1&gt;&lt;p&gt;之前腾讯校招的时候, 投了简历。 不过一直到周围同学都参加了在线笔试, 我仍然没收到通知的时候, 我基本上已经放弃了。觉得自己应该在简历环节就被刷了, 比较凄凉..&lt;/p&gt;
&lt;h2 id=&quot;微信一面_电话&quot;&gt;微信一面_电话&lt;/h2&gt;&lt;p&gt;不过4月20的时候, 突然来了个电话, 对方说是腾讯微信事业部的。 很突然, 完全没想到。 可以说， 幸福来的太突然了..&lt;/p&gt;
&lt;p&gt;电话用时&lt;code&gt;1小时10分&lt;/code&gt;.. 中间把院长的课给翘了.. - -!&lt;/p&gt;
&lt;p&gt;主要还是围绕这几个方面: 项目, 设计模式, 算法..&lt;/p&gt;
&lt;p&gt;问题包括:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;如何保证软件质量, 怎么分析Crash日志&lt;/li&gt;
&lt;li&gt;谈谈你觉得最重要的一个项目&lt;/li&gt;
&lt;li&gt;你的个人主页是怎么写的&lt;/li&gt;
&lt;li&gt;假如我是一名初学者, 你会向我推荐哪些第三方库&lt;/li&gt;
&lt;li&gt;使用了第三方库, 有看他们是怎么实现的吗&lt;/li&gt;
&lt;li&gt;有没有看过大型项目的源码&lt;/li&gt;
&lt;li&gt;强连通量算法&lt;/li&gt;
&lt;li&gt;最短路径算法&lt;/li&gt;
&lt;li&gt;排序算法&lt;/li&gt;
&lt;li&gt;25个人, 每5人1个跑道, 最少经过几次赛跑, 得到前3名&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;腾讯给我的感觉就是, 很靠谱。 &lt;code&gt;这几轮面试, 就腾讯当场就给出了结果, 不管是一面, 二面, 还是HR面 而不是说让你再等通知。 给我的感觉非常好&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;一面最后, 这个面试官就说, 他这里通过了, 问我明天什么时候有时间, 给我约下另外一个面试官。&lt;/p&gt;
&lt;h2 id=&quot;微信二面_collabedit+电话&quot;&gt;微信二面_collabedit+电话&lt;/h2&gt;&lt;p&gt;第二天微信二面如约来了, 面试官很好。提前打电话问我有没有时间, 我表示想午睡一会, 一个小时后开始。他答应了。&lt;/p&gt;
&lt;p&gt;然后一个小时后, 另外一个面试官打电话来了, 要我登录 &lt;a href=&quot;http://collabedit.com/xxxx&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://collabedit.com/xxxx&lt;/a&gt; 答题。&lt;/p&gt;
&lt;p&gt;collabedit可以在线共享。 就是说, 我这里敲什么, 面试官那里就能同步显示。 主要是考核编码能力。&lt;/p&gt;
&lt;p&gt;主要是两个算法题, 第一道要求写出完整代码, 第二道思路交流。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;求两个整数的最大公约数&lt;/li&gt;
&lt;li&gt;微信用户都是双向的好友，a是b的好友，那么b一定是a的。给定一个用户列表，有些用户是好友，有些不是，请判断，这些用户是否可以划分为两组，每组内的用 户，互相都不是好友。如果能，请给出这个划分。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;完了之后, 面试官问了我实习时间, 然后问我对深圳和广州的看法(因为我第一志愿填的是深圳, 微信本部在广州), 问我愿意去广州吗。 之后就表示他这里也通过了。 这一两天给我约HR。&lt;/p&gt;
&lt;h2 id=&quot;微信HR面_电话&quot;&gt;微信HR面_电话&lt;/h2&gt;&lt;p&gt;果然, 两天后, 微信HR来电话了。&lt;/p&gt;
&lt;p&gt;和她聊天很轻松, 从头到尾都是喊我’龙泽 .. 龙泽’, 感觉很亲切。 主要也是围绕职业规划等展开。&lt;/p&gt;
&lt;p&gt;然后最后就问我, 是否愿意来微信实习, 如果愿意, 马上就给我offer, 如果还犹豫, 考虑清楚再联系她。&lt;/p&gt;
&lt;p&gt;当然, 我表示愿意。 然后hr留了微信号, 说安排同事给我发确认函。&lt;/p&gt;
&lt;p&gt;当天晚上, 另外一个人力资源的妹子打电话, 和我讨论薪资等问题..&lt;/p&gt;
&lt;p&gt;总的来说, 微信从一面, 到最后确定下来, 就经历了4天。 非常效率。 中间也很愉快。&lt;/p&gt;
&lt;p&gt;说来也巧, 网易和微信是同时发来来的offer。网易电话刚放下没多久, 微信hr就来电话了。所以当时两边是先都允诺能去实习了，毕竟时间太紧, 还没考虑好。&lt;/p&gt;
&lt;p&gt;之后还是因为个人原因, 选择了微信, 所以当天下午就打电话给网易, 告知了他们。多少也有些遗憾, 毕竟网易也是我很向往的一家公司。&lt;/p&gt;
&lt;p&gt;好了。 到此, 这段时间的面试总结就写好了。下面就我个人来说, 提几点建议:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;基础。 不管是哪个方向, 基础很重要。就比如iOS, objc的方方面面都必须了解。&lt;/li&gt;
&lt;li&gt;全面。 有些东西, 虽然不见得能答好, 但你至少应该懂。&lt;/li&gt;
&lt;li&gt;设计模式。 主流的那些设计模式非常有必要了解。&lt;/li&gt;
&lt;li&gt;算法。 这个不是说恶补能补好的。建议大家长期积累。 另外推荐&amp;lt;剑指offer&amp;gt;这本书。同时, 可以在这里线上答题: &lt;a href=&quot;http://www.nowcoder.com/books/coding-interviews&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;牛客网-剑指offer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;简历一定要真实! 基本上面试官都是围绕简历展开交流的。 懂或不懂, 一问就知道, 没必要搬起石头砸自己的脚&lt;/li&gt;
&lt;li&gt;提前准备。 比如自我介绍, 项目介绍, 职业规划等等。基本都是必问的题目，能提前准备就提前准备好。&lt;/li&gt;
&lt;li&gt;开源, 分享, 积累。 我一直认为, 分享和开源是程序员进步的不二法门。 我建议每个程序员都应该有自己的Github, 有自己的博客。就这几次面试来说, 博客和Github帮了我多。 网易面试官直言, 他们认真看过我的Github, 微信HR问我要CSDN博客ID, 说她很感兴趣。帮助别人, 也是帮助自己。&lt;/li&gt;
&lt;li&gt;沟通。 有时候一个问题, 可能不懂, 甚至题目都不理解。不要害怕, 主动与面试官沟通。 我在网易面试的时候, 关于全拼算法的实现, 我当时连全拼都没一个完整的概念, 它要满足哪些条件更加不清楚。我跟面试官坦诚我不懂这个概念, 与他们的一步步沟通中实现了自己的算法。 所以沟通, 远比闷头写, 到头来还可能错误来的实在。&lt;/li&gt;
&lt;li&gt;自信。 能得到面试机会, 最起码证明, 你很优秀。 我觉得自信很重要。 如果一开始, 就表现的慌慌张张, 畏首畏尾, 那么不管是你自己的发挥, 还是面试官对你的看法, 我觉得都不会很好。 &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;敲了一下午.. 真累。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;希望和我一样大三找实习的朋友, 都能拿到自己心仪的offer!&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;学习的路上, 与君共勉。&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;http://creativecommons.org/licenses/by/2.5/cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://i.creativecommons.org/l/by/2.5/cn/88x31.png&quot; alt=&quot;知识共享许可协议&quot;&gt;&lt;/a&gt;本作品采用&lt;a href=&quot;http://creativecommons.org/licenses/by/2.5/cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;知识共享署名 2.5 中国大陆许可协议&lt;/a&gt;进行许可，欢迎转载，但转载请注明来自&lt;a href=&quot;http://colin1994.github.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Colin’s Nest&lt;/a&gt;，并保持转载后文章内容的完整。本人保留所有版权相关权利。&lt;/p&gt;
</content:encoded>
      
      <comments>http://http://colin1994.github.io/2015/07/11/interview-summary/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
